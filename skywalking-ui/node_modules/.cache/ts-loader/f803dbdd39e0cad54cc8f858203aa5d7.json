{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/trace/index.ts","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/trace/index.ts","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import _defineProperty from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _mutations;\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport graph from '@/graph';\nimport * as types from '@/store/mutation-types';\nvar initState = {\n  services: [],\n  instances: [],\n  traceForm: {\n    paging: {\n      pageNum: 1,\n      pageSize: 15,\n      needTotal: true\n    },\n    queryOrder: localStorage.getItem('traceQueryOrder') || 'BY_DURATION'\n  },\n  traceList: [],\n  traceTotal: 0,\n  traceSpans: [],\n  currentTrace: {\n    operationNames: [],\n    duration: 0,\n    isError: false,\n    key: '',\n    start: '',\n    traceIds: []\n  }\n}; // getters\n\nvar getters = {}; // mutations\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_SERVICES, function (state, data) {\n  state.services = [{\n    label: 'All',\n    key: ''\n  }].concat(data);\n}), _defineProperty(_mutations, types.SET_INSTANCES, function (state, data) {\n  state.instances = [{\n    label: 'All',\n    key: ''\n  }].concat(data);\n}), _defineProperty(_mutations, types.SET_TRACE_FORM, function (state, data) {\n  if (data.queryOrder) {\n    if (data.queryOrder === '') {\n      data.queryOrder = 'BY_DURATION';\n      localStorage.setItem('traceQueryOrder', 'BY_DURATION');\n    } else {\n      localStorage.setItem('traceQueryOrder', data.queryOrder);\n    }\n  }\n\n  state.traceForm = data;\n}), _defineProperty(_mutations, types.SET_TRACE_FORM_ITEM, function (state, params) {\n  if (params.type && params.type === 'queryOrder') {\n    if (params.data === '') {\n      params.data = 'BY_DURATION';\n      localStorage.setItem('traceQueryOrder', 'BY_DURATION');\n    } else {\n      localStorage.setItem('traceQueryOrder', params.data);\n    }\n  }\n\n  state.traceForm[params.type] = params.data;\n}), _defineProperty(_mutations, types.SET_TRACELIST, function (state, data) {\n  state.traceList = data;\n}), _defineProperty(_mutations, types.SET_TRACELIST_TOTAL, function (state, data) {\n  state.traceTotal = data;\n}), _defineProperty(_mutations, types.SET_TRACE_SPANS, function (state, data) {\n  state.traceSpans = data;\n}), _defineProperty(_mutations, types.SET_CURRENT_TRACE, function (state, data) {\n  state.currentTrace = data;\n}), _defineProperty(_mutations, types.SET_DEFAULT_EMPTY_TRACE, function (state) {\n  state.currentTrace = {\n    operationNames: [],\n    duration: 0,\n    isError: false,\n    key: '',\n    start: '',\n    traceIds: []\n  };\n}), _mutations); // actions\n\nvar actions = {\n  GET_SERVICES: function GET_SERVICES(context, params) {\n    if (!params.keyword) {\n      params.keyword = '';\n    }\n\n    return graph.query('queryServices').params(params).then(function (res) {\n      context.commit(types.SET_SERVICES, res.data.data.services);\n    });\n  },\n  GET_INSTANCES: function GET_INSTANCES(context, params) {\n    return graph.query('queryServiceInstance').params(params).then(function (res) {\n      context.commit(types.SET_INSTANCES, res.data.data.instanceId);\n    });\n  },\n  SET_TRACE_FORM: function SET_TRACE_FORM(context, params) {\n    context.commit(types.SET_TRACE_FORM, params);\n  },\n  GET_TRACELIST: function GET_TRACELIST(context) {\n    context.commit(types.SET_TRACELIST, []);\n    return graph.query('queryTraces').params({\n      condition: context.state.traceForm\n    }).then(function (res) {\n      context.commit(types.SET_TRACELIST, res.data.data.traces.data);\n      context.commit(types.SET_TRACELIST_TOTAL, res.data.data.traces.total);\n    });\n  },\n  GET_TRACE_SPANS: function GET_TRACE_SPANS(context, params) {\n    context.commit(types.SET_TRACE_SPANS, []);\n    return graph.query('queryTrace').params(params).then(function (res) {\n      context.commit(types.SET_TRACE_SPANS, res.data.data.trace.spans);\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: initState,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/trace/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport graph from '@/graph';\nimport * as types from '@/store/mutation-types';\nimport { Option } from '@/types/global';\nimport { Span, Trace } from '@/types/topo';\nimport { AxiosResponse } from 'axios';\nimport { ActionTree, Commit, Dispatch, MutationTree } from 'vuex';\n\nexport interface State {\n  services: Option[];\n  instances: Option[];\n  traceForm: any;\n  traceList: Trace[];\n  traceTotal: number;\n  traceSpans: Span[];\n  currentTrace: Trace;\n}\n\nconst initState: State = {\n  services: [],\n  instances: [],\n  traceForm: {\n    paging: { pageNum: 1, pageSize: 15, needTotal: true },\n    queryOrder: localStorage.getItem('traceQueryOrder') || 'BY_DURATION',\n  },\n  traceList: [],\n  traceTotal: 0,\n  traceSpans: [],\n  currentTrace: {\n    operationNames: [],\n    duration: 0,\n    isError: false,\n    key: '',\n    start: '',\n    traceIds: [],\n  },\n};\n\n// getters\nconst getters = {};\n\n// mutations\nconst mutations: MutationTree<State> = {\n  [types.SET_SERVICES](state: State, data: Option[]): void {\n    state.services = [{ label: 'All', key: '' }].concat(data);\n  },\n  [types.SET_INSTANCES](state: State, data: Option[]): void {\n    state.instances = [{ label: 'All', key: '' }].concat(data);\n  },\n  [types.SET_TRACE_FORM](state: State, data: any): void {\n    if (data.queryOrder) {\n      if (data.queryOrder === '') {\n        data.queryOrder = 'BY_DURATION';\n        localStorage.setItem('traceQueryOrder', 'BY_DURATION');\n      } else {\n        localStorage.setItem('traceQueryOrder', data.queryOrder);\n      }\n    }\n    state.traceForm = data;\n  },\n  [types.SET_TRACE_FORM_ITEM](state: State, params: any): void {\n    if (params.type && params.type === 'queryOrder') {\n      if (params.data === '') {\n        params.data = 'BY_DURATION';\n        localStorage.setItem('traceQueryOrder', 'BY_DURATION');\n      } else {\n        localStorage.setItem('traceQueryOrder', params.data);\n      }\n    }\n    state.traceForm[params.type] = params.data;\n  },\n  [types.SET_TRACELIST](state: State, data: Trace[]): void {\n    state.traceList = data;\n  },\n  [types.SET_TRACELIST_TOTAL](state: State, data: number): void {\n    state.traceTotal = data;\n  },\n  [types.SET_TRACE_SPANS](state: State, data: Span[]): void {\n    state.traceSpans = data;\n  },\n  [types.SET_CURRENT_TRACE](state: State, data: Span): void {\n    state.currentTrace = data;\n  },\n  [types.SET_DEFAULT_EMPTY_TRACE](state: State): void {\n    state.currentTrace = {\n      operationNames: [],\n      duration: 0,\n      isError: false,\n      key: '',\n      start: '',\n      traceIds: [],\n    };\n  },\n};\n\n// actions\nconst actions: ActionTree<State, any> = {\n  GET_SERVICES(context: { commit: Commit }, params: { duration: any; keyword: string }): Promise<void> {\n    if (!params.keyword) {\n      params.keyword = '';\n    }\n    return graph\n      .query('queryServices')\n      .params(params)\n      .then((res: AxiosResponse) => {\n        context.commit(types.SET_SERVICES, res.data.data.services);\n      });\n  },\n  GET_INSTANCES(context: { commit: Commit }, params: any): Promise<void> {\n    return graph\n      .query('queryServiceInstance')\n      .params(params)\n      .then((res: AxiosResponse) => {\n        context.commit(types.SET_INSTANCES, res.data.data.instanceId);\n      });\n  },\n  SET_TRACE_FORM(context: { commit: Commit; dispatch: Dispatch }, params: any): void {\n    context.commit(types.SET_TRACE_FORM, params);\n  },\n  GET_TRACELIST(context: { state: State; commit: Commit }): Promise<void> {\n    context.commit(types.SET_TRACELIST, []);\n    return graph\n      .query('queryTraces')\n      .params({ condition: context.state.traceForm })\n      .then((res: AxiosResponse) => {\n        context.commit(types.SET_TRACELIST, res.data.data.traces.data);\n        context.commit(types.SET_TRACELIST_TOTAL, res.data.data.traces.total);\n      });\n  },\n  GET_TRACE_SPANS(context: { commit: Commit }, params: any): Promise<void> {\n    context.commit(types.SET_TRACE_SPANS, []);\n    return graph\n      .query('queryTrace')\n      .params(params)\n      .then((res: AxiosResponse) => {\n        context.commit(types.SET_TRACE_SPANS, res.data.data.trace.spans);\n      });\n  },\n};\n\nexport default {\n  namespaced: true,\n  state: initState,\n  getters,\n  actions,\n  mutations,\n};\n"],"sourceRoot":""}]}