{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/topology/index.ts","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/topology/index.ts","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _getIterator from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Set from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/core-js/set\";\nimport _Array$from from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/core-js/array/from\";\nimport _toConsumableArray from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _JSON$stringify from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\n\nvar _mutations;\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport graph from '@/graph';\nimport * as types from '../../mutation-types';\nvar PercentileItem = ['p50', 'p75', 'p90', 'p95', 'p99'];\nvar initState = {\n  callback: '',\n  mode: true,\n  detectPoints: [],\n  selectedServiceCall: null,\n  calls: [],\n  nodes: [],\n  _calls: [],\n  _nodes: [],\n  currentNode: {},\n  currentLink: {},\n  current: {\n    key: 'default',\n    label: 'default'\n  },\n  getResponseTimeTrend: [],\n  getSLATrend: [],\n  getThroughputTrend: [],\n  responsePercentile: {},\n  instanceDependency: {\n    calls: [],\n    nodes: []\n  },\n  selectedInstanceCall: null,\n  instanceDependencyMetrics: {},\n  queryInstanceMetricsType: '',\n  serviceThroughput: {\n    Throughput: []\n  },\n  serviceSLA: {\n    SLA: []\n  },\n  serviceResponseTime: {\n    ResponseTime: []\n  },\n  servicePercentile: {\n    p50: [],\n    p75: [],\n    p90: [],\n    p95: [],\n    p99: []\n  },\n  serviceApdexScore: {\n    ApdexScore: []\n  },\n  topoEndpoints: [],\n  topoInstances: []\n}; // getters\n\nvar getters = {}; // mutations\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_CALLBACK, function (state, data) {\n  state.callback = data;\n}), _defineProperty(_mutations, types.SET_MODE, function (state, data) {\n  state.detectPoints = data;\n  var temp = state.mode ? 'SERVER' : 'CLIENT';\n\n  if (data.indexOf(temp) === -1) {\n    state.mode = !state.mode;\n  }\n}), _defineProperty(_mutations, types.SET_MODE_STATUS, function (state, data) {\n  state.mode = data;\n}), _defineProperty(_mutations, types.SET_NODE, function (state, data) {\n  state.currentNode = data;\n}), _defineProperty(_mutations, types.SET_LINK, function (state, data) {\n  state.currentLink = data;\n}), _defineProperty(_mutations, types.SET_TOPO, function (state, data) {\n  state.calls = data.calls;\n  state.nodes = data.nodes;\n}), _defineProperty(_mutations, types.SET_TOPO_COPY, function (state, data) {\n  state._calls = data.calls;\n  state._nodes = data.nodes;\n}), _defineProperty(_mutations, types.SET_SELECTED_CALL, function (state, data) {\n  state.selectedServiceCall = data;\n}), _defineProperty(_mutations, types.SET_TOPO_RELATION, function (state, data) {\n  state.getResponseTimeTrend = data.getResponseTimeTrend ? data.getResponseTimeTrend.values.map(function (i) {\n    return i.value;\n  }) : [];\n  state.getSLATrend = data.getSLATrend ? data.getSLATrend.values.map(function (i) {\n    return i.value;\n  }) : [];\n  state.getThroughputTrend = data.getThroughputTrend ? data.getThroughputTrend.values.map(function (i) {\n    return i.value;\n  }) : [];\n\n  if (!data.getPercentile) {\n    state.responsePercentile = {};\n    return;\n  }\n\n  data.getPercentile.forEach(function (item, index) {\n    state.responsePercentile[PercentileItem[index]] = item.values.map(function (i) {\n      return i.value;\n    });\n  });\n}), _defineProperty(_mutations, types.SET_INSTANCE_DEPENDENCY, function (state, data) {\n  state.instanceDependency = data;\n}), _defineProperty(_mutations, types.SET_SELECTED_INSTANCE_CALL, function (state, data) {\n  state.selectedInstanceCall = data;\n}), _defineProperty(_mutations, types.SET_INSTANCE_DEPEDENCE_METRICS, function (state, data) {\n  state.instanceDependencyMetrics.getResponseTimeTrend = data.getResponseTimeTrend ? data.getResponseTimeTrend.values.map(function (i) {\n    return i.value;\n  }) : [];\n  state.instanceDependencyMetrics.getSLATrend = data.getSLATrend ? data.getSLATrend.values.map(function (i) {\n    return i.value;\n  }) : [];\n  state.instanceDependencyMetrics.getThroughputTrend = data.getThroughputTrend ? data.getThroughputTrend.values.map(function (i) {\n    return i.value;\n  }) : [];\n  state.instanceDependencyMetrics.percentResponse = {};\n\n  if (!data.getPercentile) {\n    return;\n  }\n\n  data.getPercentile.forEach(function (item, index) {\n    state.instanceDependencyMetrics.percentResponse[PercentileItem[index]] = item.values.map(function (i) {\n      return i.value;\n    });\n  });\n}), _defineProperty(_mutations, types.SET_INSTANCE_DEPEDENCE_TYPE, function (state, data) {\n  state.queryInstanceMetricsType = data;\n}), _defineProperty(_mutations, types.SET_SERVICE_DETAIL, function (state, data) {\n  state.serviceApdexScore = data.serviceApdexScore ? data.serviceApdexScore.values.map(function (i) {\n    return Number((i.value / 10000).toFixed(2));\n  }) : [];\n  state.serviceResponseTime = data.serviceResponseTime ? data.serviceResponseTime.values.map(function (i) {\n    return i.value;\n  }) : [];\n  state.serviceThroughput = data.serviceThroughput ? data.serviceThroughput.values.map(function (i) {\n    return i.value;\n  }) : [];\n  state.serviceSLA = data.serviceSLA ? data.serviceSLA.values.map(function (i) {\n    return i.value / 100;\n  }) : [];\n\n  if (!data.servicePercentile) {\n    return;\n  }\n\n  data.servicePercentile.forEach(function (item, index) {\n    state.servicePercentile[PercentileItem[index]] = item.values.map(function (i) {\n      return i.value;\n    });\n  });\n}), _defineProperty(_mutations, types.SET_TOPO_ENDPOINT, function (state, data) {\n  state.topoEndpoints = data;\n  window.localStorage.setItem('topologyEndpoints', _JSON$stringify(data));\n}), _defineProperty(_mutations, types.SET_TOPO_INSTANCE, function (state, data) {\n  state.topoInstances = data;\n  window.localStorage.setItem('topologyInstances', _JSON$stringify(data));\n}), _defineProperty(_mutations, types.EDIT_TOPO_INSTANCE_CONFIG, function (state, params) {\n  state.topoInstances[params.index] = _objectSpread({}, state.topoInstances[params.index], params.values);\n  window.localStorage.setItem('topologyInstances', _JSON$stringify(state.topoInstances));\n}), _defineProperty(_mutations, types.EDIT_TOPO_ENDPOINT_CONFIG, function (state, params) {\n  state.topoEndpoints[params.index] = _objectSpread({}, state.topoEndpoints[params.index], params.values);\n  window.localStorage.setItem('topologyEndpoints', _JSON$stringify(state.topoEndpoints));\n}), _defineProperty(_mutations, types.DELETE_TOPO_ENDPOINT, function (state, index) {\n  state.topoEndpoints.splice(index, 1);\n  window.localStorage.setItem('topologyEndpoints', _JSON$stringify(state.topoEndpoints));\n}), _defineProperty(_mutations, types.DELETE_TOPO_INSTANCE, function (state, index) {\n  state.topoInstances.splice(index, 1);\n  window.localStorage.setItem('topologyInstances', _JSON$stringify(state.topoInstances));\n}), _defineProperty(_mutations, types.ADD_TOPO_INSTANCE_COMP, function (state) {\n  var comp = {\n    width: 3,\n    title: 'Title',\n    height: 350,\n    entityType: 'ServiceInstance',\n    independentSelector: false,\n    metricType: 'UNKNOWN'\n  };\n  state.topoInstances.push(comp);\n  window.localStorage.setItem('topologyInstances', _JSON$stringify(state.topoInstances));\n}), _defineProperty(_mutations, types.ADD_TOPO_ENDPOINT_COMP, function (state) {\n  var comp = {\n    width: 3,\n    title: 'Title',\n    height: 350,\n    entityType: 'Endpoint',\n    independentSelector: false,\n    metricType: 'UNKNOWN'\n  };\n  state.topoEndpoints.push(comp);\n  window.localStorage.setItem('topologyEndpoints', _JSON$stringify(state.topoEndpoints));\n}), _mutations); // actions\n\nvar actions = {\n  FILTER_TOPO: function FILTER_TOPO(context, params) {\n    var tempCalls = _toConsumableArray(context.state._calls);\n\n    var tempNodes = _toConsumableArray(context.state._nodes);\n\n    if (params.group === 'all') {\n      context.commit(types.SET_TOPO, {\n        calls: context.state._calls,\n        nodes: context.state._nodes\n      });\n      return;\n    }\n\n    var nodeInCalls = [];\n    var resultNodes = [];\n    var resultCalls = [];\n    tempCalls.forEach(function (call) {\n      if (params.services.some(function (i) {\n        return call.source.id === i;\n      }) || params.services.some(function (i) {\n        return call.target.id === i;\n      })) {\n        nodeInCalls.push(call.source.id);\n        nodeInCalls.push(call.target.id);\n        resultCalls.push(call);\n      }\n    });\n\n    var setNodes = _Array$from(new _Set(nodeInCalls));\n\n    tempNodes.forEach(function (node) {\n      if (setNodes.some(function (i) {\n        return node.id === i;\n      })) {\n        resultNodes.push(node);\n      }\n    });\n    context.commit(types.SET_TOPO, {\n      calls: resultCalls,\n      nodes: resultNodes\n    });\n  },\n  CLEAR_TOPO: function CLEAR_TOPO(context) {\n    context.commit(types.SET_TOPO, {\n      calls: [],\n      nodes: []\n    });\n    context.commit(types.SET_TOPO_COPY, {\n      calls: [],\n      nodes: []\n    });\n  },\n  CLEAR_TOPO_INFO: function CLEAR_TOPO_INFO(context) {\n    context.commit(types.SET_TOPO_RELATION, {});\n    context.commit(types.SET_SELECTED_CALL, null);\n  },\n  GET_INSTANCE_DEPENDENCY_METRICS: function GET_INSTANCE_DEPENDENCY_METRICS(context, params) {\n    if (params.mode === 'SERVER') {\n      params.queryType = 'queryTopoInstanceServerInfo';\n      context.dispatch('INSTANCE_RELATION_INFO', params);\n    }\n\n    if (params.mode === 'CLIENT') {\n      params.queryType = 'queryTopoInstanceClientInfo';\n      context.dispatch('INSTANCE_RELATION_INFO', params);\n    }\n  },\n  GET_TOPO_SERVICE_INFO: function GET_TOPO_SERVICE_INFO(context, params) {\n    if (!params.id) {\n      return;\n    }\n\n    return graph.query('queryTopoServiceInfo').params({\n      id: params.id,\n      duration: params.duration\n    }).then(function (res) {\n      if (!res.data.data) {\n        return;\n      }\n\n      context.commit('SET_TOPO_RELATION', res.data.data);\n      context.commit(types.SET_SELECTED_CALL, params);\n    });\n  },\n  GET_TOPO_CLIENT_INFO: function GET_TOPO_CLIENT_INFO(context, params) {\n    return graph.query('queryTopoClientInfo').params(params).then(function (res) {\n      if (!res.data.data) {\n        return;\n      }\n\n      context.commit('SET_TOPO_RELATION', res.data.data);\n      context.commit(types.SET_SELECTED_CALL, params);\n    });\n  },\n  GET_TOPO_SERVICE_DETAIL: function GET_TOPO_SERVICE_DETAIL(context, params) {\n    return graph.query('queryTopoServiceDetail').params({\n      serviceId: params.serviceId,\n      duration: params.duration\n    }).then(function (res) {\n      if (!res.data.data) {\n        return;\n      }\n\n      context.commit('SET_SERVICE_DETAIL', res.data.data);\n    });\n  },\n  GET_TOPO: function GET_TOPO(context, params) {\n    var query = 'queryTopo';\n\n    if (params.serviceId) {\n      query = 'queryServiceTopo';\n    }\n\n    if (params.serviceIds) {\n      query = 'queryServicesTopo';\n    }\n\n    return graph.query(query).params(params).then(function (res) {\n      if (res.data.errors) {\n        context.commit(types.SET_TOPO, {\n          calls: [],\n          nodes: []\n        });\n        return;\n      }\n\n      var calls = res.data.data.topo.calls;\n      var nodes = res.data.data.topo.nodes;\n      var ids = nodes.map(function (i) {\n        return i.id;\n      });\n      var idsC = calls.filter(function (i) {\n        return i.detectPoints.indexOf('CLIENT') !== -1;\n      }).map(function (b) {\n        return b.id;\n      });\n      var idsS = calls.filter(function (i) {\n        return i.detectPoints.indexOf('CLIENT') === -1;\n      }).map(function (b) {\n        return b.id;\n      });\n      return graph.query('queryTopoInfo').params(_objectSpread({}, params, {\n        ids: ids,\n        idsC: idsC,\n        idsS: idsS\n      })).then(function (info) {\n        var resInfo = info.data.data;\n\n        if (!resInfo.sla) {\n          context.commit(types.SET_TOPO_COPY, {\n            calls: calls,\n            nodes: nodes\n          });\n          return context.commit(types.SET_TOPO, {\n            calls: calls,\n            nodes: nodes\n          });\n        }\n\n        for (var i = 0; i < resInfo.sla.values.length; i += 1) {\n          for (var j = 0; j < nodes.length; j += 1) {\n            if (nodes[j].id === resInfo.sla.values[i].id) {\n              nodes[j] = _objectSpread({}, nodes[j], {\n                isGroupActive: true,\n                sla: resInfo.sla.values[i].value ? resInfo.sla.values[i].value / 100 : -1,\n                cpm: resInfo.nodeCpm.values[i] ? resInfo.nodeCpm.values[i].value : -1,\n                latency: resInfo.nodeLatency.values[i] ? resInfo.nodeLatency.values[i].value : -1\n              });\n            }\n          }\n        }\n\n        if (!resInfo.cpmC) {\n          context.commit(types.SET_TOPO_COPY, {\n            calls: calls,\n            nodes: nodes\n          });\n          return context.commit(types.SET_TOPO, {\n            calls: calls,\n            nodes: nodes\n          });\n        }\n\n        for (var _i = 0; _i < resInfo.cpmC.values.length; _i += 1) {\n          for (var _j = 0; _j < calls.length; _j += 1) {\n            if (calls[_j].id === resInfo.cpmC.values[_i].id) {\n              calls[_j] = _objectSpread({}, calls[_j], {\n                isGroupActive: true,\n                cpm: resInfo.cpmC.values[_i] ? resInfo.cpmC.values[_i].value : '',\n                latency: resInfo.latencyC.values[_i] ? resInfo.latencyC.values[_i].value : ''\n              });\n            }\n          }\n        }\n\n        if (!resInfo.cpmS) {\n          context.commit(types.SET_TOPO_COPY, {\n            calls: calls,\n            nodes: nodes\n          });\n          return context.commit(types.SET_TOPO, {\n            calls: calls,\n            nodes: nodes\n          });\n        }\n\n        for (var _i2 = 0; _i2 < resInfo.cpmS.values.length; _i2 += 1) {\n          for (var _j2 = 0; _j2 < calls.length; _j2 += 1) {\n            if (calls[_j2].id === resInfo.cpmS.values[_i2].id) {\n              calls[_j2] = _objectSpread({}, calls[_j2], {\n                cpm: resInfo.cpmS.values[_i2] ? resInfo.cpmS.values[_i2].value : '',\n                latency: resInfo.latencyS.values[_i2] ? resInfo.latencyS.values[_i2].value : ''\n              });\n            }\n          }\n        }\n\n        context.commit(types.SET_TOPO_COPY, {\n          calls: calls,\n          nodes: nodes\n        });\n        context.commit(types.SET_TOPO, {\n          calls: calls,\n          nodes: nodes\n        });\n      });\n    });\n  },\n  GET_TOPO_INSTANCE_DEPENDENCY: function () {\n    var _GET_TOPO_INSTANCE_DEPENDENCY = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(context, params) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              graph.query('queryTopoInstanceDependency').params(params).then(function (res) {\n                if (!(res.data && res.data.data)) {\n                  return;\n                }\n\n                var serverIdsC = [];\n                var clientIdsC = [];\n                var topoCalls = res.data.data.topo.calls;\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                  for (var _iterator = _getIterator(topoCalls), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var call = _step.value;\n\n                    if (call.detectPoints.includes('CLIENT')) {\n                      clientIdsC.push(call.id);\n                    } else {\n                      serverIdsC.push(call.id);\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError = true;\n                  _iteratorError = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                      _iterator.return();\n                    }\n                  } finally {\n                    if (_didIteratorError) {\n                      throw _iteratorError;\n                    }\n                  }\n                }\n\n                graph.query('queryDependencyInstanceClientMetric').params({\n                  idsC: clientIdsC,\n                  duration: params.duration\n                }).then(function (json) {\n                  var clientCalls = [];\n                  var _iteratorNormalCompletion2 = true;\n                  var _didIteratorError2 = false;\n                  var _iteratorError2 = undefined;\n\n                  try {\n                    for (var _iterator2 = _getIterator(topoCalls), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                      var call = _step2.value;\n                      var _iteratorNormalCompletion5 = true;\n                      var _didIteratorError5 = false;\n                      var _iteratorError5 = undefined;\n\n                      try {\n                        for (var _iterator5 = _getIterator(json.data.data.cpmC.values), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                          var cpm = _step5.value;\n\n                          if (cpm.id === call.id) {\n                            clientCalls.push(_objectSpread({}, call, cpm));\n                          }\n                        }\n                      } catch (err) {\n                        _didIteratorError5 = true;\n                        _iteratorError5 = err;\n                      } finally {\n                        try {\n                          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                            _iterator5.return();\n                          }\n                        } finally {\n                          if (_didIteratorError5) {\n                            throw _iteratorError5;\n                          }\n                        }\n                      }\n                    }\n                  } catch (err) {\n                    _didIteratorError2 = true;\n                    _iteratorError2 = err;\n                  } finally {\n                    try {\n                      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                        _iterator2.return();\n                      }\n                    } finally {\n                      if (_didIteratorError2) {\n                        throw _iteratorError2;\n                      }\n                    }\n                  }\n\n                  graph.query('queryDependencyInstanceServerMetric').params({\n                    idsC: serverIdsC,\n                    duration: params.duration\n                  }).then(function (jsonResp) {\n                    var serverCalls = [];\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                      for (var _iterator3 = _getIterator(topoCalls), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                        var call = _step3.value;\n                        var _iteratorNormalCompletion4 = true;\n                        var _didIteratorError4 = false;\n                        var _iteratorError4 = undefined;\n\n                        try {\n                          for (var _iterator4 = _getIterator(jsonResp.data.data.cpmC.values), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                            var cpm = _step4.value;\n\n                            if (cpm.id === call.id) {\n                              serverCalls.push(_objectSpread({}, call, cpm));\n                            }\n                          }\n                        } catch (err) {\n                          _didIteratorError4 = true;\n                          _iteratorError4 = err;\n                        } finally {\n                          try {\n                            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                              _iterator4.return();\n                            }\n                          } finally {\n                            if (_didIteratorError4) {\n                              throw _iteratorError4;\n                            }\n                          }\n                        }\n                      }\n                    } catch (err) {\n                      _didIteratorError3 = true;\n                      _iteratorError3 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                          _iterator3.return();\n                        }\n                      } finally {\n                        if (_didIteratorError3) {\n                          throw _iteratorError3;\n                        }\n                      }\n                    }\n\n                    var data = {\n                      nodes: res.data.data.topo.nodes,\n                      calls: [].concat(serverCalls, clientCalls)\n                    };\n                    context.commit(types.SET_INSTANCE_DEPENDENCY, data);\n                  });\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function GET_TOPO_INSTANCE_DEPENDENCY(_x, _x2) {\n      return _GET_TOPO_INSTANCE_DEPENDENCY.apply(this, arguments);\n    }\n\n    return GET_TOPO_INSTANCE_DEPENDENCY;\n  }(),\n  INSTANCE_RELATION_INFO: function INSTANCE_RELATION_INFO(context, params) {\n    graph.query(params.queryType).params({\n      id: params.id,\n      duration: params.durationTime\n    }).then(function (res) {\n      if (!(res.data && res.data.data)) {\n        return;\n      }\n\n      context.commit(types.SET_SELECTED_INSTANCE_CALL, params);\n      context.commit(types.SET_INSTANCE_DEPEDENCE_TYPE, params.mode);\n      context.commit(types.SET_INSTANCE_DEPEDENCE_METRICS, res.data.data);\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: initState,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/topology/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Commit, ActionTree, Dispatch } from 'vuex';\nimport graph from '@/graph';\nimport * as types from '../../mutation-types';\nimport { AxiosResponse } from 'axios';\n\ninterface Option {\n  key: string;\n  label: string;\n}\ninterface Call {\n  avgResponseTime: number;\n  cpm: number;\n  isAlert: boolean;\n  source: string | any;\n  target: string | any;\n  id: string;\n  detectPoints: string[];\n}\ninterface Node {\n  apdex: number;\n  avgResponseTime: number;\n  cpm: number;\n  id: string;\n  isAlarm: boolean;\n  name: string;\n  numOfServer: number;\n  numOfServerAlarm: number;\n  numOfServiceAlarm: number;\n  sla: number;\n  type: string;\n}\n\nexport interface State {\n  callback: any;\n  calls: Call[];\n  nodes: Node[];\n  _calls: Call[];\n  _nodes: Node[];\n  detectPoints: string[];\n  selectedServiceCall: Call | null;\n  currentNode: any;\n  currentLink: any;\n  current: Option;\n  mode: boolean;\n  getResponseTimeTrend: number[];\n  getSLATrend: number[];\n  getThroughputTrend: number[];\n  responsePercentile: { [key: string]: number[] };\n  instanceDependency: {\n    calls: Call[];\n    nodes: Node[];\n  };\n  selectedInstanceCall: Call | null;\n  instanceDependencyMetrics: { [key: string]: any };\n  queryInstanceMetricsType: string;\n  serviceThroughput: { Throughput: number[] };\n  serviceSLA: { SLA: number[] };\n  serviceResponseTime: { ResponseTime: number[] };\n  servicePercentile: { [key: string]: number[] };\n  serviceApdexScore: { ApdexScore: number[] };\n  topoEndpoints: any[];\n  topoInstances: any[];\n}\n\nconst PercentileItem: string[] = ['p50', 'p75', 'p90', 'p95', 'p99'];\n\nconst initState: State = {\n  callback: '',\n  mode: true,\n  detectPoints: [],\n  selectedServiceCall: null,\n  calls: [],\n  nodes: [],\n  _calls: [],\n  _nodes: [],\n  currentNode: {},\n  currentLink: {},\n  current: {\n    key: 'default',\n    label: 'default',\n  },\n  getResponseTimeTrend: [],\n  getSLATrend: [],\n  getThroughputTrend: [],\n  responsePercentile: {},\n  instanceDependency: {\n    calls: [],\n    nodes: [],\n  },\n  selectedInstanceCall: null,\n  instanceDependencyMetrics: {},\n  queryInstanceMetricsType: '',\n  serviceThroughput: { Throughput: [] },\n  serviceSLA: { SLA: [] },\n  serviceResponseTime: { ResponseTime: [] },\n  servicePercentile: {\n    p50: [],\n    p75: [],\n    p90: [],\n    p95: [],\n    p99: [],\n  },\n  serviceApdexScore: { ApdexScore: [] },\n  topoEndpoints: [],\n  topoInstances: [],\n};\n\n// getters\nconst getters = {};\n\n// mutations\nconst mutations = {\n  [types.SET_CALLBACK](state: State, data: any) {\n    state.callback = data;\n  },\n  [types.SET_MODE](state: State, data: string[]) {\n    state.detectPoints = data;\n    const temp = state.mode ? 'SERVER' : 'CLIENT';\n    if (data.indexOf(temp) === -1) {\n      state.mode = !state.mode;\n    }\n  },\n  [types.SET_MODE_STATUS](state: State, data: boolean) {\n    state.mode = data;\n  },\n  [types.SET_NODE](state: State, data: any) {\n    state.currentNode = data;\n  },\n  [types.SET_LINK](state: State, data: any) {\n    state.currentLink = data;\n  },\n  [types.SET_TOPO](state: State, data: any) {\n    state.calls = data.calls;\n    state.nodes = data.nodes;\n  },\n  [types.SET_TOPO_COPY](state: State, data: any) {\n    state._calls = data.calls;\n    state._nodes = data.nodes;\n  },\n  [types.SET_SELECTED_CALL](state: State, data: any) {\n    state.selectedServiceCall = data;\n  },\n  [types.SET_TOPO_RELATION](state: State, data: any) {\n    state.getResponseTimeTrend = data.getResponseTimeTrend\n      ? data.getResponseTimeTrend.values.map((i: any) => i.value)\n      : [];\n    state.getSLATrend = data.getSLATrend ? data.getSLATrend.values.map((i: any) => i.value) : [];\n    state.getThroughputTrend = data.getThroughputTrend ? data.getThroughputTrend.values.map((i: any) => i.value) : [];\n\n    if (!data.getPercentile) {\n      state.responsePercentile = {};\n      return;\n    }\n    data.getPercentile.forEach((item: any, index: number) => {\n      state.responsePercentile[PercentileItem[index]] = item.values.map((i: any) => i.value);\n    });\n  },\n  [types.SET_INSTANCE_DEPENDENCY](state: State, data: any) {\n    state.instanceDependency = data;\n  },\n  [types.SET_SELECTED_INSTANCE_CALL](state: State, data: Call) {\n    state.selectedInstanceCall = data;\n  },\n  [types.SET_INSTANCE_DEPEDENCE_METRICS](state: State, data: any) {\n    state.instanceDependencyMetrics.getResponseTimeTrend = data.getResponseTimeTrend\n      ? data.getResponseTimeTrend.values.map((i: any) => i.value)\n      : [];\n    state.instanceDependencyMetrics.getSLATrend = data.getSLATrend\n      ? data.getSLATrend.values.map((i: any) => i.value)\n      : [];\n    state.instanceDependencyMetrics.getThroughputTrend = data.getThroughputTrend\n      ? data.getThroughputTrend.values.map((i: any) => i.value)\n      : [];\n    state.instanceDependencyMetrics.percentResponse = {};\n    if (!data.getPercentile) {\n      return;\n    }\n    data.getPercentile.forEach((item: any, index: number) => {\n      state.instanceDependencyMetrics.percentResponse[PercentileItem[index]] = item.values.map((i: any) => i.value);\n    });\n  },\n  [types.SET_INSTANCE_DEPEDENCE_TYPE](state: State, data: string) {\n    state.queryInstanceMetricsType = data;\n  },\n  [types.SET_SERVICE_DETAIL](state: State, data: any) {\n    state.serviceApdexScore = data.serviceApdexScore\n      ? data.serviceApdexScore.values.map((i: any) => Number((i.value / 10000).toFixed(2)))\n      : [];\n    state.serviceResponseTime = data.serviceResponseTime\n      ? data.serviceResponseTime.values.map((i: any) => i.value)\n      : [];\n    state.serviceThroughput = data.serviceThroughput ? data.serviceThroughput.values.map((i: any) => i.value) : [];\n    state.serviceSLA = data.serviceSLA ? data.serviceSLA.values.map((i: any) => i.value / 100) : [];\n    if (!data.servicePercentile) {\n      return;\n    }\n    data.servicePercentile.forEach((item: any, index: number) => {\n      state.servicePercentile[PercentileItem[index]] = item.values.map((i: any) => i.value);\n    });\n  },\n  [types.SET_TOPO_ENDPOINT](state: State, data: any[]) {\n    state.topoEndpoints = data;\n    window.localStorage.setItem('topologyEndpoints', JSON.stringify(data));\n  },\n  [types.SET_TOPO_INSTANCE](state: State, data: any[]) {\n    state.topoInstances = data;\n    window.localStorage.setItem('topologyInstances', JSON.stringify(data));\n  },\n  [types.EDIT_TOPO_INSTANCE_CONFIG](state: State, params: { values: any; index: number }) {\n    state.topoInstances[params.index] = { ...state.topoInstances[params.index], ...params.values };\n    window.localStorage.setItem('topologyInstances', JSON.stringify(state.topoInstances));\n  },\n  [types.EDIT_TOPO_ENDPOINT_CONFIG](state: State, params: { values: any; index: number }) {\n    state.topoEndpoints[params.index] = { ...state.topoEndpoints[params.index], ...params.values };\n    window.localStorage.setItem('topologyEndpoints', JSON.stringify(state.topoEndpoints));\n  },\n  [types.DELETE_TOPO_ENDPOINT](state: State, index: number) {\n    state.topoEndpoints.splice(index, 1);\n    window.localStorage.setItem('topologyEndpoints', JSON.stringify(state.topoEndpoints));\n  },\n  [types.DELETE_TOPO_INSTANCE](state: State, index: number) {\n    state.topoInstances.splice(index, 1);\n    window.localStorage.setItem('topologyInstances', JSON.stringify(state.topoInstances));\n  },\n  [types.ADD_TOPO_INSTANCE_COMP](state: State) {\n    const comp = {\n      width: 3,\n      title: 'Title',\n      height: 350,\n      entityType: 'ServiceInstance',\n      independentSelector: false,\n      metricType: 'UNKNOWN',\n    };\n    state.topoInstances.push(comp);\n    window.localStorage.setItem('topologyInstances', JSON.stringify(state.topoInstances));\n  },\n  [types.ADD_TOPO_ENDPOINT_COMP](state: State) {\n    const comp = {\n      width: 3,\n      title: 'Title',\n      height: 350,\n      entityType: 'Endpoint',\n      independentSelector: false,\n      metricType: 'UNKNOWN',\n    };\n    state.topoEndpoints.push(comp);\n    window.localStorage.setItem('topologyEndpoints', JSON.stringify(state.topoEndpoints));\n  },\n};\n\n// actions\nconst actions: ActionTree<State, any> = {\n  FILTER_TOPO(context: { commit: Commit; state: State }, params: { services: string[]; group: string }) {\n    const tempCalls = [...context.state._calls];\n    const tempNodes = [...context.state._nodes];\n    if (params.group === 'all') {\n      context.commit(types.SET_TOPO, { calls: context.state._calls, nodes: context.state._nodes });\n      return;\n    }\n    const nodeInCalls: string[] = [];\n    const resultNodes: Node[] = [];\n    const resultCalls: Call[] = [];\n    tempCalls.forEach((call: any) => {\n      if (\n        params.services.some((i: string) => call.source.id === i) ||\n        params.services.some((i: string) => call.target.id === i)\n      ) {\n        nodeInCalls.push(call.source.id);\n        nodeInCalls.push(call.target.id);\n        resultCalls.push(call);\n      }\n    });\n    const setNodes: string[] = Array.from(new Set(nodeInCalls));\n    tempNodes.forEach((node: any) => {\n      if (setNodes.some((i: string) => node.id === i)) {\n        resultNodes.push(node);\n      }\n    });\n    context.commit(types.SET_TOPO, { calls: resultCalls, nodes: resultNodes });\n  },\n  CLEAR_TOPO(context: { commit: Commit; state: State }) {\n    context.commit(types.SET_TOPO, { calls: [], nodes: [] });\n    context.commit(types.SET_TOPO_COPY, { calls: [], nodes: [] });\n  },\n  CLEAR_TOPO_INFO(context: { commit: Commit; state: State }) {\n    context.commit(types.SET_TOPO_RELATION, {});\n    context.commit(types.SET_SELECTED_CALL, null);\n  },\n  GET_INSTANCE_DEPENDENCY_METRICS(\n    context: { commit: Commit; state: State; dispatch: Dispatch; getters: any },\n    params: any,\n  ) {\n    if (params.mode === 'SERVER') {\n      params.queryType = 'queryTopoInstanceServerInfo';\n      context.dispatch('INSTANCE_RELATION_INFO', params);\n    }\n    if (params.mode === 'CLIENT') {\n      params.queryType = 'queryTopoInstanceClientInfo';\n      context.dispatch('INSTANCE_RELATION_INFO', params);\n    }\n  },\n  GET_TOPO_SERVICE_INFO(context: { commit: Commit; state: State }, params: any) {\n    if (!params.id) {\n      return;\n    }\n    return graph\n      .query('queryTopoServiceInfo')\n      .params({\n        id: params.id,\n        duration: params.duration,\n      })\n      .then((res: AxiosResponse) => {\n        if (!res.data.data) {\n          return;\n        }\n        context.commit('SET_TOPO_RELATION', res.data.data);\n        context.commit(types.SET_SELECTED_CALL, params);\n      });\n  },\n  GET_TOPO_CLIENT_INFO(context: { commit: Commit; state: State }, params: any) {\n    return graph\n      .query('queryTopoClientInfo')\n      .params(params)\n      .then((res: AxiosResponse) => {\n        if (!res.data.data) {\n          return;\n        }\n        context.commit('SET_TOPO_RELATION', res.data.data);\n        context.commit(types.SET_SELECTED_CALL, params);\n      });\n  },\n  GET_TOPO_SERVICE_DETAIL(context: { commit: Commit; state: State }, params: any) {\n    return graph\n      .query('queryTopoServiceDetail')\n      .params({\n        serviceId: params.serviceId,\n        duration: params.duration,\n      })\n      .then((res: AxiosResponse) => {\n        if (!res.data.data) {\n          return;\n        }\n        context.commit('SET_SERVICE_DETAIL', res.data.data);\n      });\n  },\n  GET_TOPO(context: { commit: Commit; state: State }, params: any) {\n    let query = 'queryTopo';\n    if (params.serviceId) {\n      query = 'queryServiceTopo';\n    }\n    if (params.serviceIds) {\n      query = 'queryServicesTopo';\n    }\n    return graph\n      .query(query)\n      .params(params)\n      .then((res: AxiosResponse) => {\n        if (res.data.errors) {\n          context.commit(types.SET_TOPO, { calls: [], nodes: [] });\n          return;\n        }\n        const calls = res.data.data.topo.calls;\n        const nodes = res.data.data.topo.nodes;\n        const ids = nodes.map((i: any) => i.id);\n        const idsC = calls.filter((i: any) => i.detectPoints.indexOf('CLIENT') !== -1).map((b: any) => b.id);\n        const idsS = calls.filter((i: any) => i.detectPoints.indexOf('CLIENT') === -1).map((b: any) => b.id);\n        return graph\n          .query('queryTopoInfo')\n          .params({ ...params, ids, idsC, idsS })\n          .then((info: AxiosResponse) => {\n            const resInfo = info.data.data;\n            if (!resInfo.sla) {\n              context.commit(types.SET_TOPO_COPY, { calls, nodes });\n              return context.commit(types.SET_TOPO, { calls, nodes });\n            }\n            for (let i = 0; i < resInfo.sla.values.length; i += 1) {\n              for (let j = 0; j < nodes.length; j += 1) {\n                if (nodes[j].id === resInfo.sla.values[i].id) {\n                  nodes[j] = {\n                    ...nodes[j],\n                    isGroupActive: true,\n                    sla: resInfo.sla.values[i].value ? resInfo.sla.values[i].value / 100 : -1,\n                    cpm: resInfo.nodeCpm.values[i] ? resInfo.nodeCpm.values[i].value : -1,\n                    latency: resInfo.nodeLatency.values[i] ? resInfo.nodeLatency.values[i].value : -1,\n                  };\n                }\n              }\n            }\n            if (!resInfo.cpmC) {\n              context.commit(types.SET_TOPO_COPY, { calls, nodes });\n              return context.commit(types.SET_TOPO, { calls, nodes });\n            }\n            for (let i = 0; i < resInfo.cpmC.values.length; i += 1) {\n              for (let j = 0; j < calls.length; j += 1) {\n                if (calls[j].id === resInfo.cpmC.values[i].id) {\n                  calls[j] = {\n                    ...calls[j],\n                    isGroupActive: true,\n                    cpm: resInfo.cpmC.values[i] ? resInfo.cpmC.values[i].value : '',\n                    latency: resInfo.latencyC.values[i] ? resInfo.latencyC.values[i].value : '',\n                  };\n                }\n              }\n            }\n            if (!resInfo.cpmS) {\n              context.commit(types.SET_TOPO_COPY, { calls, nodes });\n              return context.commit(types.SET_TOPO, { calls, nodes });\n            }\n            for (let i = 0; i < resInfo.cpmS.values.length; i += 1) {\n              for (let j = 0; j < calls.length; j += 1) {\n                if (calls[j].id === resInfo.cpmS.values[i].id) {\n                  calls[j] = {\n                    ...calls[j],\n                    cpm: resInfo.cpmS.values[i] ? resInfo.cpmS.values[i].value : '',\n                    latency: resInfo.latencyS.values[i] ? resInfo.latencyS.values[i].value : '',\n                  };\n                }\n              }\n            }\n            context.commit(types.SET_TOPO_COPY, { calls, nodes });\n            context.commit(types.SET_TOPO, { calls, nodes });\n          });\n      });\n  },\n  async GET_TOPO_INSTANCE_DEPENDENCY(\n    context: { commit: Commit; state: State },\n    params: {\n      clientServiceId: string;\n      serverServiceId: string;\n      duration: string;\n    },\n  ) {\n    graph\n      .query('queryTopoInstanceDependency')\n      .params(params)\n      .then((res: AxiosResponse) => {\n        if (!(res.data && res.data.data)) {\n          return;\n        }\n        const serverIdsC = [] as string[];\n        const clientIdsC = [] as string[];\n        const topoCalls = res.data.data.topo.calls;\n        for (const call of topoCalls) {\n          if (call.detectPoints.includes('CLIENT')) {\n            clientIdsC.push(call.id);\n          } else {\n            serverIdsC.push(call.id);\n          }\n        }\n        graph\n          .query('queryDependencyInstanceClientMetric')\n          .params({\n            idsC: clientIdsC,\n            duration: params.duration,\n          })\n          .then((json: AxiosResponse) => {\n            const clientCalls = [] as string[];\n            for (const call of topoCalls) {\n              for (const cpm of json.data.data.cpmC.values) {\n                if (cpm.id === call.id) {\n                  clientCalls.push({\n                    ...call,\n                    ...cpm,\n                  });\n                }\n              }\n            }\n            graph\n              .query('queryDependencyInstanceServerMetric')\n              .params({\n                idsC: serverIdsC,\n                duration: params.duration,\n              })\n              .then((jsonResp: AxiosResponse) => {\n                const serverCalls = [] as string[];\n                for (const call of topoCalls) {\n                  for (const cpm of jsonResp.data.data.cpmC.values) {\n                    if (cpm.id === call.id) {\n                      serverCalls.push({\n                        ...call,\n                        ...cpm,\n                      });\n                    }\n                  }\n                }\n                const data = {\n                  nodes: res.data.data.topo.nodes,\n                  calls: [...serverCalls, ...clientCalls],\n                };\n                context.commit(types.SET_INSTANCE_DEPENDENCY, data);\n              });\n          });\n      });\n  },\n  INSTANCE_RELATION_INFO(\n    context: { commit: Commit; state: State },\n    params: Call & { mode: string; queryType: string; durationTime: string },\n  ) {\n    graph\n      .query(params.queryType)\n      .params({\n        id: params.id,\n        duration: params.durationTime,\n      })\n      .then((res: AxiosResponse) => {\n        if (!(res.data && res.data.data)) {\n          return;\n        }\n        context.commit(types.SET_SELECTED_INSTANCE_CALL, params);\n        context.commit(types.SET_INSTANCE_DEPEDENCE_TYPE, params.mode);\n        context.commit(types.SET_INSTANCE_DEPEDENCE_METRICS, res.data.data);\n      });\n  },\n};\n\nexport default {\n  namespaced: true,\n  state: initState,\n  getters,\n  actions,\n  mutations,\n};\n"],"sourceRoot":""}]}