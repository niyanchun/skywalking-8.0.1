{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/topo-services.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/topo-services.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport * as tslib_1 from \"tslib\";\nimport compareObj from '@/utils/comparison';\nimport Axios from 'axios';\nimport { Component, Vue, Watch } from 'vue-property-decorator';\nimport { Action, Getter, Mutation } from 'vuex-class';\nimport TopoSelect from './topo-select.vue';\n\nvar TopoServices =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(TopoServices, _Vue);\n\n  function TopoServices() {\n    var _this;\n\n    _classCallCheck(this, TopoServices);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TopoServices).apply(this, arguments));\n    _this.services = [{\n      key: 0,\n      label: 'All services'\n    }];\n    _this.service = {\n      key: 0,\n      label: 'All services'\n    };\n    return _this;\n  }\n\n  _createClass(TopoServices, [{\n    key: \"fetchData\",\n    value: function fetchData() {\n      var _this2 = this;\n\n      Axios.post('/graphql', {\n        query: \"\\n    query queryServices($duration: Duration!) {\\n      services: getAllServices(duration: $duration) {\\n        key: id\\n        label: name\\n      }\\n    }\",\n        variables: {\n          duration: this.durationTime\n        }\n      }).then(function (res) {\n        _this2.services = res.data.data.services ? [{\n          key: 0,\n          label: 'All services'\n        }].concat(_toConsumableArray(res.data.data.services)) : [{\n          key: 0,\n          label: 'All services'\n        }];\n      });\n    }\n  }, {\n    key: \"watchDurationTime\",\n    value: function watchDurationTime(newValue, oldValue) {\n      // Avoid repeating fetchData() after enter the component for the first time.\n      if (compareObj(newValue, oldValue)) {\n        this.fetchData();\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(i) {\n      this.service = i;\n      this.UNSELECT_GROUP();\n      this.GET_TOPO({\n        serviceId: this.service.key,\n        duration: this.durationTime\n      });\n    }\n  }, {\n    key: \"created\",\n    value: function created() {\n      this.fetchData();\n      var groups = localStorage.getItem('topology-groups');\n\n      if (groups) {\n        var jsonGroup = JSON.parse(groups);\n\n        if (!jsonGroup.length) {\n          this.GET_TOPO({\n            serviceId: 0,\n            duration: this.durationTime\n          });\n        }\n      } else {\n        this.GET_TOPO({\n          serviceId: this.service.key,\n          duration: this.durationTime\n        });\n      }\n    }\n  }]);\n\n  return TopoServices;\n}(Vue);\n\ntslib_1.__decorate([Getter('durationTime')], TopoServices.prototype, \"durationTime\", void 0);\n\ntslib_1.__decorate([Action('rocketTopo/GET_TOPO')], TopoServices.prototype, \"GET_TOPO\", void 0);\n\ntslib_1.__decorate([Mutation('rocketTopoGroup/UNSELECT_GROUP')], TopoServices.prototype, \"UNSELECT_GROUP\", void 0);\n\ntslib_1.__decorate([Watch('durationTime')], TopoServices.prototype, \"watchDurationTime\", null);\n\nTopoServices = tslib_1.__decorate([Component({\n  components: {\n    TopoSelect: TopoSelect\n  }\n})], TopoServices);\nexport default TopoServices;",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/topo-services.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { DurationTime } from '@/types/global';\nimport compareObj from '@/utils/comparison';\nimport Axios, { AxiosResponse } from 'axios';\nimport { Component, Vue, Watch } from 'vue-property-decorator';\nimport { Action, Getter, Mutation } from 'vuex-class';\nimport TopoSelect from './topo-select.vue';\n\n@Component({ components: { TopoSelect } })\nexport default class TopoServices extends Vue {\n  @Getter('durationTime') public durationTime: any;\n  @Action('rocketTopo/GET_TOPO') public GET_TOPO: any;\n  @Mutation('rocketTopoGroup/UNSELECT_GROUP') private UNSELECT_GROUP: any;\n  private services = [{ key: 0, label: 'All services' }];\n  private service = { key: 0, label: 'All services' };\n\n  private fetchData() {\n    Axios.post('/graphql', {\n      query: `\n    query queryServices($duration: Duration!) {\n      services: getAllServices(duration: $duration) {\n        key: id\n        label: name\n      }\n    }`,\n      variables: {\n        duration: this.durationTime,\n      },\n    }).then((res: AxiosResponse) => {\n      this.services = res.data.data.services\n        ? [{ key: 0, label: 'All services' }, ...res.data.data.services]\n        : [{ key: 0, label: 'All services' }];\n    });\n  }\n\n  @Watch('durationTime')\n  private watchDurationTime(newValue: DurationTime, oldValue: DurationTime) {\n    // Avoid repeating fetchData() after enter the component for the first time.\n    if (compareObj(newValue, oldValue)) {\n      this.fetchData();\n    }\n  }\n\n  private handleChange(i: any) {\n    this.service = i;\n    this.UNSELECT_GROUP();\n    this.GET_TOPO({\n      serviceId: this.service.key,\n      duration: this.durationTime,\n    });\n  }\n\n  private created() {\n    this.fetchData();\n    const groups = localStorage.getItem('topology-groups');\n    if (groups) {\n      const jsonGroup = JSON.parse(groups);\n      if (!jsonGroup.length) {\n        this.GET_TOPO({\n          serviceId: 0,\n          duration: this.durationTime,\n        });\n      }\n    } else {\n      this.GET_TOPO({\n        serviceId: this.service.key,\n        duration: this.durationTime,\n      });\n    }\n  }\n}\n"],"sourceRoot":""}]}