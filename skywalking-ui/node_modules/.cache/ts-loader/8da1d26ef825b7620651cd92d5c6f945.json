{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/utils/comparison.ts","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/utils/comparison.ts","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import _Object$entries from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/core-js/object/entries\";\nimport \"core-js/modules/es6.array.sort\";\nimport _JSON$stringify from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Shallow comparison of two objects.\n * @param objA Object A to be compared\n * @param objB Object B to be compared\n * @return The same object return false, otherwise return true.\n */\nvar compareObj = function compareObj(objA, objB) {\n  return _JSON$stringify(_Object$entries(objA).sort(), null, 0) !== _JSON$stringify(_Object$entries(objB).sort(), null, 0);\n};\n\nexport default compareObj;",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/utils/comparison.ts"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;AAiBA;;;;;;AAMA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,IAAD,EAAe,IAAf,EAAwC;AACzD,SACE,gBAAe,gBAAe,IAAf,EAAqB,IAArB,EAAf,EAA4C,IAA5C,EAAkD,CAAlD,MACA,gBAAe,gBAAe,IAAf,EAAqB,IAArB,EAAf,EAA4C,IAA5C,EAAkD,CAAlD,CAFF;AAID,CALD;;AAOA,eAAe,UAAf","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Shallow comparison of two objects.\n * @param objA Object A to be compared\n * @param objB Object B to be compared\n * @return The same object return false, otherwise return true.\n */\nconst compareObj = (objA: object, objB: object): boolean => {\n  return (\n    JSON.stringify(Object.entries(objA).sort(), null, 0) !==\n    JSON.stringify(Object.entries(objB).sort(), null, 0)\n  );\n};\n\nexport default compareObj;\n"],"sourceRoot":""}]}