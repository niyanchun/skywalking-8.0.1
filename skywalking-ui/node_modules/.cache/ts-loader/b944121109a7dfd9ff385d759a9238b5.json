{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/dashboard/dashboard-data.ts","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/dashboard/dashboard-data.ts","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import _Promise from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport graph from '@/graph';\nimport dashboardLayout from './dashboard-data-layout';\nimport dashboardQuery from './dashboard-data-query';\n\nvar initState = _objectSpread({}, dashboardLayout.state); // mutations\n\n\nvar mutations = _objectSpread({}, dashboardLayout.mutations); // actions\n\n\nvar actions = _objectSpread({}, dashboardQuery.actions, {\n  MIXHANDLE_CHANGE_GROUP: function MIXHANDLE_CHANGE_GROUP(context, index) {\n    var rocketOption = context.rootState.rocketOption;\n    var temp = {};\n\n    if (rocketOption.currentService) {\n      temp.service = rocketOption.currentService;\n    }\n\n    if (rocketOption.currentEndpoint) {\n      temp.endpoint = rocketOption.currentEndpoint;\n    }\n\n    if (rocketOption.currentInstance) {\n      temp.instance = rocketOption.currentInstance;\n    }\n\n    if (rocketOption.currentDatabase) {\n      temp.database = rocketOption.currentDatabase;\n    }\n\n    context.commit('SET_GROUP_QUERY', temp);\n    context.commit('SET_CURRENT_GROUP', index);\n    context.dispatch('SET_CURRENT_STATE', context.state.tree[index].query);\n    context.dispatch('RUN_EVENTS', {}, {\n      root: true\n    });\n  },\n  MIXHANDLE_CHANGE_GROUP_WITH_CURRENT: function MIXHANDLE_CHANGE_GROUP_WITH_CURRENT(context, _ref) {\n    var index = _ref.index,\n        _ref$current = _ref.current,\n        current = _ref$current === void 0 ? 0 : _ref$current;\n    var rocketOption = context.rootState.rocketOption;\n    var temp = {};\n\n    if (rocketOption.currentService) {\n      temp.service = rocketOption.currentService;\n    }\n\n    if (rocketOption.currentEndpoint) {\n      temp.endpoint = rocketOption.currentEndpoint;\n    }\n\n    if (rocketOption.currentInstance) {\n      temp.instance = rocketOption.currentInstance;\n    }\n\n    if (rocketOption.currentDatabase) {\n      temp.database = rocketOption.currentDatabase;\n    }\n\n    context.commit('SET_GROUP_QUERY', temp);\n    context.commit('SET_CURRENT_GROUP_WITH_CURRENT', {\n      index: index,\n      current: current\n    });\n    context.dispatch('SET_CURRENT_STATE', context.state.tree[index].query);\n    context.dispatch('RUN_EVENTS', {}, {\n      root: true\n    });\n  },\n  TYPE_METRICS: function TYPE_METRICS(context, params) {\n    var metricNames = (params.name || '').split(',').map(function (item) {\n      return item.replace(/^\\s*|\\s*$/g, '');\n    });\n    return _Promise.all(metricNames.map(function (item) {\n      return graph.query('queryTypeOfMetrics').params({\n        name: item\n      }).then(function (res) {\n        return res.data.data;\n      });\n    }));\n  },\n  GET_ALL_TEMPLATES: function GET_ALL_TEMPLATES(context) {\n    return graph.query('queryGetAllTemplates').params({}).then(function (res) {\n      if (!res.data.data) {\n        return;\n      }\n\n      return res.data.data.getAllTemplates || [];\n    });\n  },\n  ADD_TEMPLATE: function ADD_TEMPLATE(context, params) {\n    return graph.query('mutationAddTemplate').params({\n      setting: params\n    }).then(function (res) {\n      if (!res.data.data) {\n        return;\n      }\n\n      return res.data.data.addTemplate || [];\n    });\n  }\n});\n\nexport default {\n  state: initState,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/dashboard/dashboard-data.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionTree, MutationTree, Commit, Dispatch } from 'vuex';\nimport { CompsTree } from '@/types/dashboard';\nimport { AxiosResponse } from 'axios';\nimport graph from '@/graph';\nimport dashboardLayout from './dashboard-data-layout';\nimport dashboardQuery from './dashboard-data-query';\n\nexport interface State {\n  current: number;\n  group: number;\n  tree: CompsTree[];\n}\n\nconst initState: State = {\n  ...dashboardLayout.state,\n};\n\n// mutations\nconst mutations: MutationTree<any> = {\n  ...dashboardLayout.mutations,\n};\n\n// actions\nconst actions: ActionTree<State, any> = {\n  ...dashboardQuery.actions,\n  MIXHANDLE_CHANGE_GROUP(\n    context: { commit: Commit; dispatch: Dispatch; state: State; rootState: any },\n    index: number,\n  ): void {\n    const rocketOption = context.rootState.rocketOption;\n    const temp: any = {};\n    if (rocketOption.currentService) {\n      temp.service = rocketOption.currentService;\n    }\n    if (rocketOption.currentEndpoint) {\n      temp.endpoint = rocketOption.currentEndpoint;\n    }\n    if (rocketOption.currentInstance) {\n      temp.instance = rocketOption.currentInstance;\n    }\n    if (rocketOption.currentDatabase) {\n      temp.database = rocketOption.currentDatabase;\n    }\n    context.commit('SET_GROUP_QUERY', temp);\n    context.commit('SET_CURRENT_GROUP', index);\n    context.dispatch('SET_CURRENT_STATE', context.state.tree[index].query);\n    context.dispatch('RUN_EVENTS', {}, { root: true });\n  },\n  MIXHANDLE_CHANGE_GROUP_WITH_CURRENT(\n    context: { commit: Commit; dispatch: Dispatch; state: State; rootState: any },\n    { index, current = 0 }: { index: number; current: number },\n  ): void {\n    const { rocketOption } = context.rootState;\n    const temp: any = {};\n    if (rocketOption.currentService) {\n      temp.service = rocketOption.currentService;\n    }\n    if (rocketOption.currentEndpoint) {\n      temp.endpoint = rocketOption.currentEndpoint;\n    }\n    if (rocketOption.currentInstance) {\n      temp.instance = rocketOption.currentInstance;\n    }\n    if (rocketOption.currentDatabase) {\n      temp.database = rocketOption.currentDatabase;\n    }\n    context.commit('SET_GROUP_QUERY', temp);\n    context.commit('SET_CURRENT_GROUP_WITH_CURRENT', { index, current });\n    context.dispatch('SET_CURRENT_STATE', context.state.tree[index].query);\n    context.dispatch('RUN_EVENTS', {}, { root: true });\n  },\n  TYPE_METRICS(context, params: { name: string }) {\n    const metricNames = (params.name || '').split(',').map((item: string) => item.replace(/^\\s*|\\s*$/g, ''));\n    return Promise.all(\n      metricNames.map((item: string) => {\n        return graph\n          .query('queryTypeOfMetrics')\n          .params({ name: item })\n          .then((res: AxiosResponse) => {\n            return res.data.data;\n          });\n      }),\n    );\n  },\n  GET_ALL_TEMPLATES(context) {\n    return graph\n      .query('queryGetAllTemplates')\n      .params({})\n      .then((res: AxiosResponse) => {\n        if (!res.data.data) {\n          return;\n        }\n        return res.data.data.getAllTemplates || [];\n      });\n  },\n  ADD_TEMPLATE(context, params) {\n    return graph\n      .query('mutationAddTemplate')\n      .params({ setting: params })\n      .then((res: AxiosResponse) => {\n        if (!res.data.data) {\n          return;\n        }\n        return res.data.data.addTemplate || [];\n      });\n  },\n};\n\nexport default {\n  state: initState,\n  actions,\n  mutations,\n};\n"],"sourceRoot":""}]}