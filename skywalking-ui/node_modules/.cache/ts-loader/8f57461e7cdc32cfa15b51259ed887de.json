{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/dashboard/dashboard-item.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/dashboard/dashboard-item.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _toConsumableArray from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _typeof from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport _getIterator from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _classCallCheck from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport * as tslib_1 from \"tslib\";\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\nimport charts from './charts';\nimport { QueryTypes } from './constant';\nimport { TopologyType, ObjectsType } from '../../constant';\nimport { CalculationType } from './charts/constant';\nimport { Mutation, State, Getter, Action } from 'vuex-class';\n\nvar DashboardItem =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(DashboardItem, _Vue);\n\n  function DashboardItem() {\n    var _this;\n\n    _classCallCheck(this, DashboardItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DashboardItem).apply(this, arguments));\n    _this.pageTypes = [TopologyType.TOPOLOGY_ENDPOINT, TopologyType.TOPOLOGY_INSTANCE];\n    _this.dialogConfigVisible = false;\n    _this.status = 'UNKNOWN';\n    _this.title = 'Title';\n    _this.unit = '';\n    _this.width = 3;\n    _this.height = 300;\n    _this.chartSource = {};\n    _this.itemConfig = {};\n    return _this;\n  }\n\n  _createClass(DashboardItem, [{\n    key: \"created\",\n    value: function created() {\n      var _this2 = this;\n\n      this.status = this.item.metricType;\n      this.title = this.item.title;\n      this.width = this.item.width;\n      this.height = this.item.height;\n      this.unit = this.item.unit;\n      this.itemConfig = this.item;\n      var types = [ObjectsType.UPDATE_INSTANCES, ObjectsType.UPDATE_ENDPOINTS, ObjectsType.UPDATE_DASHBOARD];\n\n      if (!types.includes(this.updateObjects)) {\n        return;\n      }\n\n      setTimeout(function () {\n        _this2.chartRender();\n      }, 200);\n    }\n  }, {\n    key: \"chartRender\",\n    value: function chartRender() {\n      var _this3 = this;\n\n      if (this.rocketGlobal.edit) {\n        return;\n      }\n\n      this.GET_QUERY({\n        duration: this.durationTime,\n        index: this.index,\n        type: this.type\n      }).then(function (params) {\n        if (!params) {\n          return;\n        }\n\n        if (!params.length) {\n          return;\n        }\n\n        _this3.itemConfig = params[0].config;\n        var queryMetricType = _this3.itemConfig.queryMetricType;\n        var data = params;\n\n        if (queryMetricType !== QueryTypes.ReadMetricsValues) {\n          data = [params[0]];\n        }\n\n        _this3.chartValue(data);\n      });\n    }\n  }, {\n    key: \"chartValue\",\n    value: function chartValue(data) {\n      var _this4 = this;\n\n      this.chartSource = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var params = _step.value;\n          var _params$config = params.config,\n              queryMetricType = _params$config.queryMetricType,\n              aggregation = _params$config.aggregation,\n              aggregationNum = _params$config.aggregationNum,\n              metricLabels = _params$config.metricLabels,\n              labelsIndex = _params$config.labelsIndex;\n          var resVal = params[queryMetricType];\n\n          if (queryMetricType === QueryTypes.ReadMetricsValue) {\n            _this4.chartSource = {\n              avgNum: _this4.aggregationValue({\n                data: resVal,\n                type: aggregation,\n                aggregationNum: Number(aggregationNum)\n              })\n            };\n          }\n\n          if (queryMetricType === QueryTypes.ReadMetricsValues) {\n            if (!(resVal && resVal.values)) {\n              _this4.chartSource[params.metricName] = [];\n              return {\n                v: void 0\n              };\n            }\n\n            var values = resVal.values.values;\n            _this4.chartSource[params.metricName] = values.map(function (item) {\n              return _this4.aggregationValue({\n                data: item.value,\n                type: aggregation,\n                aggregationNum: Number(aggregationNum)\n              });\n            });\n          }\n\n          if (queryMetricType === QueryTypes.SortMetrics || queryMetricType === QueryTypes.ReadSampledRecords) {\n            _this4.chartSource = (resVal || []).map(function (item) {\n              return _objectSpread({}, item, {\n                value: _this4.aggregationValue({\n                  data: item.value,\n                  type: aggregation,\n                  aggregationNum: Number(aggregationNum)\n                })\n              });\n            });\n          }\n\n          if (queryMetricType === QueryTypes.READHEATMAP) {\n            var nodes = [];\n\n            if (!(resVal && resVal.values)) {\n              _this4.chartSource = {\n                nodes: []\n              };\n              return {\n                v: void 0\n              };\n            }\n\n            resVal.values.forEach(function (items, x) {\n              var grids = items.values.map(function (val, y) {\n                return [x, y, _this4.aggregationValue({\n                  data: val,\n                  type: aggregation,\n                  aggregationNum: Number(aggregationNum)\n                })];\n              });\n              nodes.push.apply(nodes, _toConsumableArray(grids));\n            });\n            var buckets = [];\n\n            if (resVal.buckets.length) {\n              buckets = [resVal.buckets[0].min].concat(_toConsumableArray(resVal.buckets.map(function (item) {\n                return item.max;\n              })));\n            }\n\n            _this4.chartSource = {\n              nodes: nodes,\n              buckets: buckets\n            }; // nodes: number[][]\n          }\n\n          if (queryMetricType === QueryTypes.ReadLabeledMetricsValues) {\n            var labels = (metricLabels || '').split(',').map(function (item) {\n              return item.replace(/^\\s*|\\s*$/g, '');\n            });\n            var indexList = (labelsIndex || '').split(',').map(function (item) {\n              return item.replace(/^\\s*|\\s*$/g, '');\n            });\n            _this4.chartSource = {};\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              var _loop2 = function _loop2() {\n                var item = _step2.value;\n                var list = item.values.values.map(function (d) {\n                  return _this4.aggregationValue({\n                    data: d.value,\n                    type: aggregation,\n                    aggregationNum: Number(aggregationNum)\n                  });\n                });\n                var indexNum = indexList.findIndex(function (d) {\n                  return d === item.label;\n                });\n\n                if (labels[indexNum] && indexNum > -1) {\n                  _this4.chartSource[labels[indexNum]] = list; // {[label: string]: number[]}\n                } else {\n                  _this4.chartSource[item.label] = list;\n                }\n              };\n\n              for (var _iterator2 = _getIterator(resVal || []), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                _loop2();\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          }\n        };\n\n        for (var _iterator = _getIterator(data), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _ret = _loop();\n\n          if (_typeof(_ret) === \"object\") return _ret.v;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"editComponentConfig\",\n    value: function editComponentConfig() {\n      this.dialogConfigVisible = true;\n    }\n  }, {\n    key: \"aggregationValue\",\n    value: function aggregationValue(json) {\n      if (isNaN(json.aggregationNum)) {\n        return json.data;\n      }\n\n      if (json.type === CalculationType[0].value) {\n        return json.data + json.aggregationNum;\n      }\n\n      if (json.type === CalculationType[1].value) {\n        return json.data - json.aggregationNum;\n      }\n\n      if (json.type === CalculationType[2].value) {\n        return json.data * json.aggregationNum;\n      }\n\n      if (json.type === CalculationType[3].value) {\n        return json.data / json.aggregationNum;\n      }\n\n      return json.data;\n    }\n  }, {\n    key: \"setStatus\",\n    value: function setStatus(type, value) {\n      if (type === 'metricType') {\n        this.status = value;\n      }\n\n      if (type === 'title') {\n        this.title = value;\n      }\n\n      if (type === 'width') {\n        this.width = value;\n      }\n\n      if (type === 'height') {\n        this.height = value;\n      }\n\n      if (type === 'unit') {\n        this.unit = value;\n      }\n    }\n  }, {\n    key: \"deleteItem\",\n    value: function deleteItem(index) {\n      if (this.type === this.pageTypes[0]) {\n        this.DELETE_TOPO_ENDPOINT(index);\n      } else if (this.type === this.pageTypes[1]) {\n        this.DELETE_TOPO_INSTANCE(index);\n      } else {\n        this.DELETE_COMP(index);\n      }\n    }\n  }, {\n    key: \"watchCurrentSelectors\",\n    value: function watchCurrentSelectors() {\n      var _this5 = this;\n\n      setTimeout(function () {\n        _this5.chartRender();\n      }, 200);\n    }\n  }, {\n    key: \"watchDurationTime\",\n    value: function watchDurationTime() {\n      this.chartRender();\n    }\n  }, {\n    key: \"watchRerender\",\n    value: function watchRerender() {\n      this.chartRender();\n    }\n  }]);\n\n  return DashboardItem;\n}(Vue);\n\ntslib_1.__decorate([State('rocketOption')], DashboardItem.prototype, \"rocketOption\", void 0);\n\ntslib_1.__decorate([State('rocketbot')], DashboardItem.prototype, \"rocketGlobal\", void 0);\n\ntslib_1.__decorate([Mutation('EDIT_COMP_CONFIG')], DashboardItem.prototype, \"EDIT_COMP_CONFIG\", void 0);\n\ntslib_1.__decorate([Mutation('DELETE_COMP')], DashboardItem.prototype, \"DELETE_COMP\", void 0);\n\ntslib_1.__decorate([Mutation('rocketTopo/DELETE_TOPO_ENDPOINT')], DashboardItem.prototype, \"DELETE_TOPO_ENDPOINT\", void 0);\n\ntslib_1.__decorate([Mutation('rocketTopo/DELETE_TOPO_INSTANCE')], DashboardItem.prototype, \"DELETE_TOPO_INSTANCE\", void 0);\n\ntslib_1.__decorate([Action('GET_QUERY')], DashboardItem.prototype, \"GET_QUERY\", void 0);\n\ntslib_1.__decorate([Getter('intervalTime')], DashboardItem.prototype, \"intervalTime\", void 0);\n\ntslib_1.__decorate([Getter('durationTime')], DashboardItem.prototype, \"durationTime\", void 0);\n\ntslib_1.__decorate([Prop()], DashboardItem.prototype, \"item\", void 0);\n\ntslib_1.__decorate([Prop()], DashboardItem.prototype, \"index\", void 0);\n\ntslib_1.__decorate([Prop()], DashboardItem.prototype, \"type\", void 0);\n\ntslib_1.__decorate([Prop()], DashboardItem.prototype, \"updateObjects\", void 0);\n\ntslib_1.__decorate([Watch('rocketOption.updateDashboard')], DashboardItem.prototype, \"watchCurrentSelectors\", null);\n\ntslib_1.__decorate([Watch('durationTime')], DashboardItem.prototype, \"watchDurationTime\", null);\n\ntslib_1.__decorate([Watch('rocketGlobal.edit')], DashboardItem.prototype, \"watchRerender\", null);\n\nDashboardItem = tslib_1.__decorate([Component({\n  components: _objectSpread({}, charts)\n})], DashboardItem);\nexport default DashboardItem;",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/dashboard/dashboard-item.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\nimport charts from './charts';\nimport { QueryTypes } from './constant';\nimport { TopologyType, ObjectsType } from '../../constant';\nimport { MetricsType, CalculationType } from './charts/constant';\nimport { uuid } from '@/utils/uuid.ts';\n\nimport { Mutation, State, Getter, Action } from 'vuex-class';\n\n@Component({\n  components: { ...charts },\n})\nexport default class DashboardItem extends Vue {\n  @State('rocketOption') private rocketOption: any;\n  @State('rocketbot') private rocketGlobal: any;\n  @Mutation('EDIT_COMP_CONFIG') private EDIT_COMP_CONFIG: any;\n  @Mutation('DELETE_COMP') private DELETE_COMP: any;\n  @Mutation('rocketTopo/DELETE_TOPO_ENDPOINT') private DELETE_TOPO_ENDPOINT: any;\n  @Mutation('rocketTopo/DELETE_TOPO_INSTANCE') private DELETE_TOPO_INSTANCE: any;\n  @Action('GET_QUERY') private GET_QUERY: any;\n  @Getter('intervalTime') private intervalTime: any;\n  @Getter('durationTime') private durationTime: any;\n  @Prop() private item!: any;\n  @Prop() private index!: number;\n  @Prop() private type!: string;\n  @Prop() private updateObjects!: string;\n\n  private pageTypes = [TopologyType.TOPOLOGY_ENDPOINT, TopologyType.TOPOLOGY_INSTANCE] as any[];\n  private dialogConfigVisible = false;\n  private status = 'UNKNOWN';\n  private title = 'Title';\n  private unit = '';\n  private width = 3;\n  private height = 300;\n  private chartSource: any = {};\n  private itemConfig: any = {};\n\n  private created() {\n    this.status = this.item.metricType;\n    this.title = this.item.title;\n    this.width = this.item.width;\n    this.height = this.item.height;\n    this.unit = this.item.unit;\n    this.itemConfig = this.item;\n    const types = [ObjectsType.UPDATE_INSTANCES, ObjectsType.UPDATE_ENDPOINTS, ObjectsType.UPDATE_DASHBOARD] as any[];\n\n    if (!types.includes(this.updateObjects)) {\n      return;\n    }\n    setTimeout(() => {\n      this.chartRender();\n    }, 200);\n  }\n\n  private chartRender() {\n    if (this.rocketGlobal.edit) {\n      return;\n    }\n\n    this.GET_QUERY({\n      duration: this.durationTime,\n      index: this.index,\n      type: this.type,\n    }).then((params: Array<{ metricName: string; [key: string]: any; config: any }>) => {\n      if (!params) {\n        return;\n      }\n      if (!params.length) {\n        return;\n      }\n      this.itemConfig = params[0].config;\n      const { queryMetricType } = this.itemConfig;\n      let data = params;\n      if (queryMetricType !== QueryTypes.ReadMetricsValues) {\n        data = [params[0]];\n      }\n      this.chartValue(data);\n    });\n  }\n\n  private chartValue(data: Array<{ metricName: string; [key: string]: any; config: any }>) {\n    this.chartSource = {};\n    for (const params of data) {\n      const { queryMetricType, aggregation, aggregationNum, metricLabels, labelsIndex } = params.config;\n      const resVal = params[queryMetricType];\n\n      if (queryMetricType === QueryTypes.ReadMetricsValue) {\n        this.chartSource = {\n          avgNum: this.aggregationValue({ data: resVal, type: aggregation, aggregationNum: Number(aggregationNum) }),\n        };\n      }\n      if (queryMetricType === QueryTypes.ReadMetricsValues) {\n        if (!(resVal && resVal.values)) {\n          this.chartSource[params.metricName] = [];\n          return;\n        }\n        const { values } = resVal.values;\n        this.chartSource[params.metricName] = values.map((item: { value: number }) =>\n          this.aggregationValue({ data: item.value, type: aggregation, aggregationNum: Number(aggregationNum) }),\n        );\n      }\n      if (queryMetricType === QueryTypes.SortMetrics || queryMetricType === QueryTypes.ReadSampledRecords) {\n        this.chartSource = (resVal || []).map((item: { value: number }) => {\n          return {\n            ...item,\n            value: this.aggregationValue({\n              data: item.value,\n              type: aggregation,\n              aggregationNum: Number(aggregationNum),\n            }),\n          };\n        });\n      }\n      if (queryMetricType === QueryTypes.READHEATMAP) {\n        const nodes = [] as any;\n        if (!(resVal && resVal.values)) {\n          this.chartSource = { nodes: [] };\n          return;\n        }\n        resVal.values.forEach((items: { values: number[] }, x: number) => {\n          const grids = items.values.map((val: number, y: number) => [\n            x,\n            y,\n            this.aggregationValue({ data: val, type: aggregation, aggregationNum: Number(aggregationNum) }),\n          ]);\n\n          nodes.push(...grids);\n        });\n        let buckets = [] as any;\n        if (resVal.buckets.length) {\n          buckets = [resVal.buckets[0].min, ...resVal.buckets.map((item: { min: string; max: string }) => item.max)];\n        }\n\n        this.chartSource = { nodes, buckets }; // nodes: number[][]\n      }\n      if (queryMetricType === QueryTypes.ReadLabeledMetricsValues) {\n        const labels = (metricLabels || '').split(',').map((item: string) => item.replace(/^\\s*|\\s*$/g, ''));\n        const indexList = (labelsIndex || '').split(',').map((item: string) => item.replace(/^\\s*|\\s*$/g, ''));\n\n        this.chartSource = {};\n        for (const item of resVal || []) {\n          const list = item.values.values.map((d: { value: number }) =>\n            this.aggregationValue({ data: d.value, type: aggregation, aggregationNum: Number(aggregationNum) }),\n          );\n\n          const indexNum = indexList.findIndex((d: string) => d === item.label);\n          if (labels[indexNum] && indexNum > -1) {\n            this.chartSource[labels[indexNum]] = list; // {[label: string]: number[]}\n          } else {\n            this.chartSource[item.label] = list;\n          }\n        }\n      }\n    }\n  }\n\n  private editComponentConfig() {\n    this.dialogConfigVisible = true;\n  }\n\n  private aggregationValue(json: { data: number; type: string; aggregationNum: number }) {\n    if (isNaN(json.aggregationNum)) {\n      return json.data;\n    }\n    if (json.type === CalculationType[0].value) {\n      return json.data + json.aggregationNum;\n    }\n    if (json.type === CalculationType[1].value) {\n      return json.data - json.aggregationNum;\n    }\n    if (json.type === CalculationType[2].value) {\n      return json.data * json.aggregationNum;\n    }\n    if (json.type === CalculationType[3].value) {\n      return json.data / json.aggregationNum;\n    }\n    return json.data;\n  }\n\n  private setStatus(type: string, value: any) {\n    if (type === 'metricType') {\n      this.status = value;\n    }\n    if (type === 'title') {\n      this.title = value;\n    }\n    if (type === 'width') {\n      this.width = value;\n    }\n    if (type === 'height') {\n      this.height = value;\n    }\n    if (type === 'unit') {\n      this.unit = value;\n    }\n  }\n\n  private deleteItem(index: number) {\n    if (this.type === this.pageTypes[0]) {\n      this.DELETE_TOPO_ENDPOINT(index);\n    } else if (this.type === this.pageTypes[1]) {\n      this.DELETE_TOPO_INSTANCE(index);\n    } else {\n      this.DELETE_COMP(index);\n    }\n  }\n\n  @Watch('rocketOption.updateDashboard')\n  private watchCurrentSelectors() {\n    setTimeout(() => {\n      this.chartRender();\n    }, 200);\n  }\n  @Watch('durationTime')\n  private watchDurationTime() {\n    this.chartRender();\n  }\n  @Watch('rocketGlobal.edit')\n  private watchRerender() {\n    this.chartRender();\n  }\n}\n"],"sourceRoot":""}]}