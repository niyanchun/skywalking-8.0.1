{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/graph/fragments/profile.ts","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/graph/fragments/profile.ts","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ProfileSegment = {\n  variable: '$segmentId: String',\n  query: \"\\n  getProfiledSegment: getProfiledSegment(segmentId: $segmentId) {\\n    spans {\\n      spanId\\n      parentSpanId\\n      serviceCode\\n      startTime\\n      endTime\\n      endpointName\\n      type\\n      peer\\n      component\\n      isError\\n      layer\\n      tags {\\n        key value\\n      }\\n      logs {\\n        time data {\\n            key value\\n        }\\n      }\\n    }\\n  }\\n  \"\n};\nexport var CreateProfileTask = {\n  variable: '$creationRequest: ProfileTaskCreationRequest',\n  query: \"\\n  createTask: createProfileTask(creationRequest: $creationRequest) {\\n    id\\n    errorReason\\n  }\\n  \"\n};\nexport var GetProfileTaskList = {\n  variable: '$endpointName: String, $serviceId: ID',\n  query: \"\\n  getProfileTaskList: getProfileTaskList(endpointName: $endpointName, serviceId: $serviceId) {\\n    serviceId\\n    endpointName\\n    startTime\\n    duration\\n    minDurationThreshold\\n    dumpPeriod\\n    maxSamplingCount\\n    id\\n    logs {\\n      id\\n      instanceId\\n      instanceName\\n      operationType\\n      operationTime\\n    }\\n  }\\n  \"\n};\nexport var GetProfileTaskSegmentList = {\n  variable: '$taskID: String',\n  query: \"\\n  getProfileTaskSegmentList: getProfileTaskSegmentList(taskID: $taskID) {\\n    segmentId\\n    endpointNames\\n    start\\n    duration\\n    traceIds\\n    isError\\n  }\\n  \"\n};\nexport var GetProfileAnalyze = {\n  variable: '$segmentId: String!, $timeRanges: [ProfileAnalyzeTimeRange!]!',\n  query: \"\\n  getProfileAnalyze: getProfileAnalyze(segmentId: $segmentId, timeRanges: $timeRanges) {\\n    tip\\n    trees {\\n      elements {\\n        id\\n        parentId\\n        codeSignature\\n        duration\\n        durationChildExcluded\\n        count\\n      }\\n    }\\n  }\\n  \"\n};",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/graph/fragments/profile.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,OAAO,IAAM,cAAc,GAAG;AAC5B,EAAA,QAAQ,EAAE,oBADkB;AAE5B,EAAA,KAAK;AAFuB,CAAvB;AA6BP,OAAO,IAAM,iBAAiB,GAAG;AAC/B,EAAA,QAAQ,EAAE,8CADqB;AAE/B,EAAA,KAAK;AAF0B,CAA1B;AAUP,OAAO,IAAM,kBAAkB,GAAG;AAChC,EAAA,QAAQ,EAAE,uCADsB;AAEhC,EAAA,KAAK;AAF2B,CAA3B;AAsBP,OAAO,IAAM,yBAAyB,GAAG;AACvC,EAAA,QAAQ,EAAE,iBAD6B;AAEvC,EAAA,KAAK;AAFkC,CAAlC;AAcP,OAAO,IAAM,iBAAiB,GAAG;AAC/B,EAAA,QAAQ,EAAE,+DADqB;AAE/B,EAAA,KAAK;AAF0B,CAA1B","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const ProfileSegment = {\n  variable: '$segmentId: String',\n  query: `\n  getProfiledSegment: getProfiledSegment(segmentId: $segmentId) {\n    spans {\n      spanId\n      parentSpanId\n      serviceCode\n      startTime\n      endTime\n      endpointName\n      type\n      peer\n      component\n      isError\n      layer\n      tags {\n        key value\n      }\n      logs {\n        time data {\n            key value\n        }\n      }\n    }\n  }\n  `,\n};\n\nexport const CreateProfileTask = {\n  variable: '$creationRequest: ProfileTaskCreationRequest',\n  query: `\n  createTask: createProfileTask(creationRequest: $creationRequest) {\n    id\n    errorReason\n  }\n  `,\n};\n\nexport const GetProfileTaskList = {\n  variable: '$endpointName: String, $serviceId: ID',\n  query: `\n  getProfileTaskList: getProfileTaskList(endpointName: $endpointName, serviceId: $serviceId) {\n    serviceId\n    endpointName\n    startTime\n    duration\n    minDurationThreshold\n    dumpPeriod\n    maxSamplingCount\n    id\n    logs {\n      id\n      instanceId\n      instanceName\n      operationType\n      operationTime\n    }\n  }\n  `,\n};\nexport const GetProfileTaskSegmentList = {\n  variable: '$taskID: String',\n  query: `\n  getProfileTaskSegmentList: getProfileTaskSegmentList(taskID: $taskID) {\n    segmentId\n    endpointNames\n    start\n    duration\n    traceIds\n    isError\n  }\n  `,\n};\n\nexport const GetProfileAnalyze = {\n  variable: '$segmentId: String!, $timeRanges: [ProfileAnalyzeTimeRange!]!',\n  query: `\n  getProfileAnalyze: getProfileAnalyze(segmentId: $segmentId, timeRanges: $timeRanges) {\n    tip\n    trees {\n      elements {\n        id\n        parentId\n        codeSignature\n        duration\n        durationChildExcluded\n        count\n      }\n    }\n  }\n  `,\n};\n"],"sourceRoot":""}]}