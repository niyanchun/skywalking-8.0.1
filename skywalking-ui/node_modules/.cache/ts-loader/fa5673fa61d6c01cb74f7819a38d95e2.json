{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/alarm/index.ts","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/alarm/index.ts","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import _defineProperty from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _mutations;\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as types from '@/store/mutation-types';\nimport graph from '@/graph';\nvar initState = {\n  alarmService: [],\n  total: 0\n}; // getters\n\nvar getters = {}; // mutations\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_ALARM, function (state, data) {\n  state.alarmService = data.items;\n  state.total = data.total;\n}), _defineProperty(_mutations, types.CLEAR_ALARM, function (state) {\n  state.alarmService = [];\n  state.total = 0;\n}), _mutations); // actions\n\nvar actions = {\n  GET_ALARM: function GET_ALARM(context, params) {\n    return graph.query('queryAlarms').params(params).then(function (res) {\n      if (res.data.data.getAlarm.items) {\n        context.commit(types.SET_ALARM, res.data.data.getAlarm);\n      }\n    });\n  },\n  CLEAR_ALARM: function CLEAR_ALARM(context) {\n    context.commit(types.CLEAR_ALARM);\n  }\n};\nexport default {\n  namespaced: true,\n  state: initState,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/alarm/index.ts"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;AAkBA,OAAO,KAAK,KAAZ,MAAuB,wBAAvB;AAEA,OAAO,KAAP,MAAkB,SAAlB;AAQA,IAAM,SAAS,GAAU;AACvB,EAAA,YAAY,EAAE,EADS;AAEvB,EAAA,KAAK,EAAE;AAFgB,CAAzB,C,CAKA;;AACA,IAAM,OAAO,GAAG,EAAhB,C,CAEA;;AACA,IAAM,SAAS,iDACZ,KAAK,CAAC,SADM,YACK,KADL,EACmB,IADnB,EAC0D;AACrE,EAAA,KAAK,CAAC,YAAN,GAAqB,IAAI,CAAC,KAA1B;AACA,EAAA,KAAK,CAAC,KAAN,GAAc,IAAI,CAAC,KAAnB;AACD,CAJY,+BAKZ,KAAK,CAAC,WALM,YAKO,KALP,EAKmB;AAC9B,EAAA,KAAK,CAAC,YAAN,GAAqB,EAArB;AACA,EAAA,KAAK,CAAC,KAAN,GAAc,CAAd;AACD,CARY,cAAf,C,CAWA;;AACA,IAAM,OAAO,GAA2B;AACtC,EAAA,SADsC,qBAC5B,OAD4B,EACe,MADf,EACkC;AACtE,WAAO,KAAK,CACT,KADI,CACE,aADF,EAEJ,MAFI,CAEG,MAFH,EAGJ,IAHI,CAGC,UAAC,GAAD,EAA4B;AAChC,UAAI,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAc,QAAd,CAAuB,KAA3B,EAAkC;AAChC,QAAA,OAAO,CAAC,MAAR,CAAe,KAAK,CAAC,SAArB,EAAgC,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAc,QAA9C;AACD;AACF,KAPI,CAAP;AAQD,GAVqC;AAWtC,EAAA,WAXsC,uBAW1B,OAX0B,EAWe;AACnD,IAAA,OAAO,CAAC,MAAR,CAAe,KAAK,CAAC,WAArB;AACD;AAbqC,CAAxC;AAgBA,eAAe;AACb,EAAA,UAAU,EAAE,IADC;AAEb,EAAA,KAAK,EAAE,SAFM;AAGb,EAAA,OAAO,EAAP,OAHa;AAIb,EAAA,OAAO,EAAP,OAJa;AAKb,EAAA,SAAS,EAAT;AALa,CAAf","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Commit, ActionTree, MutationTree } from 'vuex';\nimport * as types from '@/store/mutation-types';\nimport { AxiosResponse } from 'axios';\nimport graph from '@/graph';\nimport { Alarm, AlarmParams } from '@/types/alarm';\n\nexport interface State {\n  alarmService: Alarm[];\n  total: number;\n}\n\nconst initState: State = {\n  alarmService: [],\n  total: 0,\n};\n\n// getters\nconst getters = {};\n\n// mutations\nconst mutations: MutationTree<State> = {\n  [types.SET_ALARM](state: State, data: { items: Alarm[]; total: number }): void {\n    state.alarmService = data.items;\n    state.total = data.total;\n  },\n  [types.CLEAR_ALARM](state: State): void {\n    state.alarmService = [];\n    state.total = 0;\n  },\n};\n\n// actions\nconst actions: ActionTree<State, any> = {\n  GET_ALARM(context: { commit: Commit; state: State }, params: AlarmParams): Promise<void> {\n    return graph\n      .query('queryAlarms')\n      .params(params)\n      .then((res: AxiosResponse<any>) => {\n        if (res.data.data.getAlarm.items) {\n          context.commit(types.SET_ALARM, res.data.data.getAlarm);\n        }\n      });\n  },\n  CLEAR_ALARM(context: { commit: Commit; state: State }): void {\n    context.commit(types.CLEAR_ALARM);\n  },\n};\n\nexport default {\n  namespaced: true,\n  state: initState,\n  getters,\n  actions,\n  mutations,\n};\n"],"sourceRoot":""}]}