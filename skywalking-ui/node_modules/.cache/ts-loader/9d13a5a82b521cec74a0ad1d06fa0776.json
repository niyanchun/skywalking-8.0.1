{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/dashboard/constant-metrics-query.ts","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/dashboard/constant-metrics-query.ts","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar readMetricsValues = {\n  variable: ['$condition: MetricsCondition!, $duration: Duration!'],\n  fragment: \"\\n  readMetricsValues: readMetricsValues(condition: $condition, duration: $duration) {\\n    label\\n    values {\\n      values {value}\\n    }\\n  }\"\n};\nvar readMetricsValue = {\n  variable: ['$condition: MetricsCondition!, $duration: Duration!'],\n  fragment: \"\\n  readMetricsValue: readMetricsValue(condition: $condition, duration: $duration)\"\n};\nvar sortMetrics = {\n  variable: ['$condition: TopNCondition!, $duration: Duration!'],\n  fragment: \"\\n  sortMetrics: sortMetrics(condition: $condition, duration: $duration) {\\n    name\\n    id\\n    value\\n    refId\\n  }\"\n};\nvar readLabeledMetricsValues = {\n  variable: ['$condition: MetricsCondition!, $labels: [String!]!, $duration: Duration!'],\n  fragment: \"\\n  readLabeledMetricsValues: readLabeledMetricsValues(\\n    condition: $condition,\\n    labels: $labels,\\n    duration: $duration) {\\n    label\\n    values {\\n      values {value}\\n    }\\n  }\"\n};\nvar readHeatMap = {\n  variable: ['$condition: MetricsCondition!, $duration: Duration!'],\n  fragment: \"\\n  readHeatMap: readHeatMap(condition: $condition, duration: $duration) {\\n    values {\\n      id\\n      values\\n    }\\n    buckets {\\n      min\\n      max\\n    }\\n  }\"\n};\nvar readSampledRecords = {\n  variable: ['$condition: TopNCondition!, $duration: Duration!'],\n  fragment: \"\\n  readSampledRecords: readSampledRecords(condition: $condition, duration: $duration) {\\n    name\\n    value\\n    refId\\n  }\"\n};\nexport default {\n  readSampledRecords: readSampledRecords,\n  readHeatMap: readHeatMap,\n  readLabeledMetricsValues: readLabeledMetricsValues,\n  sortMetrics: sortMetrics,\n  readMetricsValue: readMetricsValue,\n  readMetricsValues: readMetricsValues\n};",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/store/modules/dashboard/constant-metrics-query.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,IAAM,iBAAiB,GAAG;AACxB,EAAA,QAAQ,EAAE,CAAC,qDAAD,CADc;AAExB,EAAA,QAAQ;AAFgB,CAA1B;AAWA,IAAM,gBAAgB,GAAG;AACvB,EAAA,QAAQ,EAAE,CAAC,qDAAD,CADa;AAEvB,EAAA,QAAQ;AAFe,CAAzB;AAMA,IAAM,WAAW,GAAG;AAClB,EAAA,QAAQ,EAAE,CAAC,kDAAD,CADQ;AAElB,EAAA,QAAQ;AAFU,CAApB;AAWA,IAAM,wBAAwB,GAAG;AAC/B,EAAA,QAAQ,EAAE,CAAC,0EAAD,CADqB;AAE/B,EAAA,QAAQ;AAFuB,CAAjC;AAcA,IAAM,WAAW,GAAG;AAClB,EAAA,QAAQ,EAAE,CAAC,qDAAD,CADQ;AAElB,EAAA,QAAQ;AAFU,CAApB;AAeA,IAAM,kBAAkB,GAAG;AACzB,EAAA,QAAQ,EAAE,CAAC,kDAAD,CADe;AAEzB,EAAA,QAAQ;AAFiB,CAA3B;AAUA,eAAe;AACb,EAAA,kBAAkB,EAAlB,kBADa;AAEb,EAAA,WAAW,EAAX,WAFa;AAGb,EAAA,wBAAwB,EAAxB,wBAHa;AAIb,EAAA,WAAW,EAAX,WAJa;AAKb,EAAA,gBAAgB,EAAhB,gBALa;AAMb,EAAA,iBAAiB,EAAjB;AANa,CAAf","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst readMetricsValues = {\n  variable: ['$condition: MetricsCondition!, $duration: Duration!'],\n  fragment: `\n  readMetricsValues: readMetricsValues(condition: $condition, duration: $duration) {\n    label\n    values {\n      values {value}\n    }\n  }`,\n};\n\nconst readMetricsValue = {\n  variable: ['$condition: MetricsCondition!, $duration: Duration!'],\n  fragment: `\n  readMetricsValue: readMetricsValue(condition: $condition, duration: $duration)`,\n};\n\nconst sortMetrics = {\n  variable: ['$condition: TopNCondition!, $duration: Duration!'],\n  fragment: `\n  sortMetrics: sortMetrics(condition: $condition, duration: $duration) {\n    name\n    id\n    value\n    refId\n  }`,\n};\n\nconst readLabeledMetricsValues = {\n  variable: ['$condition: MetricsCondition!, $labels: [String!]!, $duration: Duration!'],\n  fragment: `\n  readLabeledMetricsValues: readLabeledMetricsValues(\n    condition: $condition,\n    labels: $labels,\n    duration: $duration) {\n    label\n    values {\n      values {value}\n    }\n  }`,\n};\n\nconst readHeatMap = {\n  variable: ['$condition: MetricsCondition!, $duration: Duration!'],\n  fragment: `\n  readHeatMap: readHeatMap(condition: $condition, duration: $duration) {\n    values {\n      id\n      values\n    }\n    buckets {\n      min\n      max\n    }\n  }`,\n};\n\nconst readSampledRecords = {\n  variable: ['$condition: TopNCondition!, $duration: Duration!'],\n  fragment: `\n  readSampledRecords: readSampledRecords(condition: $condition, duration: $duration) {\n    name\n    value\n    refId\n  }`,\n};\n\nexport default {\n  readSampledRecords,\n  readHeatMap,\n  readLabeledMetricsValues,\n  sortMetrics,\n  readMetricsValue,\n  readMetricsValues,\n};\n"],"sourceRoot":""}]}