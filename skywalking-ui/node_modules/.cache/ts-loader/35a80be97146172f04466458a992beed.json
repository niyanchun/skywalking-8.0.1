{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/graph/query/topology.ts","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/graph/query/topology.ts","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Topo, ServiceTopo, ServicesTopo, TopoMetric, TopoInstanceDependency, TopoInstanceClientInfo, TopoInstanceServerInfo, TopoServiceMetric, TopoClientMetric, TopoServiceInfo, TopoClientInfo, DependencyInstanceServerMetric, DependencyInstanceClientMetric, TopoServiceDetail } from '../fragments/topology';\nexport var queryTopo = \"query queryTopo(\".concat(Topo.variable, \") {\").concat(Topo.query, \"}\");\nexport var queryServiceTopo = \"query queryServiceTopo(\".concat(ServiceTopo.variable, \") {\").concat(ServiceTopo.query, \"}\");\nexport var queryServicesTopo = \"query queryServiceTopo(\".concat(ServicesTopo.variable, \") {\").concat(ServicesTopo.query, \"}\");\nexport var queryTopoInfo = \"query queryTopoInfo(\\n    \".concat(Topo.variable, \",\\n    \").concat(TopoMetric.variable, \",\\n    \").concat(TopoServiceMetric.variable, \",\\n    \").concat(TopoClientMetric.variable, \")\\n      {\\n        \").concat(TopoMetric.query, \",\\n        \").concat(TopoServiceMetric.query, \",\\n        \").concat(TopoClientMetric.query, \"\\n      }\");\nexport var queryTopoServiceInfo = \"query queryTopoServiceInfo(\\n  \".concat(TopoServiceInfo.variable, \") {\").concat(TopoServiceInfo.query, \"}\");\nexport var queryTopoClientInfo = \"query queryTopoClientInfo(\\n  \".concat(TopoClientInfo.variable, \") {\").concat(TopoClientInfo.query, \"}\");\nexport var queryTopoInstanceDependency = \"query queryTopoInstanceDependency(\\n  \".concat(TopoInstanceDependency.variable, \") {\").concat(TopoInstanceDependency.query, \"}\");\nexport var queryTopoInstanceServerInfo = \"query queryTopoInstanceServerInfo(\\n  \".concat(TopoInstanceServerInfo.variable, \") {\").concat(TopoInstanceServerInfo.query, \"}\");\nexport var queryTopoInstanceClientInfo = \"query queryTopoInstanceClientInfo(\\n  \".concat(TopoInstanceClientInfo.variable, \") {\").concat(TopoInstanceClientInfo.query, \"}\");\nexport var queryDependencyInstanceServerMetric = \"query queryDependencyInstanceServerMetric(\\n  \".concat(DependencyInstanceServerMetric.variable, \") {\").concat(DependencyInstanceServerMetric.query, \"}\");\nexport var queryDependencyInstanceClientMetric = \"query queryDependencyInstanceClientMetric(\\n  \".concat(DependencyInstanceClientMetric.variable, \") {\").concat(DependencyInstanceClientMetric.query, \"}\");\nexport var queryTopoServiceDetail = \"query queryTopoServiceDetail(\\n  \".concat(TopoServiceDetail.variable, \") {\").concat(TopoServiceDetail.query, \"}\");",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/graph/query/topology.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SACE,IADF,EAEE,WAFF,EAGE,YAHF,EAIE,UAJF,EAKE,sBALF,EAME,sBANF,EAOE,sBAPF,EAQE,iBARF,EASE,gBATF,EAUE,eAVF,EAWE,cAXF,EAYE,8BAZF,EAaE,8BAbF,EAcE,iBAdF,QAeO,uBAfP;AAiBA,OAAO,IAAM,SAAS,6BAAsB,IAAI,CAAC,QAA3B,gBAAyC,IAAI,CAAC,KAA9C,MAAf;AAEP,OAAO,IAAM,gBAAgB,oCAA6B,WAAW,CAAC,QAAzC,gBAAuD,WAAW,CAAC,KAAnE,MAAtB;AAEP,OAAO,IAAM,iBAAiB,oCAA6B,YAAY,CAAC,QAA1C,gBAAwD,YAAY,CAAC,KAArE,MAAvB;AAEP,OAAO,IAAM,aAAa,uCACpB,IAAI,CAAC,QADe,oBAEpB,UAAU,CAAC,QAFS,oBAGpB,iBAAiB,CAAC,QAHE,oBAIpB,gBAAgB,CAAC,QAJG,iCAMhB,UAAU,CAAC,KANK,wBAOhB,iBAAiB,CAAC,KAPF,wBAQhB,gBAAgB,CAAC,KARD,cAAnB;AAWP,OAAO,IAAM,oBAAoB,4CAC7B,eAAe,CAAC,QADa,gBACC,eAAe,CAAC,KADjB,MAA1B;AAGP,OAAO,IAAM,mBAAmB,2CAC5B,cAAc,CAAC,QADa,gBACC,cAAc,CAAC,KADhB,MAAzB;AAGP,OAAO,IAAM,2BAA2B,mDACpC,sBAAsB,CAAC,QADa,gBACC,sBAAsB,CAAC,KADxB,MAAjC;AAGP,OAAO,IAAM,2BAA2B,mDACpC,sBAAsB,CAAC,QADa,gBACC,sBAAsB,CAAC,KADxB,MAAjC;AAGP,OAAO,IAAM,2BAA2B,mDACpC,sBAAsB,CAAC,QADa,gBACC,sBAAsB,CAAC,KADxB,MAAjC;AAGP,OAAO,IAAM,mCAAmC,2DAC5C,8BAA8B,CAAC,QADa,gBACC,8BAA8B,CAAC,KADhC,MAAzC;AAGP,OAAO,IAAM,mCAAmC,2DAC5C,8BAA8B,CAAC,QADa,gBACC,8BAA8B,CAAC,KADhC,MAAzC;AAGP,OAAO,IAAM,sBAAsB,8CAC/B,iBAAiB,CAAC,QADa,gBACC,iBAAiB,CAAC,KADnB,MAA5B","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Topo,\n  ServiceTopo,\n  ServicesTopo,\n  TopoMetric,\n  TopoInstanceDependency,\n  TopoInstanceClientInfo,\n  TopoInstanceServerInfo,\n  TopoServiceMetric,\n  TopoClientMetric,\n  TopoServiceInfo,\n  TopoClientInfo,\n  DependencyInstanceServerMetric,\n  DependencyInstanceClientMetric,\n  TopoServiceDetail,\n} from '../fragments/topology';\n\nexport const queryTopo = `query queryTopo(${Topo.variable}) {${Topo.query}}`;\n\nexport const queryServiceTopo = `query queryServiceTopo(${ServiceTopo.variable}) {${ServiceTopo.query}}`;\n\nexport const queryServicesTopo = `query queryServiceTopo(${ServicesTopo.variable}) {${ServicesTopo.query}}`;\n\nexport const queryTopoInfo = `query queryTopoInfo(\n    ${Topo.variable},\n    ${TopoMetric.variable},\n    ${TopoServiceMetric.variable},\n    ${TopoClientMetric.variable})\n      {\n        ${TopoMetric.query},\n        ${TopoServiceMetric.query},\n        ${TopoClientMetric.query}\n      }`;\n\nexport const queryTopoServiceInfo = `query queryTopoServiceInfo(\n  ${TopoServiceInfo.variable}) {${TopoServiceInfo.query}}`;\n\nexport const queryTopoClientInfo = `query queryTopoClientInfo(\n  ${TopoClientInfo.variable}) {${TopoClientInfo.query}}`;\n\nexport const queryTopoInstanceDependency = `query queryTopoInstanceDependency(\n  ${TopoInstanceDependency.variable}) {${TopoInstanceDependency.query}}`;\n\nexport const queryTopoInstanceServerInfo = `query queryTopoInstanceServerInfo(\n  ${TopoInstanceServerInfo.variable}) {${TopoInstanceServerInfo.query}}`;\n\nexport const queryTopoInstanceClientInfo = `query queryTopoInstanceClientInfo(\n  ${TopoInstanceClientInfo.variable}) {${TopoInstanceClientInfo.query}}`;\n\nexport const queryDependencyInstanceServerMetric = `query queryDependencyInstanceServerMetric(\n  ${DependencyInstanceServerMetric.variable}) {${DependencyInstanceServerMetric.query}}`;\n\nexport const queryDependencyInstanceClientMetric = `query queryDependencyInstanceClientMetric(\n  ${DependencyInstanceClientMetric.variable}) {${DependencyInstanceClientMetric.query}}`;\n\nexport const queryTopoServiceDetail = `query queryTopoServiceDetail(\n  ${TopoServiceDetail.variable}) {${TopoServiceDetail.query}}`;\n"],"sourceRoot":""}]}