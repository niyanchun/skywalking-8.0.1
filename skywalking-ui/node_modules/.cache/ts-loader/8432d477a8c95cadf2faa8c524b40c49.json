{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/dashboard/charts/chart-edit.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/dashboard/charts/chart-edit.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _classCallCheck from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport * as tslib_1 from \"tslib\";\nimport Vue from 'vue';\nimport { State, Getter, Mutation, Action } from 'vuex-class';\nimport { Component, Prop } from 'vue-property-decorator';\nimport { TopologyType } from '../../../constant';\nimport { EntityType, IndependentType, MetricsType, QueryMetricTypes, MetricChartType, CalculationType } from './constant';\nimport { DASHBOARDTYPE } from '../constant';\n\nvar ChartEdit =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(ChartEdit, _Vue);\n\n  function ChartEdit() {\n    var _this;\n\n    _classCallCheck(this, ChartEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChartEdit).apply(this, arguments));\n    _this.itemConfig = {};\n    _this.EntityType = EntityType;\n    _this.IndependentType = IndependentType;\n    _this.CalculationType = CalculationType;\n    _this.services = [];\n    _this.endpoints = [];\n    _this.instances = [];\n    _this.queryMetricTypesList = [];\n    _this.isDatabase = false;\n    _this.isLabel = false;\n    _this.isIndependentSelector = false;\n    _this.nameMetrics = ['sortMetrics', 'readSampledRecords'];\n    _this.pageTypes = [TopologyType.TOPOLOGY_ENDPOINT, TopologyType.TOPOLOGY_INSTANCE];\n    return _this;\n  }\n\n  _createClass(ChartEdit, [{\n    key: \"created\",\n    value: function created() {\n      this.itemConfig = this.item;\n      this.isDatabase = this.pageTypes.includes(this.type) ? false : this.rocketComps.tree[this.rocketComps.group].type === DASHBOARDTYPE.DATABASE ? true : false;\n      this.queryMetricTypesList = QueryMetricTypes[this.item.metricType] || [];\n      this.isLabel = this.itemConfig.metricType === MetricsType.LABELED_VALUE ? true : false;\n      this.isIndependentSelector = this.rocketComps.tree[this.rocketComps.group].type === 'metric' || this.pageTypes.includes(this.type);\n\n      if (!this.itemConfig.independentSelector || this.pageTypes.includes(this.type)) {\n        return;\n      }\n\n      this.setItemServices();\n    }\n  }, {\n    key: \"setItemConfig\",\n    value: function setItemConfig(params) {\n      var _this2 = this;\n\n      this.itemConfig[params.type] = params.value;\n      var types = ['endpointsKey', 'instancesKey', 'currentService'];\n      var typesUpdate = ['title', 'width', 'height', 'unit'];\n\n      if (params.type === 'servicesKey') {\n        this.setItemServices(true);\n      }\n\n      if (types.includes(params.type)) {\n        this.getServiceObject(true);\n      }\n\n      if (typesUpdate.includes(params.type)) {\n        this.$emit('updateStatus', params.type, params.value);\n      }\n\n      if (params.type === 'entityType') {\n        if (this.itemConfig.currentService) {\n          this.getServiceObject(true);\n        }\n      }\n\n      if (params.type === 'metricName') {\n        this.TYPE_METRICS({\n          name: params.value\n        }).then(function (data) {\n          if (!data.length) {\n            return;\n          }\n\n          if (data.length > 1) {\n            var length = data.filter(function (d) {\n              return d.typeOfMetrics !== MetricsType.REGULAR_VALUE;\n            }).length;\n\n            if (length) {\n              _this2.$emit('updateStatus', 'metricType', MetricsType.UNKNOWN);\n\n              return;\n            }\n          }\n\n          var typeOfMetrics = data[0].typeOfMetrics;\n\n          _this2.$emit('updateStatus', 'metricType', typeOfMetrics);\n\n          _this2.queryMetricTypesList = QueryMetricTypes[typeOfMetrics] || [];\n          _this2.itemConfig.queryMetricType = _this2.queryMetricTypesList[0] && _this2.queryMetricTypesList[0].value;\n          _this2.isLabel = typeOfMetrics === MetricsType.LABELED_VALUE ? true : false;\n          var values = {\n            metricType: typeOfMetrics,\n            queryMetricType: _this2.itemConfig.queryMetricType,\n            chartType: MetricChartType[_this2.itemConfig.queryMetricType],\n            metricName: params.value\n          };\n\n          if (_this2.type === _this2.pageTypes[0]) {\n            _this2.EDIT_TOPO_ENDPOINT_CONFIG({\n              index: _this2.index,\n              values: values\n            });\n          } else if (_this2.type === _this2.pageTypes[1]) {\n            _this2.EDIT_TOPO_INSTANCE_CONFIG({\n              index: _this2.index,\n              values: values\n            });\n          } else {\n            _this2.EDIT_COMP_CONFIG({\n              index: _this2.index,\n              values: values\n            });\n          }\n\n          _this2.itemConfig = _objectSpread({}, _this2.itemConfig, values);\n        });\n        return;\n      }\n\n      if (params.type === 'queryMetricType') {\n        var values = _defineProperty({\n          chartType: MetricChartType[params.value]\n        }, params.type, params.value);\n\n        if (this.type === this.pageTypes[0]) {\n          this.EDIT_TOPO_ENDPOINT_CONFIG({\n            index: this.index,\n            values: values\n          });\n        } else if (this.type === this.pageTypes[1]) {\n          this.EDIT_TOPO_INSTANCE_CONFIG({\n            index: this.index,\n            values: values\n          });\n        } else {\n          this.EDIT_COMP_CONFIG({\n            index: this.index,\n            values: values\n          });\n        }\n\n        this.itemConfig = _objectSpread({}, this.itemConfig, values);\n        return;\n      }\n\n      if (params.type === 'independentSelector' || params.type === 'parentService') {\n        this.itemConfig[params.type] = params.value === 'true' ? true : false;\n\n        if (this.type === this.pageTypes[0]) {\n          this.EDIT_TOPO_ENDPOINT_CONFIG({\n            index: this.index,\n            values: _defineProperty({}, params.type, this.itemConfig[params.type])\n          });\n        } else if (this.type === this.pageTypes[1]) {\n          this.EDIT_TOPO_INSTANCE_CONFIG({\n            index: this.index,\n            values: _defineProperty({}, params.type, this.itemConfig[params.type])\n          });\n        } else {\n          this.EDIT_COMP_CONFIG({\n            index: this.index,\n            values: _defineProperty({}, params.type, this.itemConfig[params.type])\n          });\n        }\n\n        return;\n      }\n\n      if (this.type === this.pageTypes[0]) {\n        this.EDIT_TOPO_ENDPOINT_CONFIG({\n          index: this.index,\n          values: _defineProperty({}, params.type, params.value)\n        });\n      } else if (this.type === this.pageTypes[1]) {\n        this.EDIT_TOPO_INSTANCE_CONFIG({\n          index: this.index,\n          values: _defineProperty({}, params.type, params.value)\n        });\n      } else {\n        this.EDIT_COMP_CONFIG({\n          index: this.index,\n          values: _defineProperty({}, params.type, params.value)\n        });\n      }\n    }\n  }, {\n    key: \"setItemServices\",\n    value: function setItemServices() {\n      var _this3 = this;\n\n      var update = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.GET_ITEM_SERVICES({\n        keyword: this.itemConfig.servicesKey || '',\n        duration: this.durationTime\n      }).then(function (result) {\n        _this3.services = result;\n\n        if (update) {\n          if (result.length) {\n            _this3.itemConfig.currentService = result[0].key;\n          } else {\n            _this3.itemConfig.currentService = '';\n          }\n        }\n\n        if (_this3.itemConfig.currentService) {\n          _this3.getServiceObject();\n        }\n      });\n    }\n  }, {\n    key: \"getServiceObject\",\n    value: function getServiceObject() {\n      var _this4 = this;\n\n      var update = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var service = this.services.filter(function (d) {\n        return d.label === _this4.itemConfig.currentService;\n      })[0] || {};\n      var serviceId = service.key;\n\n      if (!serviceId) {\n        return;\n      }\n\n      if (this.itemConfig.entityType === EntityType[2].key) {\n        this.GET_ITEM_ENDPOINTS({\n          serviceId: serviceId,\n          keyword: this.itemConfig.endpointsKey || '',\n          duration: this.durationTime\n        }).then(function (data) {\n          _this4.endpoints = data;\n\n          if (update) {\n            if (data.length) {\n              _this4.itemConfig.currentEndpoint = data[0].key;\n            } else {\n              _this4.itemConfig.currentEndpoint = '';\n            }\n\n            _this4.EDIT_COMP_CONFIG({\n              index: _this4.index,\n              values: {\n                currentEndpoint: _this4.itemConfig.currentEndpoint\n              }\n            });\n          }\n        });\n      } else if (this.itemConfig.entityType === EntityType[3].key) {\n        this.GET_ITEM_INSTANCES({\n          serviceId: serviceId,\n          keyword: this.itemConfig.instancesKey || '',\n          duration: this.durationTime\n        }).then(function (data) {\n          _this4.instances = data;\n\n          if (update) {\n            if (data.length) {\n              _this4.itemConfig.currentInstance = data[0].key;\n            } else {\n              _this4.itemConfig.currentInstance = '';\n            }\n\n            _this4.EDIT_COMP_CONFIG({\n              index: _this4.index,\n              values: {\n                currentInstance: _this4.itemConfig.currentInstance\n              }\n            });\n          }\n        });\n      }\n    }\n  }]);\n\n  return ChartEdit;\n}(Vue);\n\ntslib_1.__decorate([State('rocketOption')], ChartEdit.prototype, \"stateDashboardOption\", void 0);\n\ntslib_1.__decorate([State('rocketData')], ChartEdit.prototype, \"rocketComps\", void 0);\n\ntslib_1.__decorate([Mutation('EDIT_COMP_CONFIG')], ChartEdit.prototype, \"EDIT_COMP_CONFIG\", void 0);\n\ntslib_1.__decorate([Mutation('rocketTopo/EDIT_TOPO_INSTANCE_CONFIG')], ChartEdit.prototype, \"EDIT_TOPO_INSTANCE_CONFIG\", void 0);\n\ntslib_1.__decorate([Mutation('rocketTopo/EDIT_TOPO_ENDPOINT_CONFIG')], ChartEdit.prototype, \"EDIT_TOPO_ENDPOINT_CONFIG\", void 0);\n\ntslib_1.__decorate([Action('GET_ITEM_SERVICES')], ChartEdit.prototype, \"GET_ITEM_SERVICES\", void 0);\n\ntslib_1.__decorate([Action('GET_ITEM_ENDPOINTS')], ChartEdit.prototype, \"GET_ITEM_ENDPOINTS\", void 0);\n\ntslib_1.__decorate([Action('GET_ITEM_INSTANCES')], ChartEdit.prototype, \"GET_ITEM_INSTANCES\", void 0);\n\ntslib_1.__decorate([Action('TYPE_METRICS')], ChartEdit.prototype, \"TYPE_METRICS\", void 0);\n\ntslib_1.__decorate([Getter('durationTime')], ChartEdit.prototype, \"durationTime\", void 0);\n\ntslib_1.__decorate([Prop()], ChartEdit.prototype, \"item\", void 0);\n\ntslib_1.__decorate([Prop()], ChartEdit.prototype, \"index\", void 0);\n\ntslib_1.__decorate([Prop()], ChartEdit.prototype, \"intervalTime\", void 0);\n\ntslib_1.__decorate([Prop()], ChartEdit.prototype, \"type\", void 0);\n\nChartEdit = tslib_1.__decorate([Component], ChartEdit);\nexport default ChartEdit;",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/dashboard/charts/chart-edit.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport { State, Getter, Mutation, Action } from 'vuex-class';\nimport { Component, Prop } from 'vue-property-decorator';\n\nimport { TopologyType, ObjectsType } from '../../../constant';\nimport {\n  EntityType,\n  IndependentType,\n  MetricsType,\n  QueryMetricTypes,\n  MetricChartType,\n  CalculationType,\n} from './constant';\nimport { DASHBOARDTYPE } from '../constant';\n\n@Component\nexport default class ChartEdit extends Vue {\n  @State('rocketOption') private stateDashboardOption: any;\n  @State('rocketData') private rocketComps!: any;\n  @Mutation('EDIT_COMP_CONFIG') private EDIT_COMP_CONFIG: any;\n  @Mutation('rocketTopo/EDIT_TOPO_INSTANCE_CONFIG') private EDIT_TOPO_INSTANCE_CONFIG: any;\n  @Mutation('rocketTopo/EDIT_TOPO_ENDPOINT_CONFIG') private EDIT_TOPO_ENDPOINT_CONFIG: any;\n  @Action('GET_ITEM_SERVICES') private GET_ITEM_SERVICES: any;\n  @Action('GET_ITEM_ENDPOINTS') private GET_ITEM_ENDPOINTS: any;\n  @Action('GET_ITEM_INSTANCES') private GET_ITEM_INSTANCES: any;\n  @Action('TYPE_METRICS') private TYPE_METRICS: any;\n  @Getter('durationTime') private durationTime: any;\n  @Prop() private item!: any;\n  @Prop() private index!: number;\n  @Prop() private intervalTime!: any;\n  @Prop() private type!: string;\n  private itemConfig: any = {};\n  private EntityType = EntityType;\n  private IndependentType = IndependentType;\n  private CalculationType = CalculationType;\n  private services: any = [];\n  private endpoints: any = [];\n  private instances: any = [];\n  private queryMetricTypesList: any = [];\n  private isDatabase = false;\n  private isLabel = false;\n  private isIndependentSelector = false;\n  private nameMetrics = ['sortMetrics', 'readSampledRecords'];\n  private pageTypes = [TopologyType.TOPOLOGY_ENDPOINT, TopologyType.TOPOLOGY_INSTANCE] as any[];\n\n  private created() {\n    this.itemConfig = this.item;\n    this.isDatabase = this.pageTypes.includes(this.type)\n      ? false\n      : this.rocketComps.tree[this.rocketComps.group].type === DASHBOARDTYPE.DATABASE\n      ? true\n      : false;\n    this.queryMetricTypesList = QueryMetricTypes[this.item.metricType] || [];\n    this.isLabel = this.itemConfig.metricType === MetricsType.LABELED_VALUE ? true : false;\n    this.isIndependentSelector =\n      this.rocketComps.tree[this.rocketComps.group].type === 'metric' || this.pageTypes.includes(this.type);\n    if (!this.itemConfig.independentSelector || this.pageTypes.includes(this.type)) {\n      return;\n    }\n    this.setItemServices();\n  }\n\n  private setItemConfig(params: { type: string; value: string }) {\n    this.itemConfig[params.type] = params.value;\n    const types = ['endpointsKey', 'instancesKey', 'currentService'];\n    const typesUpdate = ['title', 'width', 'height', 'unit'];\n    if (params.type === 'servicesKey') {\n      this.setItemServices(true);\n    }\n    if (types.includes(params.type)) {\n      this.getServiceObject(true);\n    }\n    if (typesUpdate.includes(params.type)) {\n      this.$emit('updateStatus', params.type, params.value);\n    }\n    if (params.type === 'entityType') {\n      if (this.itemConfig.currentService) {\n        this.getServiceObject(true);\n      }\n    }\n    if (params.type === 'metricName') {\n      this.TYPE_METRICS({ name: params.value }).then((data: Array<{ typeOfMetrics: string }>) => {\n        if (!data.length) {\n          return;\n        }\n        if (data.length > 1) {\n          const length = data.filter((d: { typeOfMetrics: string }) => d.typeOfMetrics !== MetricsType.REGULAR_VALUE)\n            .length;\n          if (length) {\n            this.$emit('updateStatus', 'metricType', MetricsType.UNKNOWN);\n            return;\n          }\n        }\n        const { typeOfMetrics } = data[0];\n        this.$emit('updateStatus', 'metricType', typeOfMetrics);\n        this.queryMetricTypesList = QueryMetricTypes[typeOfMetrics] || [];\n        this.itemConfig.queryMetricType = this.queryMetricTypesList[0] && this.queryMetricTypesList[0].value;\n        this.isLabel = typeOfMetrics === MetricsType.LABELED_VALUE ? true : false;\n        const values = {\n          metricType: typeOfMetrics,\n          queryMetricType: this.itemConfig.queryMetricType,\n          chartType: MetricChartType[this.itemConfig.queryMetricType],\n          metricName: params.value,\n        };\n        if (this.type === this.pageTypes[0]) {\n          this.EDIT_TOPO_ENDPOINT_CONFIG({\n            index: this.index,\n            values,\n          });\n        } else if (this.type === this.pageTypes[1]) {\n          this.EDIT_TOPO_INSTANCE_CONFIG({\n            index: this.index,\n            values,\n          });\n        } else {\n          this.EDIT_COMP_CONFIG({\n            index: this.index,\n            values,\n          });\n        }\n        this.itemConfig = {\n          ...this.itemConfig,\n          ...values,\n        };\n      });\n      return;\n    }\n    if (params.type === 'queryMetricType') {\n      const values = {\n        chartType: MetricChartType[params.value],\n        [params.type]: params.value,\n      };\n      if (this.type === this.pageTypes[0]) {\n        this.EDIT_TOPO_ENDPOINT_CONFIG({\n          index: this.index,\n          values,\n        });\n      } else if (this.type === this.pageTypes[1]) {\n        this.EDIT_TOPO_INSTANCE_CONFIG({\n          index: this.index,\n          values,\n        });\n      } else {\n        this.EDIT_COMP_CONFIG({\n          index: this.index,\n          values,\n        });\n      }\n      this.itemConfig = {\n        ...this.itemConfig,\n        ...values,\n      };\n      return;\n    }\n    if (params.type === 'independentSelector' || params.type === 'parentService') {\n      this.itemConfig[params.type] = params.value === 'true' ? true : false;\n      if (this.type === this.pageTypes[0]) {\n        this.EDIT_TOPO_ENDPOINT_CONFIG({\n          index: this.index,\n          values: { [params.type]: this.itemConfig[params.type] },\n        });\n      } else if (this.type === this.pageTypes[1]) {\n        this.EDIT_TOPO_INSTANCE_CONFIG({\n          index: this.index,\n          values: { [params.type]: this.itemConfig[params.type] },\n        });\n      } else {\n        this.EDIT_COMP_CONFIG({ index: this.index, values: { [params.type]: this.itemConfig[params.type] } });\n      }\n\n      return;\n    }\n    if (this.type === this.pageTypes[0]) {\n      this.EDIT_TOPO_ENDPOINT_CONFIG({\n        index: this.index,\n        values: { [params.type]: params.value },\n      });\n    } else if (this.type === this.pageTypes[1]) {\n      this.EDIT_TOPO_INSTANCE_CONFIG({\n        index: this.index,\n        values: { [params.type]: params.value },\n      });\n    } else {\n      this.EDIT_COMP_CONFIG({ index: this.index, values: { [params.type]: params.value } });\n    }\n  }\n\n  private setItemServices(update: boolean = false) {\n    this.GET_ITEM_SERVICES({ keyword: this.itemConfig.servicesKey || '', duration: this.durationTime }).then(\n      (result: Array<{ label: string; key: string }>) => {\n        this.services = result;\n        if (update) {\n          if (result.length) {\n            this.itemConfig.currentService = result[0].key;\n          } else {\n            this.itemConfig.currentService = '';\n          }\n        }\n        if (this.itemConfig.currentService) {\n          this.getServiceObject();\n        }\n      },\n    );\n  }\n\n  private getServiceObject(update: boolean = false) {\n    const service =\n      this.services.filter((d: { key: string; label: string }) => d.label === this.itemConfig.currentService)[0] ||\n      {};\n    const serviceId = service.key;\n\n    if (!serviceId) {\n      return;\n    }\n    if (this.itemConfig.entityType === EntityType[2].key) {\n      this.GET_ITEM_ENDPOINTS({\n        serviceId,\n        keyword: this.itemConfig.endpointsKey || '',\n        duration: this.durationTime,\n      }).then((data: Array<{ key: string; label: string }>) => {\n        this.endpoints = data;\n        if (update) {\n          if (data.length) {\n            this.itemConfig.currentEndpoint = data[0].key;\n          } else {\n            this.itemConfig.currentEndpoint = '';\n          }\n          this.EDIT_COMP_CONFIG({ index: this.index, values: { currentEndpoint: this.itemConfig.currentEndpoint } });\n        }\n      });\n    } else if (this.itemConfig.entityType === EntityType[3].key) {\n      this.GET_ITEM_INSTANCES({\n        serviceId,\n        keyword: this.itemConfig.instancesKey || '',\n        duration: this.durationTime,\n      }).then((data: Array<{ key: string; label: string }>) => {\n        this.instances = data;\n        if (update) {\n          if (data.length) {\n            this.itemConfig.currentInstance = data[0].key;\n          } else {\n            this.itemConfig.currentInstance = '';\n          }\n          this.EDIT_COMP_CONFIG({ index: this.index, values: { currentInstance: this.itemConfig.currentInstance } });\n        }\n      });\n    }\n  }\n}\n"],"sourceRoot":""}]}