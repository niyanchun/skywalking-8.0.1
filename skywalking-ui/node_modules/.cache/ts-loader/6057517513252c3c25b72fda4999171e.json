{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/utils/localtime.ts","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/utils/localtime.ts","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport graph from '@/graph';\n\nvar getLocalTime = function getLocalTime(i, t) {\n  var d = new Date(t);\n  var len = d.getTime();\n  var offset = d.getTimezoneOffset() * 60000;\n  var utcTime = len + offset;\n  return new Date(utcTime + 3600000 * i);\n};\n\nvar setTimezoneOffset = function setTimezoneOffset() {\n  window.localStorage.setItem('utc', -(new Date().getTimezoneOffset() / 60) + '');\n};\n\nexport var queryOAPTimeInfo =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var utc, res;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            utc = window.localStorage.getItem('utc');\n\n            if (utc) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 4;\n            return graph.query('queryOAPTimeInfo').params({});\n\n          case 4:\n            res = _context.sent;\n\n            if (!res.data) {\n              setTimezoneOffset();\n            }\n\n            utc = res.data.data.getTimeInfo.timezone / 100 + '';\n            window.localStorage.setItem('utc', utc);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function queryOAPTimeInfo() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default getLocalTime;",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/utils/localtime.ts"],"names":[],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;AAiBA,OAAO,KAAP,MAAkB,SAAlB;;AAGA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,CAAD,EAAY,CAAZ,EAAgC;AACnD,MAAM,CAAC,GAAG,IAAI,IAAJ,CAAS,CAAT,CAAV;AACA,MAAM,GAAG,GAAG,CAAC,CAAC,OAAF,EAAZ;AACA,MAAM,MAAM,GAAG,CAAC,CAAC,iBAAF,KAAwB,KAAvC;AACA,MAAM,OAAO,GAAG,GAAG,GAAG,MAAtB;AACA,SAAO,IAAI,IAAJ,CAAS,OAAO,GAAG,UAAU,CAA7B,CAAP;AACD,CAND;;AAQA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,GAAK;AAC7B,EAAA,MAAM,CAAC,YAAP,CAAoB,OAApB,CACE,KADF,EAEE,EAAE,IAAI,IAAJ,GAAW,iBAAX,KAAiC,EAAnC,IAAyC,EAF3C;AAID,CALD;;AAOA,OAAO,IAAM,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1B,YAAA,GAD0B,GACpB,MAAM,CAAC,YAAP,CAAoB,OAApB,CAA4B,KAA5B,CADoB;;AAAA,gBAEzB,GAFyB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGK,KAAK,CAAC,KAAN,CAAY,kBAAZ,EAAgC,MAAhC,CAAuC,EAAvC,CAHL;;AAAA;AAGtB,YAAA,GAHsB;;AAI5B,gBAAI,CAAC,GAAG,CAAC,IAAT,EAAe;AACb,cAAA,iBAAiB;AAClB;;AACD,YAAA,GAAG,GAAG,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAc,WAAd,CAA0B,QAA1B,GAAqC,GAArC,GAA2C,EAAjD;AACA,YAAA,MAAM,CAAC,YAAP,CAAoB,OAApB,CAA4B,KAA5B,EAAmC,GAAnC;;AAR4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhB,gBAAgB;AAAA;AAAA;AAAA,GAAtB;AAYP,eAAe,YAAf","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport graph from '@/graph';\nimport { AxiosResponse } from 'axios';\n\nconst getLocalTime = (i: number, t: Date | number) => {\n  const d = new Date(t);\n  const len = d.getTime();\n  const offset = d.getTimezoneOffset() * 60000;\n  const utcTime = len + offset;\n  return new Date(utcTime + 3600000 * i);\n};\n\nconst setTimezoneOffset = () => {\n  window.localStorage.setItem(\n    'utc',\n    -(new Date().getTimezoneOffset() / 60) + '',\n  );\n};\n\nexport const queryOAPTimeInfo = async () => {\n  let utc = window.localStorage.getItem('utc');\n  if (!utc) {\n    const res: AxiosResponse = await graph.query('queryOAPTimeInfo').params({});\n    if (!res.data) {\n      setTimezoneOffset();\n    }\n    utc = res.data.data.getTimeInfo.timezone / 100 + '';\n    window.localStorage.setItem('utc', utc);\n  }\n};\n\nexport default getLocalTime;\n"],"sourceRoot":""}]}