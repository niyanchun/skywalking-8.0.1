{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/radial.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/radial.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _Set from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/core-js/set\";\nimport _toConsumableArray from \"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport * as d3 from 'd3';\nimport d3tip from 'd3-tip';\nexport default {\n  props: {\n    datas: {\n      type: Object,\n      default: function _default() {\n        return {\n          nodes: [],\n          calls: []\n        };\n      }\n    }\n  },\n  computed: {\n    responseConfig: function responseConfig() {\n      var graph = this.datas;\n\n      var categories = _toConsumableArray(new _Set(graph.nodes.map(function (i) {\n        return i.type;\n      }))).map(function (i) {\n        return {\n          name: i\n        };\n      });\n\n      var links = [];\n      var nodes = [];\n      graph.calls.forEach(function (call, index) {\n        links.push({\n          index: index,\n          source: call.source.id,\n          target: call.target.id\n        });\n      });\n      graph.nodes.forEach(function (node) {\n        nodes.push({\n          id: node.id,\n          name: node.name,\n          label: {\n            normal: {\n              show: true\n            }\n          },\n          category: node.type\n        });\n      });\n      return {\n        tooltip: {},\n        color: ['#6be6c1', '#a0a7e6', '#96dee8', '#3f96e3', '#3fb1e3', '#6be6c1', '#626c91', '#a0a7e6', '#c4ebad', '#96dee8'],\n        legend: {\n          top: 25,\n          textStyle: {\n            color: '#ddd'\n          },\n          data: categories.map(function (a) {\n            return a.name;\n          })\n        },\n        series: [{\n          top: '20%',\n          height: '60%',\n          name: 'Les Miserables',\n          type: 'graph',\n          layout: 'circular',\n          circular: {\n            rotateLabel: true\n          },\n          data: nodes,\n          links: links,\n          categories: categories,\n          roam: true,\n          label: {\n            normal: {\n              position: 'right',\n              formatter: '{b}'\n            }\n          },\n          lineStyle: {\n            normal: {\n              color: 'source',\n              curveness: 0.3\n            }\n          }\n        }]\n      };\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var myChart = this.$refs.radial.myChart;\n    myChart.on('click', function (params) {\n      var currentNode = _this.datas.nodes.find(function (item) {\n        return item.id === params.data.id;\n      });\n\n      if (currentNode) {\n        _this.$store.commit('rocketTopo/SET_NODE', currentNode);\n      } else {\n        _this.$store.commit('rocketTopo/SET_NODE', {});\n      }\n    });\n  }\n};",{"version":3,"sources":["radial.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n\n<template>\n  <div class=\"micro-radil-chart\">\n    <RkEcharts height=\"100%\" :option=\"responseConfig\" ref=\"radial\" />\n  </div>\n</template>\n<script lang=\"js\">\n  import * as d3 from 'd3';\n  import d3tip from 'd3-tip';\n\n  export default {\n    props: {\n      datas: {\n        type: Object,\n        default() {\n          return {\n            nodes: [],\n            calls: [],\n          };\n        },\n      },\n    },\n    computed: {\n      responseConfig() {\n        const graph = this.datas;\n        const categories = [...new Set(graph.nodes.map((i) => i.type))].map((i) => ({name: i}));\n        const links = [];\n        const nodes = [];\n        graph.calls.forEach((call, index) => {\n          links.push({\n            index,\n            source: call.source.id,\n            target: call.target.id,\n          });\n        });\n        graph.nodes.forEach((node) => {\n          nodes.push({\n            id: node.id,\n            name: node.name,\n            label: {\n              normal: {\n                show: true,\n              },\n            },\n            category: node.type,\n          });\n        });\n        return {\n          tooltip: {},\n           color: [\n            '#6be6c1',\n            '#a0a7e6',\n            '#96dee8',\n            '#3f96e3',\n            '#3fb1e3',\n            '#6be6c1',\n            '#626c91',\n            '#a0a7e6',\n            '#c4ebad',\n            '#96dee8',\n          ],\n           legend: {\n              top: 25,\n              textStyle: {\n                color: '#ddd',\n              },\n              data: categories.map((a) => a.name),\n          },\n          series : [\n            {\n              top: '20%',\n              height: '60%',\n              name: 'Les Miserables',\n              type: 'graph',\n              layout: 'circular',\n              circular: {\n                  rotateLabel: true,\n              },\n              data: nodes,\n              links,\n              categories,\n              roam: true,\n              label: {\n                normal: {\n                  position: 'right',\n                  formatter: '{b}',\n                },\n              },\n              lineStyle: {\n                normal: {\n                  color: 'source',\n                  curveness: 0.3,\n                },\n              },\n            },\n          ],\n        };\n      },\n    },\n    mounted() {\n      const myChart = this.$refs.radial.myChart;\n      myChart.on('click', (params) => {\n        const currentNode = this.datas.nodes.find((item) => item.id === params.data.id);\n        if (currentNode) {\n          this.$store.commit('rocketTopo/SET_NODE', currentNode);\n        } else {\n          this.$store.commit('rocketTopo/SET_NODE', {});\n        }\n      });\n    },\n  };\n</script>\n<style lang=\"scss\">\n  .micro-radil-chart {\n    height: 100%;\n    position: fixed;\n    top: 48px;\n    background-color: #333840;\n    width: 100%;\n    z-index: 100;\n    text-align: center;\n  }\n  .micro-radil-chart-btn {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    z-index: 99;\n  }\n</style>\n"],"sourceRoot":"src/views/components/topology"}]}