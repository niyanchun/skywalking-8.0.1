{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/chart/utils/simulation.js","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/chart/utils/simulation.js","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var simulationInit = function simulationInit(d3, data_nodes, data_links, ticked) {\n  var simulation = d3.forceSimulation(data_nodes).force('collide', d3.forceCollide().radius(function () {\n    return 60;\n  })).force('yPos', d3.forceY().strength(1)).force('xPos', d3.forceX().strength(1)).force('charge', d3.forceManyBody().strength(-520)).force('link', d3.forceLink(data_links).id(function (d) {\n    return d.id;\n  })).force('center', d3.forceCenter(window.innerWidth / 2, window.innerHeight / 2 - 20)).on('tick', ticked).stop();\n  simulationSkip(d3, simulation, ticked);\n  return simulation;\n};\nexport var simulationSkip = function simulationSkip(d3, simulation, ticked) {\n  d3.timeout(function () {\n    var n = Math.ceil(Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay()));\n\n    for (var i = 0; i < n; i += 1) {\n      simulation.tick();\n      ticked();\n    }\n  });\n};",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/chart/utils/simulation.js"],"names":["simulationInit","d3","data_nodes","data_links","ticked","simulation","forceSimulation","force","forceCollide","radius","forceY","strength","forceX","forceManyBody","forceLink","id","d","forceCenter","window","innerWidth","innerHeight","on","stop","simulationSkip","timeout","n","Math","ceil","log","alphaMin","alphaDecay","i","tick"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAKC,UAAL,EAAiBC,UAAjB,EAA6BC,MAA7B,EAAwC;AACpE,MAAMC,UAAU,GAAGJ,EAAE,CAClBK,eADgB,CACAJ,UADA,EAEhBK,KAFgB,CAGf,SAHe,EAIfN,EAAE,CAACO,YAAH,GAAkBC,MAAlB,CAAyB;AAAA,WAAM,EAAN;AAAA,GAAzB,CAJe,EAMhBF,KANgB,CAMV,MANU,EAMFN,EAAE,CAACS,MAAH,GAAYC,QAAZ,CAAqB,CAArB,CANE,EAOhBJ,KAPgB,CAOV,MAPU,EAOFN,EAAE,CAACW,MAAH,GAAYD,QAAZ,CAAqB,CAArB,CAPE,EAQhBJ,KARgB,CAQV,QARU,EAQAN,EAAE,CAACY,aAAH,GAAmBF,QAAnB,CAA4B,CAAC,GAA7B,CARA,EAShBJ,KATgB,CAUf,MAVe,EAWfN,EAAE,CAACa,SAAH,CAAaX,UAAb,EAAyBY,EAAzB,CAA4B,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACD,EAAT;AAAA,GAA5B,CAXe,EAahBR,KAbgB,CAaV,QAbU,EAaAN,EAAE,CAACgB,WAAH,CAAeC,MAAM,CAACC,UAAP,GAAoB,CAAnC,EAAsCD,MAAM,CAACE,WAAP,GAAqB,CAArB,GAAyB,EAA/D,CAbA,EAchBC,EAdgB,CAcb,MAda,EAcLjB,MAdK,EAehBkB,IAfgB,EAAnB;AAgBAC,EAAAA,cAAc,CAACtB,EAAD,EAAKI,UAAL,EAAiBD,MAAjB,CAAd;AACA,SAAOC,UAAP;AACD,CAnBM;AAqBP,OAAO,IAAMkB,cAAc,GAAG,SAAjBA,cAAiB,CAACtB,EAAD,EAAKI,UAAL,EAAiBD,MAAjB,EAA4B;AACxDH,EAAAA,EAAE,CAACuB,OAAH,CAAW,YAAM;AACf,QAAMC,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASvB,UAAU,CAACwB,QAAX,EAAT,IAAkCH,IAAI,CAACE,GAAL,CAAS,IAAIvB,UAAU,CAACyB,UAAX,EAAb,CAA5C,CAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,CAApB,EAAuBM,CAAC,IAAI,CAA5B,EAA+B;AAC7B1B,MAAAA,UAAU,CAAC2B,IAAX;AACA5B,MAAAA,MAAM;AACP;AACF,GAND;AAOD,CARM","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const simulationInit = (d3, data_nodes, data_links, ticked) => {\n  const simulation = d3\n    .forceSimulation(data_nodes)\n    .force(\n      'collide',\n      d3.forceCollide().radius(() => 60),\n    )\n    .force('yPos', d3.forceY().strength(1))\n    .force('xPos', d3.forceX().strength(1))\n    .force('charge', d3.forceManyBody().strength(-520))\n    .force(\n      'link',\n      d3.forceLink(data_links).id((d) => d.id),\n    )\n    .force('center', d3.forceCenter(window.innerWidth / 2, window.innerHeight / 2 - 20))\n    .on('tick', ticked)\n    .stop();\n  simulationSkip(d3, simulation, ticked);\n  return simulation;\n};\n\nexport const simulationSkip = (d3, simulation, ticked) => {\n  d3.timeout(() => {\n    const n = Math.ceil(Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay()));\n    for (let i = 0; i < n; i += 1) {\n      simulation.tick();\n      ticked();\n    }\n  });\n};\n"]}]}