{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/chart/utils/icons.js","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/chart/utils/icons.js","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar requireComponent = require.context('../../assets', false, /\\.png$/);\n\nvar result = {};\n\nfunction capitalizeFirstLetter(str) {\n  return str.toUpperCase();\n}\n\nfunction validateFileName(str) {\n  return /^\\S+\\.png$/.test(str) && str.replace(/^\\S+\\/(\\w+)\\.png$/, function (rs, $1) {\n    return capitalizeFirstLetter($1);\n  });\n}\n\nrequireComponent.keys().forEach(function (filePath) {\n  var componentConfig = requireComponent(filePath);\n  var fileName = validateFileName(filePath);\n  result[fileName] = componentConfig;\n});\nexport default result;",{"version":3,"sources":["/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/chart/utils/icons.js"],"names":["requireComponent","require","context","result","capitalizeFirstLetter","str","toUpperCase","validateFileName","test","replace","rs","$1","keys","forEach","filePath","componentConfig","fileName"],"mappings":";;;AAAA;;;;;;;;;;;;;;;;AAgBA,IAAMA,gBAAgB,GAAGC,OAAO,CAACC,OAAR,CAAgB,cAAhB,EAAgC,KAAhC,EAAuC,QAAvC,CAAzB;;AAEA,IAAMC,MAAM,GAAG,EAAf;;AACA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoC;AAClC,SAAOA,GAAG,CAACC,WAAJ,EAAP;AACD;;AACD,SAASC,gBAAT,CAA0BF,GAA1B,EAA+B;AAC7B,SAAO,aAAaG,IAAb,CAAkBH,GAAlB,KAA0BA,GAAG,CAACI,OAAJ,CAAY,mBAAZ,EAAiC,UAACC,EAAD,EAAKC,EAAL;AAAA,WAAYP,qBAAqB,CAACO,EAAD,CAAjC;AAAA,GAAjC,CAAjC;AACD;;AACDX,gBAAgB,CAACY,IAAjB,GAAwBC,OAAxB,CAAgC,UAACC,QAAD,EAAc;AAC5C,MAAMC,eAAe,GAAGf,gBAAgB,CAACc,QAAD,CAAxC;AACA,MAAME,QAAQ,GAAGT,gBAAgB,CAACO,QAAD,CAAjC;AACAX,EAAAA,MAAM,CAACa,QAAD,CAAN,GAAmBD,eAAnB;AACD,CAJD;AAKA,eAAeZ,MAAf","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst requireComponent = require.context('../../assets', false, /\\.png$/);\n\nconst result = {};\nfunction capitalizeFirstLetter(str) {\n  return str.toUpperCase();\n}\nfunction validateFileName(str) {\n  return /^\\S+\\.png$/.test(str) && str.replace(/^\\S+\\/(\\w+)\\.png$/, (rs, $1) => capitalizeFirstLetter($1));\n}\nrequireComponent.keys().forEach((filePath) => {\n  const componentConfig = requireComponent(filePath);\n  const fileName = validateFileName(filePath);\n  result[fileName] = componentConfig;\n});\nexport default result;\n"]}]}