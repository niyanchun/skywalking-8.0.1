{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/containers/dashboard.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/containers/dashboard.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.dashboard-container {\n  overflow: auto;\n  padding: 20px 15px;\n  height: 100%;\n  flex-grow: 1;\n}\n.rk-add-dashboard-item {\n  height: 342px;\n  text-align: center;\n  line-height: 250px;\n  border: 1px dashed rgba(196, 200, 225, 0.5);\n  cursor: pointer;\n  display: inline-block;\n  font-size: 16px;\n}\n",{"version":3,"sources":["dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dashboard.vue","sourceRoot":"src/views/containers","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n<template>\n  <div class=\"flex-v wrapper\" style=\"flex-grow:1;height: 100%;overflow:hidden\">\n    <ToolGroup :rocketGlobal=\"rocketGlobal\" :rocketComps=\"rocketComps\" />\n    <ToolBar\n      :rocketGlobal=\"rocketGlobal\"\n      :rocketComps=\"rocketComps\"\n      :compType=\"compType\"\n      :durationTime=\"durationTime\"\n      :stateDashboard=\"stateDashboardOption\"\n    />\n    <ToolNav :rocketGlobal=\"rocketGlobal\" :rocketComps=\"rocketComps\" />\n    <div class=\"dashboard-container clear\">\n      <DashboardItem\n        v-for=\"(i, index) in rocketComps.tree[rocketComps.group] &&\n          rocketComps.tree[rocketComps.group].children[rocketComps.current] &&\n          rocketComps.tree[rocketComps.group].children[rocketComps.current].children\"\n        :key=\"index + i.title + i.width\"\n        :index=\"index\"\n        :rocketGlobal=\"rocketGlobal\"\n        :item=\"i\"\n        :updateObjects=\"ObjectsType.UPDATE_DASHBOARD\"\n      >\n      </DashboardItem>\n      <div v-show=\"rocketGlobal.edit\" class=\"rk-add-dashboard-item g-sm-3\" @click=\"ADD_COMP\">\n        + Add An Item\n      </div>\n    </div>\n    <v-dialog width=\"300px\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import { Component, Vue, Watch } from 'vue-property-decorator';\n  import { Action, Getter, State, Mutation } from 'vuex-class';\n  import ToolBar from '@/views/components/dashboard/tool-bar.vue';\n  import ToolGroup from '@/views/components/dashboard/tool-group.vue';\n  import ToolNav from '@/views/components/dashboard/tool-nav.vue';\n  import DashboardItem from '@/views/components/dashboard/dashboard-item.vue';\n  import { ObjectsType } from '../constant';\n\n  interface ITemplate {\n    name: string;\n    type: string;\n    configuration: string;\n    activated: boolean;\n    disabled: boolean;\n  }\n  @Component({\n    components: {\n      ToolBar,\n      ToolGroup,\n      ToolNav,\n      DashboardItem,\n    },\n  })\n  export default class Dashboard extends Vue {\n    @State('rocketbot') private rocketGlobal: any;\n    @State('rocketOption') private stateDashboardOption!: any;\n    @State('rocketData') private rocketComps!: any;\n    @Action('MIXHANDLE_GET_OPTION') private MIXHANDLE_GET_OPTION: any;\n    @Action('GET_ALL_TEMPLATES') private GET_ALL_TEMPLATES: any;\n    // @Action('ADD_TEMPLATE') private ADD_TEMPLATE: any;\n    @Getter('durationTime') private durationTime: any;\n    @Mutation('SET_COMPS_TREE') private SET_COMPS_TREE: any;\n    @Mutation('ADD_COMP') private ADD_COMP: any;\n    @Mutation('SET_EDIT') private SET_EDIT: any;\n\n    private ObjectsType = ObjectsType;\n\n    private isRouterAlive: boolean = true;\n    public reload(): void {\n      this.isRouterAlive = false;\n      this.$nextTick(() => {\n        this.isRouterAlive = true;\n      });\n    }\n    private get compType() {\n      return (\n        (this.rocketComps.tree[this.rocketComps.group] && this.rocketComps.tree[this.rocketComps.group].type) ||\n        'service'\n      );\n    }\n    private handleOption() {\n      this.MIXHANDLE_GET_OPTION({\n        compType: this.compType,\n        duration: this.durationTime,\n        keywordServiceName: this.stateDashboardOption.keywordService,\n      });\n    }\n    private beforeMount() {\n      // this.ADD_TEMPLATE({\n      //   name: 'Topology Instance',\n      //   type: 'TOPOLOGY_INSTANCE',\n      //   active: true,\n      //   configuration: JSON.stringify(TopologyInstanceTemp),\n      // }).then((data: any) => {\n      //   console.log(data);\n      // });\n      if (window.localStorage.getItem('version') !== '8.0') {\n        this.GET_ALL_TEMPLATES().then((allTemplate: ITemplate[]) => {\n          window.localStorage.removeItem('dashboard');\n          this.setDashboardTemplates(allTemplate);\n          this.handleOption();\n        });\n      } else {\n        const data: string = `${window.localStorage.getItem('dashboard')}`;\n        this.SET_COMPS_TREE(JSON.parse(data));\n      }\n      this.handleOption();\n    }\n    private setDashboardTemplates(allTemplate: ITemplate[]) {\n      const template = allTemplate.filter((item: ITemplate) => item.type === 'DASHBOARD' && item.activated);\n      const templatesConfiguration = template.map((item: ITemplate) => JSON.parse(item.configuration)).flat(1);\n\n      this.SET_COMPS_TREE(templatesConfiguration || []);\n      window.localStorage.setItem('version', '8.0');\n      window.localStorage.setItem('dashboard', JSON.stringify(templatesConfiguration));\n    }\n    private beforeDestroy() {\n      this.SET_EDIT(false);\n    }\n  }\n</script>\n<style lang=\"scss\">\n  .dashboard-container {\n    overflow: auto;\n    padding: 20px 15px;\n    height: 100%;\n    flex-grow: 1;\n  }\n  .rk-add-dashboard-item {\n    height: 342px;\n    text-align: center;\n    line-height: 250px;\n    border: 1px dashed rgba(196, 200, 225, 0.5);\n    cursor: pointer;\n    display: inline-block;\n    font-size: 16px;\n  }\n</style>\n"]}]}