{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/topo-detect-point.vue?vue&type=template&id=e2b75bc6&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/topo-detect-point.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div\n  v-if=\"stateTopo.selectedServiceCall || showServerInfo\"\n  :class=\"`link-topo-aside-box link-topo-aside-box-${isMini ? 'min' : 'max'}`\"\n  :style=\"`top:55px;position: fixed;right: 30px;${showInfoCount === 0 ? 'animation: unset;' : ''}`\"\n>\n  <svg\n    :style=\"`position:absolute;left:-48px;top:0;transform: rotate(${isMini ? 0 : 180}deg);`\"\n    class=\"link-topo-aside-btn icon cp lg\"\n    @click=\"setShowInfo\"\n  >\n    <use xlink:href=\"#chevron-left\" />\n  </svg>\n  <div class=\"mb-5 clear\">\n    <div v-if=\"stateTopo.selectedServiceCall\">\n      <span class=\"b dib mr-20 vm\">{{ $t('detectPoint') }}</span>\n      <span\n        v-if=\"stateTopo.detectPoints.indexOf('CLIENT') !== -1\"\n        :class=\"{ active: !stateTopo.mode }\"\n        class=\"link-topo-aside-box-btn tc r sm cp b\"\n        @click=\"setMode(false)\"\n        >{{ this.$t('client') }}</span\n      >\n      <span\n        v-if=\"stateTopo.detectPoints.indexOf('SERVER') !== -1\"\n        :class=\"{ active: stateTopo.mode }\"\n        class=\"link-topo-aside-box-btn tc r sm cp b\"\n        @click=\"setMode(true)\"\n        >{{ this.$t('server') }}</span\n      >\n    </div>\n    <span v-else-if=\"showServerInfo\" class=\"b dib mr-20 vm\">{{ $t('serviceDetail') }}</span>\n  </div>\n  <div v-if=\"showInfo\">\n    <div v-if=\"stateTopo.selectedServiceCall\">\n      <TopoChart\n        v-if=\"stateTopo.getResponseTimeTrend.length\"\n        :data=\"stateTopo.getResponseTimeTrend\"\n        :intervalTime=\"intervalTime\"\n        :title=\"$t('avgResponseTime')\"\n        unit=\"ms\"\n      />\n      <TopoChart\n        v-if=\"stateTopo.getThroughputTrend.length\"\n        :data=\"stateTopo.getThroughputTrend\"\n        :intervalTime=\"intervalTime\"\n        :title=\"$t('avgThroughput')\"\n        unit=\"cpm\"\n      />\n      <TopoChart\n        v-if=\"stateTopo.getSLATrend.length\"\n        :data=\"stateTopo.getSLATrend\"\n        :intervalTime=\"intervalTime\"\n        :precent=\"true\"\n        :title=\"$t('avgSLA')\"\n        unit=\"%\"\n      />\n      <ChartLine\n        v-if=\"stateTopo.responsePercentile\"\n        :data=\"stateTopo.responsePercentile\"\n        :intervalTime=\"intervalTime\"\n        :title=\"$t('percentResponse')\"\n      />\n    </div>\n    <div v-else-if=\"showServerInfo\">\n      <TopoChart\n        v-if=\"stateTopo.serviceResponseTime.length\"\n        :data=\"stateTopo.serviceResponseTime\"\n        :intervalTime=\"intervalTime\"\n        title=\"Service ResponseTime\"\n        unit=\"ms\"\n      />\n      <TopoChart\n        v-if=\"stateTopo.serviceThroughput.length\"\n        :data=\"stateTopo.serviceThroughput\"\n        :intervalTime=\"intervalTime\"\n        title=\"Service Throughput\"\n        unit=\"cpm\"\n      />\n      <ChartLine\n        v-if=\"stateTopo.servicePercentile.p50.length\"\n        :data=\"stateTopo.servicePercentile\"\n        :intervalTime=\"intervalTime\"\n        :title=\"$t('percentResponse')\"\n      />\n    </div>\n  </div>\n  <div class=\"show-dependency\" v-if=\"stateTopo.selectedServiceCall\">\n    <a class=\"rk-btn lg\" @click=\"openInstanceModal\">{{ $t('ShowInstanceDependency') }}</a>\n    <rk-sidebox\n      class=\"instance-dependency\"\n      width=\"80%\"\n      :fixed=\"true\"\n      :title=\"\n        `${stateTopo.selectedServiceCall.source.name} -> ${stateTopo.selectedServiceCall.target.name} Instance Dependency`\n      \"\n      :show.sync=\"dialogTopoVisible\"\n    >\n      <TopoInstanceDependency />\n    </rk-sidebox>\n  </div>\n</div>\n",null]}