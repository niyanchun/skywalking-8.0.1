{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/profile/task-list.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/profile/task-list.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.profile-task-list {\n  width: 30%;\n  min-height: 150px;\n  min-width: 350px;\n  height: 100%;\n  overflow: auto;\n  .profile-task-wrapper,\n  .profile-trace-wrapper {\n    min-height: 100px;\n    width: 100%;\n  }\n  .rk-no-data {\n    text-align: center;\n    margin-top: 10px;\n  }\n  .rk-trace-td {\n    padding: 8px 10px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.07);\n    &.selected {\n      background-color: #ededed;\n    }\n  }\n  .rk-profile-t-tool {\n    padding: 10px 10px;\n    font-weight: bold;\n    border-right: 1px solid rgba(0, 0, 0, 0.07);\n    border-bottom: 1px solid rgba(0, 0, 0, 0.07);\n  }\n  .log-item {\n    margin-top: 20px;\n  }\n  .profile-btn {\n    color: #fff;\n    padding: 1px 3px;\n    border-radius: 2px;\n    font-size: 12px;\n  }\n}\n.profile-segment {\n  border-top: 1px solid rgba(0, 0, 0, 0.07);\n}\n",{"version":3,"sources":["task-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task-list.vue","sourceRoot":"src/views/components/profile","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n\n<template>\n  <div class=\"profile-task-list flex-v\">\n    <div class=\"profile-task-wrapper flex-v\">\n      <div class=\"rk-profile-t-tool flex-h\">\n        Task List\n      </div>\n      <div class=\"rk-trace-t-wrapper scroll_hide\">\n        <div class=\"rk-no-data\" v-show=\"!taskListSource.length\">No Data</div>\n        <table class=\"rk-trace-t\">\n          <tr class=\"rk-trace-tr cp\" v-for=\"(i, index) in taskListSource\" @click=\"selectTask(i)\" :key=\"index\">\n            <td\n              class=\"rk-trace-td\"\n              :class=\"{\n                selected: selectedTask.id === i.id,\n              }\"\n            >\n              <div class=\"ell mb-5\">\n                <span class=\"b\">{{ i.endpointName }}</span>\n                <a class=\"profile-btn bg-blue r\" @click=\"viewTask(i)\">\n                  <span class=\"vm\">{{ $t('taskView') }}</span>\n                </a>\n              </div>\n              <div class=\"grey ell sm\">\n                <span class=\"mr-10 sm\">{{ i.startTime | dateformat }}</span>\n                <span class=\"mr-10 sm\">{{ (i.startTime + i.duration * 60 * 1000) | dateformat }}</span>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n      <rk-sidebox :width=\"'50%'\" :show.sync=\"viewDetail\" :title=\"$t('taskInfo')\">\n        <div class=\"rk-trace-detail\">\n          <h5 class=\"mb-10\">{{ $t('task') }}.</h5>\n          <div class=\"mb-10 clear\">\n            <span class=\"g-sm-4 grey\">{{ $t('service') }}:</span>\n            <span class=\"g-sm-8 wba\">{{ this.selectedTaskService.label }}</span>\n          </div>\n          <div class=\"mb-10 clear\">\n            <span class=\"g-sm-4 grey\">{{ $t('endpoint') }}:</span>\n            <span class=\"g-sm-8 wba\">{{ this.selectedTask.endpointName }}</span>\n          </div>\n          <div class=\"mb-10 clear\">\n            <span class=\"g-sm-4 grey\">{{ this.$t('monitorTime') }}:</span\n            ><span class=\"g-sm-8 wba\">{{ this.selectedTask.startTime | dateformat }}</span>\n          </div>\n          <div class=\"mb-10 clear\">\n            <span class=\"g-sm-4 grey\">{{ this.$t('monitorDuration') }}:</span\n            ><span class=\"g-sm-8 wba\">{{ this.selectedTask.duration }} min</span>\n          </div>\n          <div class=\"mb-10 clear\">\n            <span class=\"g-sm-4 grey\">{{ this.$t('minThreshold') }}:</span>\n            <span class=\"g-sm-8 wba\">{{ this.selectedTask.minDurationThreshold }} ms</span>\n          </div>\n          <div class=\"mb-10 clear\">\n            <span class=\"g-sm-4 grey\">{{ this.$t('dumpPeriod') }}:</span>\n            <span class=\"g-sm-8 wba\">{{ this.selectedTask.dumpPeriod }}</span>\n          </div>\n          <div class=\"mb-10 clear\">\n            <span class=\"g-sm-4 grey\">{{ this.$t('maxSamplingCount') }}:</span>\n            <span class=\"g-sm-8 wba\">{{ this.selectedTask.maxSamplingCount }}</span>\n          </div>\n          <h5 class=\"mb-10\" v-if=\"this.selectedTask.logs\" v-show=\"this.selectedTask.logs.length\">{{ $t('logs') }}.</h5>\n          <div class=\"log-item\" v-for=\"(i, index) in this.selectedTask.logs\" :key=\"index\">\n            <div class=\"mb-10 sm\">\n              <span class=\"mr-10 grey\">{{ $t('instance') }}:</span>\n              <span>{{ i.instanceName }}</span>\n            </div>\n            <div class=\"mb-10 sm\">\n              <span class=\"mr-10 grey\">{{ $t('operationType') }}:</span>\n              <span>{{ i.operationType }}</span>\n            </div>\n            <div class=\"mb-10 sm\">\n              <span class=\"mr-10 grey\">{{ $t('operationTime') }}:</span>\n              <span>{{ i.operationTime | dateformat }}</span>\n            </div>\n          </div>\n        </div>\n      </rk-sidebox>\n    </div>\n    <div class=\"profile-trace-wrapper profile-segment flex-v\">\n      <div class=\"rk-profile-t-tool flex-h\">\n        Sampled Traces\n      </div>\n      <div class=\"rk-trace-t-wrapper scroll_hide\">\n        <div class=\"rk-no-data\" v-show=\"!segmentList.length\">No Data</div>\n        <table class=\"rk-trace-t\">\n          <tr class=\"rk-trace-tr cp\" v-for=\"(i, index) in segmentList\" @click=\"selectTrace(i)\" :key=\"index\">\n            <td\n              class=\"rk-trace-td\"\n              :class=\"{\n                'rk-trace-success': !i.isError,\n                'rk-trace-error': i.isError,\n                selected: selectedKey == i.segmentId,\n              }\"\n            >\n              <div\n                class=\"ell mb-5\"\n                :class=\"{\n                  blue: !i.isError,\n                  red: i.isError,\n                }\"\n              >\n                <span class=\"b\">{{ i.endpointNames[0] }}</span>\n              </div>\n              <div class=\"grey ell sm\">\n                <span class=\"rk-tag mr-10 sm\">{{ i.duration }} ms</span>{{ parseInt(i.start) | dateformat }}\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import { Duration, Option } from '@/types/global';\n  import { Component, Prop, Vue } from 'vue-property-decorator';\n  import { Action, Mutation } from 'vuex-class';\n\n  @Component\n  export default class ProfileTaskList extends Vue {\n    @Prop() private taskListSource: any;\n    @Prop() private segmentList: any;\n    @Prop() private headerSource: any;\n    @Action('profileStore/GET_SEGMENT_LIST') private GET_SEGMENT_LIST: any;\n    @Mutation('profileStore/SET_CURRENT_SEGMENT') private SET_CURRENT_SEGMENT: any;\n    @Action('profileStore/GET_SEGMENT_SPANS') private GET_SEGMENT_SPANS: any;\n    private selectedKey: string = '';\n    private selectedTask: any = {};\n    private viewDetail: boolean = false;\n    private selectedTaskService: any = {};\n\n    private selectTask(item: { id: string; serviceId: string }) {\n      this.selectedTask = item;\n      this.selectedTaskService =\n        this.headerSource.serviceSource.filter((service: any) => service.key === item.serviceId)[0] || {};\n      this.GET_SEGMENT_LIST({ taskID: item.id });\n    }\n\n    private viewTask(item: any) {\n      this.viewDetail = true;\n      this.selectedTask = item;\n    }\n\n    private selectTrace(item: { segmentId: string }) {\n      this.SET_CURRENT_SEGMENT(item);\n      this.selectedKey = item.segmentId;\n      this.GET_SEGMENT_SPANS({ segmentId: item.segmentId });\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .profile-task-list {\n    width: 30%;\n    min-height: 150px;\n    min-width: 350px;\n    height: 100%;\n    overflow: auto;\n    .profile-task-wrapper,\n    .profile-trace-wrapper {\n      min-height: 100px;\n      width: 100%;\n    }\n    .rk-no-data {\n      text-align: center;\n      margin-top: 10px;\n    }\n    .rk-trace-td {\n      padding: 8px 10px;\n      border-bottom: 1px solid rgba(0, 0, 0, 0.07);\n      &.selected {\n        background-color: #ededed;\n      }\n    }\n    .rk-profile-t-tool {\n      padding: 10px 10px;\n      font-weight: bold;\n      border-right: 1px solid rgba(0, 0, 0, 0.07);\n      border-bottom: 1px solid rgba(0, 0, 0, 0.07);\n    }\n    .log-item {\n      margin-top: 20px;\n    }\n    .profile-btn {\n      color: #fff;\n      padding: 1px 3px;\n      border-radius: 2px;\n      font-size: 12px;\n    }\n  }\n  .profile-segment {\n    border-top: 1px solid rgba(0, 0, 0, 0.07);\n  }\n</style>\n"]}]}