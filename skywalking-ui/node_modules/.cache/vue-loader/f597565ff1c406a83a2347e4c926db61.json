{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/profile/profile-task.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/profile/profile-task.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.rk-profile-task {\n  margin: 20px;\n}\nlabel {\n  display: inline-block;\n  margin: 10px 0;\n  font-weight: bold;\n  font-size: 14px;\n}\n.rk-profile-input {\n  border-style: unset;\n  outline: 0;\n  padding: 2px 5px;\n  border-radius: 3px;\n  border: 1px solid #ccc;\n  height: 30px;\n  line-height: 40px;\n  display: block;\n  width: 100%;\n}\n.rk-create-task-btn {\n  color: #fff;\n  padding: 10px 9px;\n  border-radius: 4px;\n  margin-top: 40px;\n  width: 100%;\n  text-align: center;\n}\n.message-tip {\n  font-size: 14px;\n  color: red;\n  margin-top: 10px;\n}\n.monitor-time-radio {\n  display: inline;\n}\n",{"version":3,"sources":["profile-task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"profile-task.vue","sourceRoot":"src/views/components/profile","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n\n<template>\n  <div class=\"rk-profile-task\">\n    <label>{{ this.$t('service') }}</label>\n    <RkSelect\n      class=\"mb-5\"\n      :current=\"newTaskFields.service\"\n      :data=\"taskFieldSource.serviceSource\"\n      @onChoose=\"(item) => changeOption(item, updateTaskOpt.Service)\"\n    />\n    <label>{{ this.$t('endpointName') }}</label>\n    <input type=\"text\" class=\"rk-profile-input\" @change=\"changeOption($event, updateTaskOpt.EndpointName)\" />\n    <div>\n      <label>{{ this.$t('monitorTime') }}</label>\n      <div>\n        <RkRadio\n          class=\"mb-5 monitor-time-radio\"\n          :current=\"newTaskFields.monitorTime\"\n          :data=\"locale === 'en' ? taskFieldSource.monitorTimeEn : taskFieldSource.monitorTimeCn\"\n          @onChoose=\"(item) => changeOption(item, updateTaskOpt.MonitorTime)\"\n        />\n        <span>\n          <RkDate class=\"sm\" v-model=\"time\" position=\"bottom\" format=\"YYYY-MM-DD HH:mm:ss\" />\n        </span>\n      </div>\n    </div>\n    <label>{{ this.$t('monitorDuration') }}</label>\n    <RkRadio\n      class=\"mb-5\"\n      :current=\"newTaskFields.monitorDuration\"\n      :data=\"taskFieldSource.monitorDuration\"\n      @onChoose=\"(item) => changeOption(item, updateTaskOpt.MonitorDuration)\"\n    />\n    <label>{{ this.$t('minThreshold') }} (ms)</label>\n    <input\n      type=\"text\"\n      class=\"rk-profile-input\"\n      :value=\"newTaskFields.minThreshold\"\n      @change=\"changeOption($event, updateTaskOpt.MinThreshold)\"\n    />\n    <label>{{ this.$t('dumpPeriod') }}</label>\n    <RkRadio\n      class=\"mb-5\"\n      :current=\"newTaskFields.dumpPeriod\"\n      :data=\"taskFieldSource.dumpPeriod\"\n      @onChoose=\"(item) => changeOption(item, updateTaskOpt.DumpPeriod)\"\n    />\n    <label>{{ this.$t('maxSamplingCount') }}</label>\n    <RkSelect\n      class=\"mb-5\"\n      :current=\"newTaskFields.maxSamplingCount\"\n      :data=\"taskFieldSource.maxSamplingCount\"\n      @onChoose=\"(item) => changeOption(item, updateTaskOpt.MaxSamplingCount)\"\n    />\n    <div v-if=\"this.message\" class=\"message-tip\">{{ this.message }}</div>\n    <div @click=\"createTask\">\n      <a class=\"rk-create-task-btn bg-blue r\">\n        <span class=\"mr-5 vm\">{{ this.$t('createTask') }}</span>\n      </a>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import { Duration, Option } from '@/types/global';\n  import { Component, Prop, Vue, Watch } from 'vue-property-decorator';\n  import { Action, Getter, Mutation, State } from 'vuex-class';\n\n  @Component\n  export default class ProfileTask extends Vue {\n    private time!: Date;\n    private message: string = '';\n    private locale: string = 'en';\n    @Prop() private newTaskFields: any;\n    @Prop() private taskFieldSource: any;\n    @Getter('profileStore/updateTaskOpt') private updateTaskOpt: any;\n    @Action('profileStore/CREATE_PROFILE_TASK') private CREATE_PROFILE_TASK: any;\n    @Mutation('profileStore/SET_TASK_OPTIONS') private SET_TASK_OPTIONS: any;\n    @State('rocketbot') private rocketbotGlobal: any;\n\n    private changeOption(item: any, type: string) {\n      if ([this.updateTaskOpt.MinThreshold, this.updateTaskOpt.EndpointName].includes(type)) {\n        item = {\n          label: type,\n          key: item.target.value,\n        };\n      }\n      this.SET_TASK_OPTIONS({ item, type });\n    }\n\n    private createTask() {\n      this.CREATE_PROFILE_TASK({ startTime: this.time.getTime() }).then((res: any) => {\n        if (res.errorReason) {\n          this.message = res.errorReason;\n          return;\n        } else {\n          this.$emit('closeSidebox');\n        }\n      });\n    }\n\n    @Watch('rocketbotGlobal.durationRow')\n    private durationRowWatch(value: Duration) {\n      this.time = value.start;\n    }\n\n    private created() {\n      this.locale = this.$i18n.locale;\n      this.time = this.rocketbotGlobal.durationRow.start;\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .rk-profile-task {\n    margin: 20px;\n  }\n  label {\n    display: inline-block;\n    margin: 10px 0;\n    font-weight: bold;\n    font-size: 14px;\n  }\n  .rk-profile-input {\n    border-style: unset;\n    outline: 0;\n    padding: 2px 5px;\n    border-radius: 3px;\n    border: 1px solid #ccc;\n    height: 30px;\n    line-height: 40px;\n    display: block;\n    width: 100%;\n  }\n  .rk-create-task-btn {\n    color: #fff;\n    padding: 10px 9px;\n    border-radius: 4px;\n    margin-top: 40px;\n    width: 100%;\n    text-align: center;\n  }\n  .message-tip {\n    font-size: 14px;\n    color: red;\n    margin-top: 10px;\n  }\n  .monitor-time-radio {\n    display: inline;\n  }\n</style>\n"]}]}