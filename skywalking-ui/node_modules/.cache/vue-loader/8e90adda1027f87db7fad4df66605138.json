{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/containers/topology/topology.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/containers/topology/topology.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component } from 'vue-property-decorator';\nimport { State, Action, Getter, Mutation } from 'vuex-class';\nimport { AxiosResponse } from 'axios';\nimport { State as topoState } from '@/store/modules/topology';\nimport { TopologyType } from '../../constant';\nimport WindowEndpoint from '@/views/containers/topology/endpoint/index.vue';\nimport WindowInstance from '@/views/containers/topology/instance/index.vue';\nimport WindowTrace from '@/views/containers/topology/trace/index.vue';\nimport WindowAlarm from '@/views/containers/topology/alarm/index.vue';\nimport Topo from '../../components/topology/chart/topo.vue';\nimport TopoAside from '../../components/topology/topo-aside.vue';\nimport TopoGroup from '../../components/topology/topo-group/index.vue';\n\n@Component({\n  components: {\n    Topo,\n    TopoAside,\n    TopoGroup,\n    WindowEndpoint,\n    WindowInstance,\n    WindowTrace,\n    WindowAlarm,\n  },\n})\nexport default class Topology extends Vue {\n  @State('rocketTopo') private stateTopo!: topoState;\n  @Action('rocketTopo/CLEAR_TOPO') private CLEAR_TOPO: any;\n  @Action('rocketTopo/CLEAR_TOPO_INFO') private CLEAR_TOPO_INFO: any;\n  @Action('GET_ALL_TEMPLATES') private GET_ALL_TEMPLATES: any;\n  @Mutation('rocketTopo/SET_TOPO_ENDPOINT') private SET_TOPO_ENDPOINT: any;\n  @Mutation('rocketTopo/SET_TOPO_INSTANCE') private SET_TOPO_INSTANCE: any;\n  @Mutation('SET_CURRENT_SERVICE') private SET_CURRENT_SERVICE: any;\n  @Getter('durationTime') private durationTime: any;\n\n  private current: any = {};\n  private dialog: string = '';\n  private updateObjects: string = '';\n\n  private created() {\n    if (window.localStorage.getItem('topologyInstances') || window.localStorage.getItem('topologyEndpoints')) {\n      const instanceComps: string = `${window.localStorage.getItem('topologyInstances')}`;\n      const topoInstance = instanceComps ? JSON.parse(instanceComps) : [];\n      const endpointComps: string = `${window.localStorage.getItem('topologyEndpoints')}`;\n      const topoEndpoint = endpointComps ? JSON.parse(endpointComps) : [];\n      this.SET_TOPO_INSTANCE(topoInstance);\n      this.SET_TOPO_ENDPOINT(topoEndpoint);\n    } else {\n      this.queryTemplates();\n    }\n  }\n  private queryTemplates() {\n    this.GET_ALL_TEMPLATES().then(\n      (\n        allTemplates: Array<{\n          name: string;\n          type: string;\n          configuration: string;\n          activated: boolean;\n          disabled: boolean;\n        }>,\n      ) => {\n        const template =\n          allTemplates.filter((item: any) => item.type === TopologyType.TOPOLOGY_INSTANCE && item.activated)[0] || {};\n        const instanceComps = JSON.parse(template.configuration) || [];\n        this.SET_TOPO_INSTANCE(instanceComps);\n        const endpointTemplate =\n          allTemplates.filter((item: any) => item.type === TopologyType.TOPOLOGY_ENDPOINT && item.activated)[0] || {};\n        const endpointComps = JSON.parse(endpointTemplate.configuration) || [];\n        this.SET_TOPO_ENDPOINT(endpointComps);\n      },\n    );\n  }\n  private setCurrent(d: any): void {\n    this.current = d;\n    this.SET_CURRENT_SERVICE(d);\n  }\n  private beforeDestroy() {\n    this.CLEAR_TOPO_INFO();\n    this.CLEAR_TOPO();\n  }\n  private changeInstanceComps(data: { type: string; json: any }) {\n    this.updateObjects = data.type;\n    if (!data.json) {\n      return;\n    }\n    this.SET_TOPO_INSTANCE(data.json);\n  }\n  private changeEndpointComps(data: { type: string; json: any }) {\n    this.updateObjects = data.type;\n    if (!data.json) {\n      return;\n    }\n    this.SET_TOPO_ENDPOINT(data.json);\n  }\n}\n",{"version":3,"sources":["topology.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"topology.vue","sourceRoot":"src/views/containers/topology","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n\n<template>\n  <div class=\"rk-topo\">\n    <Topo\n      :current=\"current\"\n      @setDialog=\"(type) => (dialog = type)\"\n      @setCurrent=\"setCurrent\"\n      :nodes=\"stateTopo.nodes\"\n      :links=\"stateTopo.calls\"\n    />\n    <TopoAside />\n    <TopoGroup />\n    <rk-sidebox :show=\"dialog.length\" @update:show=\"dialog = ''\" :fixed=\"true\" width=\"80%\">\n      <window-endpoint\n        v-if=\"dialog === 'endpoint'\"\n        :current=\"this.current\"\n        :endpointComps=\"stateTopo.topoEndpoints\"\n        @changeEndpointComps=\"changeEndpointComps\"\n        :updateObjects=\"updateObjects\"\n      />\n      <window-instance\n        v-if=\"dialog === 'instance'\"\n        :current=\"this.current\"\n        :instanceComps=\"stateTopo.topoInstances\"\n        @changeInstanceComps=\"changeInstanceComps\"\n        :updateObjects=\"updateObjects\"\n      />\n      <window-trace v-if=\"dialog === 'trace'\" :current=\"this.current\" />\n      <window-alarm v-if=\"dialog === 'alarm'\" :current=\"this.current\" />\n    </rk-sidebox>\n  </div>\n</template>\n<script lang=\"ts\">\n  import { Vue, Component } from 'vue-property-decorator';\n  import { State, Action, Getter, Mutation } from 'vuex-class';\n  import { AxiosResponse } from 'axios';\n  import { State as topoState } from '@/store/modules/topology';\n  import { TopologyType } from '../../constant';\n  import WindowEndpoint from '@/views/containers/topology/endpoint/index.vue';\n  import WindowInstance from '@/views/containers/topology/instance/index.vue';\n  import WindowTrace from '@/views/containers/topology/trace/index.vue';\n  import WindowAlarm from '@/views/containers/topology/alarm/index.vue';\n  import Topo from '../../components/topology/chart/topo.vue';\n  import TopoAside from '../../components/topology/topo-aside.vue';\n  import TopoGroup from '../../components/topology/topo-group/index.vue';\n\n  @Component({\n    components: {\n      Topo,\n      TopoAside,\n      TopoGroup,\n      WindowEndpoint,\n      WindowInstance,\n      WindowTrace,\n      WindowAlarm,\n    },\n  })\n  export default class Topology extends Vue {\n    @State('rocketTopo') private stateTopo!: topoState;\n    @Action('rocketTopo/CLEAR_TOPO') private CLEAR_TOPO: any;\n    @Action('rocketTopo/CLEAR_TOPO_INFO') private CLEAR_TOPO_INFO: any;\n    @Action('GET_ALL_TEMPLATES') private GET_ALL_TEMPLATES: any;\n    @Mutation('rocketTopo/SET_TOPO_ENDPOINT') private SET_TOPO_ENDPOINT: any;\n    @Mutation('rocketTopo/SET_TOPO_INSTANCE') private SET_TOPO_INSTANCE: any;\n    @Mutation('SET_CURRENT_SERVICE') private SET_CURRENT_SERVICE: any;\n    @Getter('durationTime') private durationTime: any;\n\n    private current: any = {};\n    private dialog: string = '';\n    private updateObjects: string = '';\n\n    private created() {\n      if (window.localStorage.getItem('topologyInstances') || window.localStorage.getItem('topologyEndpoints')) {\n        const instanceComps: string = `${window.localStorage.getItem('topologyInstances')}`;\n        const topoInstance = instanceComps ? JSON.parse(instanceComps) : [];\n        const endpointComps: string = `${window.localStorage.getItem('topologyEndpoints')}`;\n        const topoEndpoint = endpointComps ? JSON.parse(endpointComps) : [];\n        this.SET_TOPO_INSTANCE(topoInstance);\n        this.SET_TOPO_ENDPOINT(topoEndpoint);\n      } else {\n        this.queryTemplates();\n      }\n    }\n    private queryTemplates() {\n      this.GET_ALL_TEMPLATES().then(\n        (\n          allTemplates: Array<{\n            name: string;\n            type: string;\n            configuration: string;\n            activated: boolean;\n            disabled: boolean;\n          }>,\n        ) => {\n          const template =\n            allTemplates.filter((item: any) => item.type === TopologyType.TOPOLOGY_INSTANCE && item.activated)[0] || {};\n          const instanceComps = JSON.parse(template.configuration) || [];\n          this.SET_TOPO_INSTANCE(instanceComps);\n          const endpointTemplate =\n            allTemplates.filter((item: any) => item.type === TopologyType.TOPOLOGY_ENDPOINT && item.activated)[0] || {};\n          const endpointComps = JSON.parse(endpointTemplate.configuration) || [];\n          this.SET_TOPO_ENDPOINT(endpointComps);\n        },\n      );\n    }\n    private setCurrent(d: any): void {\n      this.current = d;\n      this.SET_CURRENT_SERVICE(d);\n    }\n    private beforeDestroy() {\n      this.CLEAR_TOPO_INFO();\n      this.CLEAR_TOPO();\n    }\n    private changeInstanceComps(data: { type: string; json: any }) {\n      this.updateObjects = data.type;\n      if (!data.json) {\n        return;\n      }\n      this.SET_TOPO_INSTANCE(data.json);\n    }\n    private changeEndpointComps(data: { type: string; json: any }) {\n      this.updateObjects = data.type;\n      if (!data.json) {\n        return;\n      }\n      this.SET_TOPO_ENDPOINT(data.json);\n    }\n  }\n</script>\n<style lang=\"scss\">\n  .rk-topo {\n    position: relative;\n    height: 100%;\n    min-height: 0;\n    display: flex;\n    background: #333840;\n  }\n</style>\n"]}]}