{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/containers/topology/trace/trace-search.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/containers/topology/trace/trace-search.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.rk-trace-search {\n  flex-shrink: 0;\n  background-color: #333840;\n  color: #eee;\n  width: 100%;\n  padding: 3px 15px 8px;\n}\n\n.rk-trace-search-input {\n  border-style: unset;\n  outline: 0;\n  padding: 2px 5px;\n  border-radius: 3px;\n}\n\n.rk-trace-search-range,\n.rk-auto-select {\n  border-radius: 3px;\n  background-color: #fff;\n  padding: 1px;\n  border-radius: 3px;\n\n  input {\n    width: 38px;\n    border-style: unset;\n    outline: 0;\n  }\n}\n\n.rk-trace-search-btn {\n  padding: 3px 9px;\n  background-color: #484b55;\n  border-radius: 4px;\n  margin-top: 12px;\n\n  &.bg-blue {\n    background-color: #448dfe;\n  }\n}\n\n.rk-trace-clear-btn {\n  padding: 3px 9px;\n  background-color: #484b55;\n  border-radius: 4px;\n  margin-top: 12px;\n\n  &.bg-warning {\n    background-color: #fbb03b;\n  }\n}\n\n.rk-trace-search-more {\n  background-color: #484b55;\n  padding: 4px 10px;\n  border-radius: 3px;\n  margin-top: 8px;\n  position: relative;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.1);\n\n  &:after {\n    bottom: 100%;\n    right: 30px;\n    border: solid transparent;\n    content: ' ';\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n    border-color: rgba(0, 0, 0, 0);\n    border-bottom-color: #484b55;\n    border-width: 8px;\n    margin-right: 0px;\n  }\n}\n",{"version":3,"sources":["trace-search.vue"],"names":[],"mappingsfile":"trace-search.vue","sourceRoot":"src/views/containers/topology/trace","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n\n<template>\n  <div class=\"rk-trace-search\">\n    <div>\n      <a class=\"rk-trace-clear-btn r\" @click=\"status = !status\">\n        <span class=\"mr-5 vm\">{{ this.$t('more') }}</span>\n        <svg class=\"icon trans vm\" :style=\"`transform: rotate(${status ? 180 : 0}deg);`\">\n          <use xlink:href=\"#arrow-down\"></use>\n        </svg>\n      </a>\n      <a class=\"rk-trace-search-btn bg-blue r mr-10\" @click=\"getTraceList\">\n        <svg class=\"icon mr-5 vm\">\n          <use xlink:href=\"#search\"></use>\n        </svg>\n        <span class=\"vm\">{{ this.$t('search') }}</span>\n      </a>\n      <a class=\"rk-trace-clear-btn r mr-10\" @click=\"clearSearch\">\n        <svg class=\"icon mr-5 vm\">\n          <use xlink:href=\"#clear\"></use>\n        </svg>\n        <span class=\"vm\">{{ this.$t('clear') }}</span>\n      </a>\n      <div class=\"flex-h\">\n        <TraceSelect :hasSearch=\"true\" :title=\"this.$t('instance')\" v-model=\"instance\" :data=\"rocketTrace.instances\" />\n        <TraceSelect\n          :title=\"this.$t('status')\"\n          :value=\"traceState\"\n          @input=\"chooseStatus\"\n          :data=\"[\n            { label: 'All', key: 'ALL' },\n            { label: 'Success', key: 'SUCCESS' },\n            { label: 'Error', key: 'ERROR' },\n          ]\"\n        />\n        <div class=\"mr-10\" style=\"padding: 3px 15px 0\">\n          <div class=\"sm grey\">{{ this.$t('endpointName') }}</div>\n          <input type=\"text\" v-model=\"endpointName\" class=\"rk-trace-search-input\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"rk-trace-search-more flex-h\" v-show=\"status\">\n      <div class=\"mr-15\">\n        <span class=\"sm b grey mr-10\">{{ this.$t('traceID') }}:</span>\n        <input type=\"text\" v-model=\"traceId\" class=\"rk-trace-search-input dib\" />\n      </div>\n      <div class=\"mr-15\">\n        <span class=\"sm b grey mr-10\">{{ this.$t('duration') }}:</span>\n        <div class=\"rk-trace-search-range dib\">\n          <input class=\"vm tc\" v-model=\"minTraceDuration\" />\n          <span class=\"grey vm\">-</span>\n          <input class=\"vm tc\" v-model=\"maxTraceDuration\" />\n        </div>\n      </div>\n      <div>\n        <span class=\"sm b grey mr-5\">{{ this.$t('timeRange') }}:</span>\n        <RkDate class=\"sm\" v-model=\"time\" position=\"bottom\" format=\"YYYY-MM-DD HH:mm:ss\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import { Duration, Option } from '@/types/global';\n  import { Component, Vue, Watch, Prop } from 'vue-property-decorator';\n  import { Action, Getter, Mutation, State } from 'vuex-class';\n  import TraceSelect from './trace-select.vue';\n\n  @Component({ components: { TraceSelect } })\n  export default class TraceSearch extends Vue {\n    @State('rocketbot') private rocketbotGlobal: any;\n    @State('rocketTrace') private rocketTrace: any;\n    @Getter('durationTime') private durationTime: any;\n    @Getter('duration') private duration: any;\n    @Action('RESET_DURATION') private RESET_DURATION: any;\n    @Action('rocketTrace/GET_SERVICES') private GET_SERVICES: any;\n    @Action('rocketTrace/GET_INSTANCES') private GET_INSTANCES: any;\n    @Action('rocketTrace/GET_TRACELIST') private GET_TRACELIST: any;\n    @Action('rocketTrace/SET_TRACE_FORM') private SET_TRACE_FORM: any;\n    @Mutation('rocketTrace/SET_TRACE_FORM_ITEM') private SET_TRACE_FORM_ITEM: any;\n    @Prop() private service!: Option;\n    private time!: Date[];\n    private status: boolean = true;\n    private maxTraceDuration: string = localStorage.getItem('maxTraceDuration') || '';\n    private minTraceDuration: string = localStorage.getItem('minTraceDuration') || '';\n    private instance: Option = { label: 'All', key: '' };\n    private endpointName: string = localStorage.getItem('endpointName') || '';\n    private traceId: string = localStorage.getItem('traceId') || '';\n    private traceState: Option = { label: 'All', key: 'ALL' };\n\n    private dateFormat(date: Date, step: string) {\n      const year = date.getFullYear();\n      const monthTemp = date.getMonth() + 1;\n      let month: string = `${monthTemp}`;\n      if (monthTemp < 10) {\n        month = `0${monthTemp}`;\n      }\n      const dayTemp = date.getDate();\n      let day: string = `${dayTemp}`;\n      if (dayTemp < 10) {\n        day = `0${dayTemp}`;\n      }\n      if (step === 'DAY' || step === 'MONTH') {\n        return `${year}-${month}-${day}`;\n      }\n      const hourTemp = date.getHours();\n      let hour: string = `${hourTemp}`;\n      if (hourTemp < 10) {\n        hour = `0${hourTemp}`;\n      }\n      if (step === 'HOUR') {\n        return `${year}-${month}-${day} ${hour}`;\n      }\n      const minuteTemp = date.getMinutes();\n      let minute: string = `${minuteTemp}`;\n      if (minuteTemp < 10) {\n        minute = `0${minuteTemp}`;\n      }\n      if (step === 'MINUTE') {\n        return `${year}-${month}-${day} ${hour}${minute}`;\n      }\n    }\n\n    private globalTimeFormat(time: Date[]) {\n      let step = 'MINUTE';\n      const unix = Math.round(time[1].getTime()) - Math.round(time[0].getTime());\n      if (unix <= 60 * 60 * 1000) {\n        step = 'MINUTE';\n      } else if (unix <= 24 * 60 * 60 * 1000) {\n        step = 'HOUR';\n      } else {\n        step = 'DAY';\n      }\n      return {\n        start: this.dateFormat(time[0], step),\n        end: this.dateFormat(time[1], step),\n        step,\n      };\n    }\n\n    private chooseService(i: any) {\n      if (this.service.key === i.key) {\n        return;\n      }\n      this.instance = { label: 'All', key: '' };\n      this.service = i;\n      if (i.key === '') {\n        return;\n      }\n      this.GET_INSTANCES({ duration: this.durationTime, serviceId: i.key });\n    }\n\n    private chooseStatus(i: any) {\n      this.traceState = i;\n    }\n\n    private getTraceList() {\n      const temp: any = {\n        queryDuration: this.globalTimeFormat([\n          new Date(\n            this.time[0].getTime() +\n              (parseInt(this.rocketbotGlobal.utc, 10) + new Date().getTimezoneOffset() / 60) * 3600000,\n          ),\n          new Date(\n            this.time[1].getTime() +\n              (parseInt(this.rocketbotGlobal.utc, 10) + new Date().getTimezoneOffset() / 60) * 3600000,\n          ),\n        ]),\n        traceState: this.traceState.key,\n        paging: { pageNum: 1, pageSize: 15, needTotal: true },\n        queryOrder: this.rocketTrace.traceForm.queryOrder,\n      };\n      temp.serviceId = this.service.key;\n      if (this.instance.key) {\n        temp.serviceInstanceId = this.instance.key;\n      }\n      if (this.maxTraceDuration) {\n        temp.maxTraceDuration = this.maxTraceDuration;\n        localStorage.setItem('maxTraceDuration', this.maxTraceDuration);\n      }\n      if (this.minTraceDuration) {\n        temp.minTraceDuration = this.minTraceDuration;\n        localStorage.setItem('minTraceDuration', this.minTraceDuration);\n      }\n      if (this.endpointName) {\n        temp.endpointName = this.endpointName;\n        localStorage.setItem('endpointName', this.endpointName);\n      }\n      if (this.traceId) {\n        temp.traceId = this.traceId;\n        localStorage.setItem('traceId', this.traceId);\n      }\n      this.SET_TRACE_FORM(temp);\n\n      this.$eventBus.$emit('SET_LOADING_TRUE', () => {\n        this.GET_TRACELIST().then(() => {\n          this.$eventBus.$emit('SET_LOADING_FALSE');\n        });\n      });\n    }\n\n    private clearSearch() {\n      this.RESET_DURATION();\n      this.status = true;\n      this.maxTraceDuration = '';\n      localStorage.removeItem('maxTraceDuration');\n      this.minTraceDuration = '';\n      localStorage.removeItem('minTraceDuration');\n      this.instance = { label: 'All', key: '' };\n      this.endpointName = '';\n      localStorage.removeItem('endpointName');\n      this.traceId = '';\n      localStorage.removeItem('traceId');\n      this.traceState = { label: 'All', key: 'ALL' };\n      this.SET_TRACE_FORM_ITEM({ type: 'queryOrder', data: '' });\n      this.getTraceList();\n    }\n\n    @Watch('rocketbotGlobal.durationRow')\n    private durationRowWatch(value: Duration) {\n      this.time = [value.start, value.end];\n    }\n\n    private created() {\n      this.endpointName = this.$route.query.endpointname\n        ? this.$route.query.endpointname.toString()\n        : this.endpointName;\n      this.traceId = this.$route.query.traceid ? this.$route.query.traceid.toString() : this.traceId;\n      this.time = [this.rocketbotGlobal.durationRow.start, this.rocketbotGlobal.durationRow.end];\n    }\n    private mounted() {\n      this.getTraceList();\n      this.GET_INSTANCES({\n        duration: this.durationTime,\n        serviceId: this.service.key,\n      });\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .rk-trace-search {\n    flex-shrink: 0;\n    background-color: #333840;\n    color: #eee;\n    width: 100%;\n    padding: 3px 15px 8px;\n  }\n\n  .rk-trace-search-input {\n    border-style: unset;\n    outline: 0;\n    padding: 2px 5px;\n    border-radius: 3px;\n  }\n\n  .rk-trace-search-range,\n  .rk-auto-select {\n    border-radius: 3px;\n    background-color: #fff;\n    padding: 1px;\n    border-radius: 3px;\n\n    input {\n      width: 38px;\n      border-style: unset;\n      outline: 0;\n    }\n  }\n\n  .rk-trace-search-btn {\n    padding: 3px 9px;\n    background-color: #484b55;\n    border-radius: 4px;\n    margin-top: 12px;\n\n    &.bg-blue {\n      background-color: #448dfe;\n    }\n  }\n\n  .rk-trace-clear-btn {\n    padding: 3px 9px;\n    background-color: #484b55;\n    border-radius: 4px;\n    margin-top: 12px;\n\n    &.bg-warning {\n      background-color: #fbb03b;\n    }\n  }\n\n  .rk-trace-search-more {\n    background-color: #484b55;\n    padding: 4px 10px;\n    border-radius: 3px;\n    margin-top: 8px;\n    position: relative;\n    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.1);\n\n    &:after {\n      bottom: 100%;\n      right: 30px;\n      border: solid transparent;\n      content: ' ';\n      height: 0;\n      width: 0;\n      position: absolute;\n      pointer-events: none;\n      border-color: rgba(0, 0, 0, 0);\n      border-bottom-color: #484b55;\n      border-width: 8px;\n      margin-right: 0px;\n    }\n  }\n</style>\n"]}]}