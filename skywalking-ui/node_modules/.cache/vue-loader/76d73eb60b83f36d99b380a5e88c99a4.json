{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/topo-aside.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/topo-aside.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { initState } from '@/store/modules/dashboard/dashboard-data-layout';\nimport topo, { State as topoState } from '@/store/modules/topology';\nimport { Component, Vue, Watch } from 'vue-property-decorator';\nimport { Action, Getter, Mutation, State } from 'vuex-class';\nimport Radial from './radial.vue';\nimport TopoChart from './topo-chart.vue';\nimport TopoService from './topo-services.vue';\nimport TopoDetectPoint from './topo-detect-point.vue';\n\n@Component({\n  components: {\n    TopoChart,\n    TopoService,\n    Radial,\n    TopoDetectPoint,\n  },\n})\nexport default class TopoAside extends Vue {\n  @State('rocketTopo') private stateTopo!: topoState;\n  @Getter('intervalTime') private intervalTime: any;\n  @Getter('durationTime') private durationTime: any;\n  @Action('rocketTopo/CLEAR_TOPO') private CLEAR_TOPO: any;\n  @Action('rocketTopo/CLEAR_TOPO_INFO') private CLEAR_TOPO_INFO: any;\n  @Mutation('SET_COMPS_TREE') private SET_COMPS_TREE: any;\n  @Mutation('SET_EVENTS') private SET_EVENTS: any;\n  @Mutation('rocketTopo/SET_MODE_STATUS') private SET_MODE_STATUS: any;\n  private dialogTopoVisible = false;\n  private drawerMainBodyHeight = '100%';\n  private initState = initState;\n  private radioStatus: boolean = false;\n  private show: boolean = true;\n\n  private get showServerInfo() {\n    return this.stateTopo.currentNode.name && this.stateTopo.currentNode.isReal;\n  }\n\n  private resize() {\n    this.drawerMainBodyHeight = `${document.body.clientHeight - 50}px`;\n  }\n\n  private beforeMount() {\n    this.SET_EVENTS([this.handleRefresh]);\n  }\n\n  private created() {\n    this.SET_COMPS_TREE(this.initState.tree);\n  }\n\n  private handleRefresh() {\n    this.$store.dispatch(\n      this.stateTopo.mode ? 'rocketTopo/GET_TOPO_SERVICE_INFO' : 'rocketTopo/GET_TOPO_CLIENT_INFO',\n      { ...this.stateTopo.currentLink, duration: this.durationTime },\n    );\n  }\n\n  private mounted() {\n    this.resize();\n    window.addEventListener('resize', this.resize);\n  }\n\n  private beforeDestroy() {\n    window.removeEventListener('resize', this.resize);\n    this.CLEAR_TOPO_INFO();\n    this.CLEAR_TOPO();\n    this.SET_EVENTS([]);\n  }\n\n  get types() {\n    const result: any = {};\n    this.stateTopo.nodes.forEach((i: any) => {\n      if (result[i.type]) {\n        result[i.type] += 1;\n      } else {\n        result[i.type] = 1;\n      }\n    });\n    return result;\n  }\n\n  private showRadial() {\n    this.radioStatus = !this.radioStatus;\n  }\n}\n",{"version":3,"sources":["topo-aside.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"topo-aside.vue","sourceRoot":"src/views/components/topology","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n\n<template>\n  <aside class=\"link-topo-aside\">\n    <Radial v-if=\"radioStatus\" :datas=\"{ nodes: stateTopo.nodes, calls: stateTopo.calls }\" />\n    <svg class=\"link-topo-aside-btn icon cp lg\" @click=\"showRadial()\" :style=\"`position:absolute;left:290px;`\">\n      <use xlink:href=\"#issues\" />\n    </svg>\n    <svg\n      v-if=\"showServerInfo\"\n      class=\"link-topo-aside-btn icon cp lg\"\n      @click=\"show = !show\"\n      :style=\"`position:absolute;left:290px;transform: rotate(${show ? 0 : 180}deg);top:45px;`\"\n    >\n      <use xlink:href=\"#chevron-left\" />\n    </svg>\n    <TopoService />\n    <div v-if=\"show\">\n      <div class=\"link-topo-aside-box\" style=\"top:45px\" v-if=\"!stateTopo.selectedServiceCall && showServerInfo\">\n        <div class=\"mb-20\">\n          <span class=\"b dib mr-20\">{{ $t('serviceDetail') }}</span>\n        </div>\n        <div class=\"mb-10\">\n          <span class=\"label grey\">{{ $t('name') }}</span>\n          <span class=\"content\">{{ stateTopo.currentNode.name }}</span>\n        </div>\n        <div class=\"mb-10\">\n          <span class=\"label grey\">{{ $t('type') }}</span>\n          <span class=\"content\">{{ stateTopo.currentNode.type }}</span>\n        </div>\n        <div>\n          <TopoChart\n            v-if=\"stateTopo.serviceApdexScore.length\"\n            :data=\"stateTopo.serviceApdexScore\"\n            :intervalTime=\"intervalTime\"\n            title=\"Service ApdexScore\"\n            unit=\"\"\n          />\n          <TopoChart\n            v-if=\"stateTopo.serviceSLA.length\"\n            :data=\"stateTopo.serviceSLA\"\n            :intervalTime=\"intervalTime\"\n            title=\"Service SLA\"\n            unit=\"%\"\n          />\n        </div>\n      </div>\n      <TopoDetectPoint />\n    </div>\n  </aside>\n</template>\n<script lang=\"ts\">\n  import { initState } from '@/store/modules/dashboard/dashboard-data-layout';\n  import topo, { State as topoState } from '@/store/modules/topology';\n  import { Component, Vue, Watch } from 'vue-property-decorator';\n  import { Action, Getter, Mutation, State } from 'vuex-class';\n  import Radial from './radial.vue';\n  import TopoChart from './topo-chart.vue';\n  import TopoService from './topo-services.vue';\n  import TopoDetectPoint from './topo-detect-point.vue';\n\n  @Component({\n    components: {\n      TopoChart,\n      TopoService,\n      Radial,\n      TopoDetectPoint,\n    },\n  })\n  export default class TopoAside extends Vue {\n    @State('rocketTopo') private stateTopo!: topoState;\n    @Getter('intervalTime') private intervalTime: any;\n    @Getter('durationTime') private durationTime: any;\n    @Action('rocketTopo/CLEAR_TOPO') private CLEAR_TOPO: any;\n    @Action('rocketTopo/CLEAR_TOPO_INFO') private CLEAR_TOPO_INFO: any;\n    @Mutation('SET_COMPS_TREE') private SET_COMPS_TREE: any;\n    @Mutation('SET_EVENTS') private SET_EVENTS: any;\n    @Mutation('rocketTopo/SET_MODE_STATUS') private SET_MODE_STATUS: any;\n    private dialogTopoVisible = false;\n    private drawerMainBodyHeight = '100%';\n    private initState = initState;\n    private radioStatus: boolean = false;\n    private show: boolean = true;\n\n    private get showServerInfo() {\n      return this.stateTopo.currentNode.name && this.stateTopo.currentNode.isReal;\n    }\n\n    private resize() {\n      this.drawerMainBodyHeight = `${document.body.clientHeight - 50}px`;\n    }\n\n    private beforeMount() {\n      this.SET_EVENTS([this.handleRefresh]);\n    }\n\n    private created() {\n      this.SET_COMPS_TREE(this.initState.tree);\n    }\n\n    private handleRefresh() {\n      this.$store.dispatch(\n        this.stateTopo.mode ? 'rocketTopo/GET_TOPO_SERVICE_INFO' : 'rocketTopo/GET_TOPO_CLIENT_INFO',\n        { ...this.stateTopo.currentLink, duration: this.durationTime },\n      );\n    }\n\n    private mounted() {\n      this.resize();\n      window.addEventListener('resize', this.resize);\n    }\n\n    private beforeDestroy() {\n      window.removeEventListener('resize', this.resize);\n      this.CLEAR_TOPO_INFO();\n      this.CLEAR_TOPO();\n      this.SET_EVENTS([]);\n    }\n\n    get types() {\n      const result: any = {};\n      this.stateTopo.nodes.forEach((i: any) => {\n        if (result[i.type]) {\n          result[i.type] += 1;\n        } else {\n          result[i.type] = 1;\n        }\n      });\n      return result;\n    }\n\n    private showRadial() {\n      this.radioStatus = !this.radioStatus;\n    }\n  }\n</script>\n<style lang=\"scss\">\n  .link-topo-aside {\n    width: 280px;\n    position: absolute;\n    z-index: 2;\n    left: 20px;\n    top: 7px;\n\n    .to-apm {\n      padding-top: 10px;\n      border-top: 1px solid #d8d8d866;\n    }\n  }\n\n  .link-topo-aside-btn {\n    display: block;\n    background: #252a2f9a;\n    color: #ddd;\n    border-radius: 4px 4px 4px 4px;\n    text-align: center;\n    padding: 10px;\n    z-index: 101;\n  }\n\n  .link-topo-aside-box {\n    border-radius: 4px;\n    position: absolute;\n    width: 280px;\n    z-index: 101;\n    color: #ddd;\n    background-color: #2b3037;\n    padding: 15px 20px 10px;\n\n    .label {\n      display: inline-block;\n      width: 40%;\n    }\n\n    .content {\n      vertical-align: top;\n      display: inline-block;\n      width: 60%;\n    }\n\n    .circle {\n      width: 8px;\n      height: 8px;\n      border-radius: 4px;\n      background-color: #ee5b5b;\n      margin-top: 6px;\n    }\n  }\n\n  .link-topo-aside-box {\n    p {\n      margin-block-start: auto !important;\n      margin-block-end: auto !important;\n    }\n  }\n\n  .link-topo-aside-box-min {\n    width: 280px;\n    animation: 0.5s linkTopoAsideBoxMin 1 running;\n  }\n\n  .link-topo-aside-box-max {\n    width: 60%;\n    animation: 0.5s linkTopoAsideBoxMax 1 running;\n  }\n\n  @keyframes linkTopoAsideBoxMax {\n    from {\n      width: 280px;\n    }\n    to {\n      width: 60%;\n    }\n  }\n\n  @keyframes linkTopoAsideBoxMin {\n    from {\n      width: 60%;\n    }\n    to {\n      width: 280px;\n    }\n  }\n</style>\n"]}]}