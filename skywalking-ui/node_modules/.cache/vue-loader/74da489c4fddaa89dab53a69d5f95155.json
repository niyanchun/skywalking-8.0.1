{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/topo-chart.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/topo-chart.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport { Component, Prop } from 'vue-property-decorator';\n\n@Component\nexport default class TopoChart extends Vue {\n  @Prop() private title!: string;\n  @Prop() private data!: any;\n  @Prop() private unit!: string;\n  @Prop() private intervalTime!: number[];\n  @Prop() private precent!: boolean;\n  get content() {\n    if (!this.data.length) {\n      return 0;\n    }\n    const noZero = this.data.filter((i: any) => i);\n    const sum = noZero.length\n      ? noZero.reduce((preValue: number, curValue: number, index: number, array: number[]) => preValue + curValue) /\n        noZero.length\n      : 0;\n    return this.precent ? sum / 100 : sum;\n  }\n  get responseConfig() {\n    return {\n      color: ['#3f96e3ee', '#6be6c1'],\n      tooltip: {\n        trigger: 'axis',\n        backgroundColor: '#333844',\n        textStyle: {\n          fontSize: 13,\n        },\n      },\n      grid: {\n        top: 4,\n        left: 0,\n        right: 0,\n        bottom: 7,\n        containLabel: true,\n      },\n      xAxis: {\n        type: 'category',\n        axisTick: {\n          lineStyle: { color: '#c1c5ca41' },\n          alignWithLabel: true,\n        },\n        splitLine: { show: false },\n        axisLine: { lineStyle: { color: 'rgba(0,0,0,0)' } },\n        axisLabel: { color: '#9da5b2', fontSize: '11' },\n      },\n      yAxis: {\n        type: 'value',\n        axisLine: { show: false },\n        axisTick: { show: false },\n        splitLine: { lineStyle: { color: '#c1c5ca41', type: 'dashed' } },\n        axisLabel: { color: '#9da5b2', fontSize: '11' },\n      },\n      series: [\n        {\n          data: this.data.map((i: any, index: number) => [this.intervalTime[index], i]),\n          type: this.precent ? 'bar' : 'line',\n          symbol: 'none',\n          barMaxWidth: 5,\n          lineStyle: {\n            width: 1,\n          },\n        },\n      ],\n    };\n  }\n}\n",{"version":3,"sources":["topo-chart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"topo-chart.vue","sourceRoot":"src/views/components/topology","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n<template>\n  <div>\n    <div class=\"grey sm mb-5\">{{ title }}</div>\n    <h5 class=\"mt-0 mb-0\">{{ content.toFixed(2) }} {{ unit }}</h5>\n    <RkEcharts height=\"100px\" :option=\"responseConfig\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import Vue from 'vue';\n  import { Component, Prop } from 'vue-property-decorator';\n\n  @Component\n  export default class TopoChart extends Vue {\n    @Prop() private title!: string;\n    @Prop() private data!: any;\n    @Prop() private unit!: string;\n    @Prop() private intervalTime!: number[];\n    @Prop() private precent!: boolean;\n    get content() {\n      if (!this.data.length) {\n        return 0;\n      }\n      const noZero = this.data.filter((i: any) => i);\n      const sum = noZero.length\n        ? noZero.reduce((preValue: number, curValue: number, index: number, array: number[]) => preValue + curValue) /\n          noZero.length\n        : 0;\n      return this.precent ? sum / 100 : sum;\n    }\n    get responseConfig() {\n      return {\n        color: ['#3f96e3ee', '#6be6c1'],\n        tooltip: {\n          trigger: 'axis',\n          backgroundColor: '#333844',\n          textStyle: {\n            fontSize: 13,\n          },\n        },\n        grid: {\n          top: 4,\n          left: 0,\n          right: 0,\n          bottom: 7,\n          containLabel: true,\n        },\n        xAxis: {\n          type: 'category',\n          axisTick: {\n            lineStyle: { color: '#c1c5ca41' },\n            alignWithLabel: true,\n          },\n          splitLine: { show: false },\n          axisLine: { lineStyle: { color: 'rgba(0,0,0,0)' } },\n          axisLabel: { color: '#9da5b2', fontSize: '11' },\n        },\n        yAxis: {\n          type: 'value',\n          axisLine: { show: false },\n          axisTick: { show: false },\n          splitLine: { lineStyle: { color: '#c1c5ca41', type: 'dashed' } },\n          axisLabel: { color: '#9da5b2', fontSize: '11' },\n        },\n        series: [\n          {\n            data: this.data.map((i: any, index: number) => [this.intervalTime[index], i]),\n            type: this.precent ? 'bar' : 'line',\n            symbol: 'none',\n            barMaxWidth: 5,\n            lineStyle: {\n              width: 1,\n            },\n          },\n        ],\n      };\n    }\n  }\n</script>\n"]}]}