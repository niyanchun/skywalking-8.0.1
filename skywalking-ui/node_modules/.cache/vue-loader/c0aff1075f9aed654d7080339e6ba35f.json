{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/chart/topo.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/chart/topo.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.micro-topo-chart {\n  height: 100%;\n  width: 100%;\n  .topo-svg {\n    display: block;\n    width: 100%;\n  }\n  .topo-line {\n    stroke-linecap: round;\n    stroke-width: 1.3px !important;\n    stroke-dasharray: 13 7;\n    fill: none;\n    animation: topo-dash 1s linear infinite !important;\n  }\n  .topo-line-anchor {\n    cursor: pointer;\n  }\n  .topo-text {\n    font-family: 'Lato', 'Source Han Sans CN', 'Microsoft YaHei', sans-serif;\n    fill: #ddd;\n    font-size: 11px;\n    opacity: 0.8;\n  }\n  .topo-tool {\n    display: none;\n  }\n  .topo-tool-i {\n    cursor: pointer;\n    .tool-hexagon {\n      fill: #3f4450;\n      stroke: #217ef2;\n      stroke-width: 2;\n      stroke-opacity: 0.5;\n    }\n    &:hover {\n      .tool-hexagon {\n        stroke-opacity: 1;\n      }\n    }\n  }\n}\n@keyframes topo-dash {\n  from {\n    stroke-dashoffset: 20;\n  }\n  to {\n    stroke-dashoffset: 0;\n  }\n}\n",{"version":3,"sources":["topo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"topo.vue","sourceRoot":"src/views/components/topology/chart","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n<template>\n  <div class=\"micro-topo-chart\"></div>\n</template>\n<script lang=\"js\">\n  import * as d3 from 'd3';\n  import d3tip from 'd3-tip';\n  import zoom from './utils/zoom';\n  import { simulationInit, simulationSkip } from './utils/simulation';\n  import nodeElement from './utils/nodeElement';\n  import { linkElement, anchorElement } from './utils/linkElement';\n  import tool from './utils/tool';\n  export default {\n    props: {\n      current: {\n        type: Object,\n        default: () => ({}),\n      },\n      nodes: {\n        type: Array,\n        default: () => [],\n      },\n      links: {\n        type: Array,\n        default: () => [],\n      },\n    },\n    data() {\n      return {\n        height: 600,\n        simulation: '',\n      };\n    },\n    beforeDestroy() {\n      window.removeEventListener('resize', this.resize);\n    },\n    mounted() {\n      window.addEventListener('resize', this.resize);\n      this.svg = d3\n        .select(this.$el)\n        .append('svg')\n        .attr('class', 'topo-svg')\n        .attr('height', this.$el.clientHeight);\n      this.tip = d3tip()\n        .attr('class', 'd3-tip')\n        .offset([-8, 0]);\n      this.graph = this.svg.append('g').attr('class', 'topo-svg_graph');\n      this.graph.call(this.tip);\n      this.simulation = simulationInit(d3, this.nodes, this.links, this.ticked);\n      this.svg.call(zoom(d3, this.graph));\n      this.node = this.graph.append('g').selectAll('.topo-node');\n      this.link = this.graph.append('g').selectAll('.topo-line');\n      this.anchor = this.graph.append('g').selectAll('.topo-line-anchor');\n      this.tool = tool(this.graph, [\n        {icon: 'API', click: this.handleGoEndpoint},\n        {icon: 'INSTANCE', click: this.handleGoInstance},\n        {icon: 'TRACE', click: this.handleGoTrace},\n        {icon: 'ALARM', click: this.handleGoAlarm},\n        {icon: ''},\n        {icon: ''},\n      ]);\n      this.svg.on('click', (d, i) => {\n        event.stopPropagation();\n        event.preventDefault();\n        this.$store.commit('rocketTopo/SET_NODE', {});\n        this.$store.commit('rocketTopo/SET_LINK', {});\n        this.$store.dispatch('rocketTopo/CLEAR_TOPO_INFO');\n        this.tool.attr('style', 'display: none');\n      });\n    },\n    watch: {\n      nodes: 'update',\n      links: 'update',\n    },\n    methods: {\n      // alarm hexagon\n      handleGoAlarm() {\n        this.$emit('setDialog', 'alarm');\n      },\n      // trace hexagon\n      handleGoTrace() {\n        this.$emit('setDialog', 'trace');\n      },\n      // instace hexagon\n      handleGoInstance() {\n        this.$emit('setDialog', 'instance');\n      },\n      // endpoint hexagon\n      handleGoEndpoint() {\n        this.$store.dispatch('SELECT_SERVICE', {\n          service: { key: this.current.id, label: this.current.name },\n          duration: this.$store.getters.durationTime,\n        });\n        this.$emit('setDialog', 'endpoint');\n      },\n      handleNodeClick(d) {\n        this.$emit('setCurrent', { key: d.id, label: d.name });\n        const {x, y, vx, vy, fx, fy, index, ...rest} = d;\n        this.$store.dispatch('rocketTopo/CLEAR_TOPO_INFO');\n        this.$store.commit('rocketTopo/SET_NODE', rest);\n        this.$store.commit('rocketTopo/SET_LINK', {});\n      },\n      handleLinkClick(d) {\n        event.stopPropagation();\n        this.$store.commit('rocketTopo/SET_NODE', {});\n        this.$store.commit('rocketTopo/SET_LINK', d);\n        this.$store.dispatch('rocketTopo/CLEAR_TOPO_INFO');\n        this.$store.commit('rocketTopo/SET_MODE', d.detectPoints);\n        this.$store.dispatch(this.$store.state.rocketTopo.mode ? 'rocketTopo/GET_TOPO_SERVICE_INFO' :\n            'rocketTopo/GET_TOPO_CLIENT_INFO', { ...d, duration: this.$store.getters.durationTime });\n        this.$store.commit('rocketTopo/SET_CALLBACK', () => {\n          this.$store.dispatch(this.$store.state.rocketTopo.mode ? 'rocketTopo/GET_TOPO_SERVICE_INFO' :\n            'rocketTopo/GET_TOPO_CLIENT_INFO', { ...d, duration: this.$store.getters.durationTime });\n        });\n      },\n      resize() {\n        this.svg.attr('height', this.$el.clientHeight);\n      },\n      update() {\n        // node element\n        const that = this;\n        this.node = this.node.data(this.nodes, (d) => d.id);\n        this.node.exit().remove();\n        this.node = nodeElement(d3, this.node.enter(), this.tool, {\n          dragstart: this.dragstart,\n          dragged: this.dragged,\n          dragended: this.dragended,\n          handleNodeClick: this.handleNodeClick,\n        }, this.tip).merge(this.node);\n        // line element\n        this.link = this.link.data(this.links, (d) => d.id);\n        this.link.exit().remove();\n        this.link = linkElement(this.link.enter()).merge(this.link);\n        // anchorElement\n        this.anchor = this.anchor.data(this.links, (d) => d.id);\n        this.anchor.exit().remove();\n        this.anchor = anchorElement(this.anchor.enter(), {\n          handleLinkClick: this.handleLinkClick,\n          $tip: (data) =>\n          `\n            <div class=\"mb-5\"><span class=\"grey\">${this.$t('cpm')}: </span>${data.cpm}</div>\n            <div class=\"mb-5\"><span class=\"grey\">${this.$t('latency')}: </span>${data.latency}</div>\n            <div><span class=\"grey\">${this.$t('detectPoint')}:</span>${data.detectPoints.join(' | ')}</div>\n          `,\n        }, this.tip).merge(this.anchor);\n        // force element\n        this.simulation.nodes(this.nodes);\n        this.simulation.force('link').links(this.links).id((d) => d.id);\n        simulationSkip(d3, this.simulation, this.ticked);\n      },\n      ticked() {\n        this.link.attr('d', (d) => `M${d.source.x} ${d.source.y} Q ${(d.source.x + d.target.x) / 2} ${(d.target.y + d.source.y) / 2 - 90} ${d.target.x} ${d.target.y}`);\n        this.anchor.attr('transform', (d) => `translate(${(d.source.x + d.target.x) / 2}, ${(d.target.y + d.source.y) / 2 - 45})`);\n        this.node.attr('transform', (d) => `translate(${d.x - 22},${d.y - 22})`);\n      },\n      dragstart(d) {\n        this.node._groups[0].forEach((g) => {\n          g.__data__.fx = g.__data__.x;\n          g.__data__.fy = g.__data__.y;\n        });\n        if (!d3.event.active) {\n          this.simulation.alphaTarget(0.1).restart();\n        }\n        d3.event.sourceEvent.stopPropagation();\n      },\n      dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n        d.x = d.fx;\n        d.y = d.fy;\n      },\n      dragended() {\n        if (!d3.event.active) {\n          this.simulation.alphaTarget(0);\n        }\n      },\n    },\n  };\n</script>\n<style lang=\"scss\">\n  .micro-topo-chart {\n    height: 100%;\n    width: 100%;\n    .topo-svg {\n      display: block;\n      width: 100%;\n    }\n    .topo-line {\n      stroke-linecap: round;\n      stroke-width: 1.3px !important;\n      stroke-dasharray: 13 7;\n      fill: none;\n      animation: topo-dash 1s linear infinite !important;\n    }\n    .topo-line-anchor {\n      cursor: pointer;\n    }\n    .topo-text {\n      font-family: 'Lato', 'Source Han Sans CN', 'Microsoft YaHei', sans-serif;\n      fill: #ddd;\n      font-size: 11px;\n      opacity: 0.8;\n    }\n    .topo-tool {\n      display: none;\n    }\n    .topo-tool-i {\n      cursor: pointer;\n      .tool-hexagon {\n        fill: #3f4450;\n        stroke: #217ef2;\n        stroke-width: 2;\n        stroke-opacity: 0.5;\n      }\n      &:hover {\n        .tool-hexagon {\n          stroke-opacity: 1;\n        }\n      }\n    }\n  }\n  @keyframes topo-dash {\n    from {\n      stroke-dashoffset: 20;\n    }\n    to {\n      stroke-dashoffset: 0;\n    }\n  }\n</style>\n"]}]}