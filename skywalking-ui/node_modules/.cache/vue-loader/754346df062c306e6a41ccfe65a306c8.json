{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/topo-services.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/topology/topo-services.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.topo-server.dao-select .dao-select-main .dao-select-switch {\n  border: 0;\n}\n",{"version":3,"sources":["topo-services.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA","file":"topo-services.vue","sourceRoot":"src/views/components/topology","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n<template>\n  <div class=\"link-topo-aside-box\" style=\"padding:0;\">\n    <TopoSelect :current=\"service\" :data=\"services\" @onChoose=\"handleChange\" />\n  </div>\n</template>\n<script lang=\"ts\">\n  import { DurationTime } from '@/types/global';\n  import compareObj from '@/utils/comparison';\n  import Axios, { AxiosResponse } from 'axios';\n  import { Component, Vue, Watch } from 'vue-property-decorator';\n  import { Action, Getter, Mutation } from 'vuex-class';\n  import TopoSelect from './topo-select.vue';\n\n  @Component({ components: { TopoSelect } })\n  export default class TopoServices extends Vue {\n    @Getter('durationTime') public durationTime: any;\n    @Action('rocketTopo/GET_TOPO') public GET_TOPO: any;\n    @Mutation('rocketTopoGroup/UNSELECT_GROUP') private UNSELECT_GROUP: any;\n    private services = [{ key: 0, label: 'All services' }];\n    private service = { key: 0, label: 'All services' };\n\n    private fetchData() {\n      Axios.post('/graphql', {\n        query: `\n      query queryServices($duration: Duration!) {\n        services: getAllServices(duration: $duration) {\n          key: id\n          label: name\n        }\n      }`,\n        variables: {\n          duration: this.durationTime,\n        },\n      }).then((res: AxiosResponse) => {\n        this.services = res.data.data.services\n          ? [{ key: 0, label: 'All services' }, ...res.data.data.services]\n          : [{ key: 0, label: 'All services' }];\n      });\n    }\n\n    @Watch('durationTime')\n    private watchDurationTime(newValue: DurationTime, oldValue: DurationTime) {\n      // Avoid repeating fetchData() after enter the component for the first time.\n      if (compareObj(newValue, oldValue)) {\n        this.fetchData();\n      }\n    }\n\n    private handleChange(i: any) {\n      this.service = i;\n      this.UNSELECT_GROUP();\n      this.GET_TOPO({\n        serviceId: this.service.key,\n        duration: this.durationTime,\n      });\n    }\n\n    private created() {\n      this.fetchData();\n      const groups = localStorage.getItem('topology-groups');\n      if (groups) {\n        const jsonGroup = JSON.parse(groups);\n        if (!jsonGroup.length) {\n          this.GET_TOPO({\n            serviceId: 0,\n            duration: this.durationTime,\n          });\n        }\n      } else {\n        this.GET_TOPO({\n          serviceId: this.service.key,\n          duration: this.durationTime,\n        });\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  .topo-server.dao-select .dao-select-main .dao-select-switch {\n    border: 0;\n  }\n</style>\n"]}]}