{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/dashboard/tool-bar-btns.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/dashboard/tool-bar-btns.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component, Prop } from 'vue-property-decorator';\nimport { Action, Mutation } from 'vuex-class';\nimport { readFile } from '@/utils/readFile';\nimport { saveFile } from '@/utils/saveFile';\n@Component({})\nexport default class ToolBarBtns extends Vue {\n  @Prop() private compType!: any;\n  @Prop() private rocketGlobal!: any;\n  @Prop() private rocketComps!: any;\n  @Prop() private durationTime!: any;\n  @Prop() private rocketOption: any;\n  @Mutation('SET_COMPS_TREE') private SET_COMPS_TREE: any;\n  @Mutation('IMPORT_TREE') private IMPORT_TREE: any;\n  @Action('SET_EDIT') private SET_EDIT: any;\n  @Action('MIXHANDLE_GET_OPTION') private MIXHANDLE_GET_OPTION: any;\n\n  private handleOption() {\n    return this.MIXHANDLE_GET_OPTION({\n      compType: this.compType,\n      duration: this.durationTime,\n      keywordServiceName: this.rocketOption.keywordService,\n    });\n  }\n  private handleSetEdit() {\n    this.SET_EDIT(!this.rocketGlobal.edit);\n  }\n  private async importData(event: any) {\n    try {\n      const data: any = await readFile(event);\n      if (!Array.isArray(data)) {\n        throw new Error();\n      }\n      const { children, name, type } = data[0];\n      if (children && name && type) {\n        this.IMPORT_TREE(data);\n      } else {\n        throw new Error('error');\n      }\n      const el: any = document.getElementById('tool-bar-file');\n      el!.value = '';\n    } catch (e) {\n      this.$modal.show('dialog', { text: 'ERROR' });\n    }\n  }\n  private exportData() {\n    const group = this.rocketComps.tree[this.rocketComps.group];\n    delete group.query;\n    const name = 'dashboard.json';\n\n    saveFile([group], name);\n  }\n}\n",{"version":3,"sources":["tool-bar-btns.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"tool-bar-btns.vue","sourceRoot":"src/views/components/dashboard","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n\n<template>\n  <div class=\"flex-h btn-box\">\n    <div class=\"rk-dashboard-bar-btn\">\n      <span v-tooltip:bottom=\"{ content: rocketGlobal.edit ? 'view' : 'edit' }\">\n        <svg\n          class=\"icon lg vm cp rk-btn ghost\"\n          :style=\"`color:${!rocketGlobal.edit ? '' : '#ffc107'}`\"\n          @click=\"handleSetEdit\"\n        >\n          <use :xlink:href=\"!rocketGlobal.edit ? '#lock' : '#lock-open'\"></use>\n        </svg>\n      </span>\n    </div>\n    <div class=\"rk-dashboard-bar-btn\">\n      <span v-tooltip:bottom=\"{ content: 'import' }\">\n        <input id=\"tool-bar-file\" type=\"file\" name=\"file\" title=\"\" accept=\".json\" @change=\"importData\" />\n        <label class=\"rk-btn ghost input-label\" for=\"tool-bar-file\">\n          <svg class=\"icon lg vm cp \" :style=\"`marginTop: 0px`\">\n            <use :xlink:href=\"'#folder_open'\"></use>\n          </svg>\n        </label>\n      </span>\n    </div>\n    <div class=\"rk-dashboard-bar-btn\">\n      <span v-tooltip:bottom=\"{ content: 'export' }\">\n        <svg class=\"icon lg vm cp rk-btn ghost\" @click=\"exportData\">\n          <use :xlink:href=\"'#save_alt'\"></use>\n        </svg>\n      </span>\n    </div>\n\n    <div class=\"rk-dashboard-bar-btn\">\n      <svg class=\"icon lg vm cp rk-btn ghost\" @click=\"handleOption\">\n        <use xlink:href=\"#retry\"></use>\n      </svg>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import { Vue, Component, Prop } from 'vue-property-decorator';\n  import { Action, Mutation } from 'vuex-class';\n  import { readFile } from '@/utils/readFile';\n  import { saveFile } from '@/utils/saveFile';\n  @Component({})\n  export default class ToolBarBtns extends Vue {\n    @Prop() private compType!: any;\n    @Prop() private rocketGlobal!: any;\n    @Prop() private rocketComps!: any;\n    @Prop() private durationTime!: any;\n    @Prop() private rocketOption: any;\n    @Mutation('SET_COMPS_TREE') private SET_COMPS_TREE: any;\n    @Mutation('IMPORT_TREE') private IMPORT_TREE: any;\n    @Action('SET_EDIT') private SET_EDIT: any;\n    @Action('MIXHANDLE_GET_OPTION') private MIXHANDLE_GET_OPTION: any;\n\n    private handleOption() {\n      return this.MIXHANDLE_GET_OPTION({\n        compType: this.compType,\n        duration: this.durationTime,\n        keywordServiceName: this.rocketOption.keywordService,\n      });\n    }\n    private handleSetEdit() {\n      this.SET_EDIT(!this.rocketGlobal.edit);\n    }\n    private async importData(event: any) {\n      try {\n        const data: any = await readFile(event);\n        if (!Array.isArray(data)) {\n          throw new Error();\n        }\n        const { children, name, type } = data[0];\n        if (children && name && type) {\n          this.IMPORT_TREE(data);\n        } else {\n          throw new Error('error');\n        }\n        const el: any = document.getElementById('tool-bar-file');\n        el!.value = '';\n      } catch (e) {\n        this.$modal.show('dialog', { text: 'ERROR' });\n      }\n    }\n    private exportData() {\n      const group = this.rocketComps.tree[this.rocketComps.group];\n      delete group.query;\n      const name = 'dashboard.json';\n\n      saveFile([group], name);\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .rk-dashboard-bar-btn {\n    padding: 0 5px;\n    border-right: 2px solid #252a2f;\n    height: 19px;\n  }\n  #tool-bar-file {\n    display: none;\n  }\n  .input-label {\n    display: inline;\n    line-height: inherit;\n  }\n  .btn-box {\n    height: 58px;\n  }\n</style>\n"]}]}