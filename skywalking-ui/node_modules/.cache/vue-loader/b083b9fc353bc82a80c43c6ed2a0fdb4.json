{"remainingRequest":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/profile/profile-trace-detail.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/src/views/components/profile/profile-trace-detail.vue","mtime":1592485041000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Files/Study/apm/apache-skywalking-apm-8.0.1/skywalking-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.profile-trace-dashboard {\n  padding: 20px;\n  width: 68%;\n  min-width: 350px;\n  min-height: 150px;\n  flex-shrink: 0;\n  height: 100%;\n  overflow: auto;\n}\n.profile-trace-detail-wrapper {\n  padding: 8px 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n.profile-trace-detail-ids {\n  background-color: rgba(0, 0, 0, 0);\n  outline: 0;\n  border-style: unset;\n  color: inherit;\n  border: 1px solid;\n  border-radius: 4px;\n}\nselect {\n  margin: 0 10px;\n}\n.profile-analyze-btn {\n  color: #fff;\n  padding: 3px 9px;\n  background-color: #484b55;\n  &.bg-blue {\n    background-color: #448dfe;\n  }\n}\n",{"version":3,"sources":["profile-trace-detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"profile-trace-detail.vue","sourceRoot":"src/views/components/profile","sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n\n<template>\n  <div class=\"profile-trace-dashboard flex-v\">\n    <div class=\"profile-trace-detail-wrapper mb-5 blue sm\">\n      <select class=\"profile-trace-detail-ids\">\n        <option v-for=\"i in currentSegment.traceIds\" :value=\"i\" :key=\"i\">{{ i }}</option>\n      </select>\n      <select class=\"profile-trace-detail-ids\" @change=\"spanModeChange($event)\">\n        <option value=\"include\" key=\"include\">{{ this.$t('includeChildren') }}</option>\n        <option value=\"exclude\" key=\"exclude\">{{ this.$t('excludeChildren') }}</option>\n      </select>\n      <a class=\"profile-analyze-btn bg-blue profile-trace-detail-ids\" @click=\"analyzeProfile()\">\n        <span class=\"vm\">{{ this.$t('analyze') }}</span>\n      </a>\n    </div>\n    <TraceDetailChartTable\n      :data=\"segmentSpans\"\n      :traceId=\"currentSegment.traceIds[0]\"\n      :showBtnDetail=\"true\"\n      :HeaderType=\"'profile'\"\n      @selectSpan=\"selectSpan\"\n    />\n    <div>\n      <ProfileDetailChartTable :data=\"profileAnalyzation\" :highlightTop=\"highlightTop\" v-if=\"!loading\" />\n      <div class=\"rk-trace-t-loading\" v-show=\"loading\">\n        <svg class=\"icon loading\">\n          <use xlink:href=\"#spinner\"></use>\n        </svg>\n      </div>\n      <div v-if=\"message\">{{ message }}</div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import { Duration, Option } from '@/types/global';\n  import { Component, Prop, Vue, Watch } from 'vue-property-decorator';\n  import { Action, State, Mutation } from 'vuex-class';\n  import { TraceDetailChartTable } from '../common';\n  import ProfileDetailChartTable from './profile-detail-chart-table.vue';\n\n  @Component({\n    components: { TraceDetailChartTable, ProfileDetailChartTable },\n  })\n  export default class ProfileTraceDetail extends Vue {\n    @Prop() private segmentSpans: any;\n    @Prop() private currentSegment: any;\n    @Prop() private profileAnalyzation: any;\n    @Prop() private highlightTop!: boolean;\n    @Prop() private currentSpan!: any;\n    @Action('profileStore/GET_PROFILE_ANALYZE') private GET_PROFILE_ANALYZE: any;\n    @Mutation('profileStore/SET_CURRENT_SPAN') private SET_CURRENT_SPAN: any;\n\n    private timeRange: Array<{ start: number; end: number }> = [];\n    private mode: string = 'include';\n    private message: string = '';\n    private loading: boolean = false;\n\n    private selectSpan(data: any) {\n      this.SET_CURRENT_SPAN(data);\n    }\n    private spanModeChange(item: any) {\n      this.mode = item.target.value;\n      this.updateTimeRange();\n    }\n    private updateTimeRange() {\n      if (this.mode === 'include') {\n        this.timeRange = [\n          {\n            start: this.currentSpan.startTime,\n            end: this.currentSpan.endTime,\n          },\n        ];\n      } else {\n        const { children, startTime, endTime } = this.currentSpan;\n        let timeRange = [];\n\n        if (!children || !children.length) {\n          this.timeRange = [\n            {\n              start: this.currentSpan.startTime,\n              end: this.currentSpan.endTime,\n            },\n          ];\n          return;\n        }\n        for (const item of children) {\n          timeRange.push(\n            {\n              start: startTime,\n              end: item.startTime,\n            },\n            {\n              start: item.endTime,\n              end: endTime,\n            },\n          );\n        }\n        timeRange = timeRange.reduce((prev: any[], cur) => {\n          let isUpdate = false;\n          for (const item of prev) {\n            if (cur.start <= item.end && item.start <= cur.start) {\n              isUpdate = true;\n              item.start = item.start < cur.start ? cur.start : item.start;\n              item.end = item.end < cur.end ? item.end : cur.end;\n            }\n          }\n          if (!isUpdate) {\n            prev.push(cur);\n          }\n          return prev;\n        }, []);\n        this.timeRange = timeRange.filter((item: any) => item.start !== item.end);\n      }\n    }\n    private analyzeProfile() {\n      this.loading = true;\n      this.updateTimeRange();\n      this.GET_PROFILE_ANALYZE({\n        segmentId: this.currentSegment.segmentId,\n        timeRanges: this.timeRange,\n      })\n        .then((result: string) => {\n          this.message = result;\n        })\n        .catch((err: any) => {\n          throw err;\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .profile-trace-dashboard {\n    padding: 20px;\n    width: 68%;\n    min-width: 350px;\n    min-height: 150px;\n    flex-shrink: 0;\n    height: 100%;\n    overflow: auto;\n  }\n  .profile-trace-detail-wrapper {\n    padding: 8px 0;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  }\n  .profile-trace-detail-ids {\n    background-color: rgba(0, 0, 0, 0);\n    outline: 0;\n    border-style: unset;\n    color: inherit;\n    border: 1px solid;\n    border-radius: 4px;\n  }\n  select {\n    margin: 0 10px;\n  }\n  .profile-analyze-btn {\n    color: #fff;\n    padding: 3px 9px;\n    background-color: #484b55;\n    &.bg-blue {\n      background-color: #448dfe;\n    }\n  }\n</style>\n"]}]}